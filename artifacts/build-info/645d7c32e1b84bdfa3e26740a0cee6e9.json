{
	"id": "645d7c32e1b84bdfa3e26740a0cee6e9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"fund_shares.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.1;\r\n\r\n// Import OpenZeppelin dependencies using a specific version\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\";\r\n\r\n/**\r\n * @title WETH ERC-4626 Vault\r\n * @dev This contract allows users to deposit WETH, mint proportional fund shares,\r\n *      and send WETH to a designated fund portfolio while relying on an external\r\n *      portfolio value update for tracking share value.\r\n */\r\ncontract WETHVault is ERC20, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public immutable weth;\r\n    address public immutable fundPortfolio;\r\n    mapping(address => bool) public admins; // Admins who can update portfolio value\r\n    uint256 public portfolioValue; // Total fund value tracked externally\r\n\r\n    event WithdrawalRequest(address indexed user, uint256 amount);\r\n\r\n    constructor(\r\n        address _weth,\r\n        address _fundPortfolio,\r\n        string memory _name,\r\n        string memory _symbol\r\n    ) ERC20(_name, _symbol) {\r\n        require(_weth != address(0), \"WETH address cannot be zero\");\r\n        require(_fundPortfolio != address(0), \"Fund portfolio address cannot be zero\");\r\n        \r\n        weth = IERC20(_weth);\r\n        fundPortfolio = _fundPortfolio;\r\n        admins[msg.sender] = true; // Contract deployer is an admin by default\r\n    }\r\n\r\n    /**\r\n     * @dev Allows an admin to update the total portfolio value (tracked externally).\r\n     */\r\n    function setPortfolioValue(uint256 _newValue) external {\r\n        require(admins[msg.sender], \"Not an admin\");\r\n        require(_newValue > 0, \"Portfolio value must be positive\");\r\n        portfolioValue = _newValue;\r\n    }\r\n\r\n    /**\r\n     * @dev Deposit WETH, mint proportional shares, and send WETH to the fund portfolio.\r\n     * @param amount The amount of WETH to deposit.\r\n     */\r\n    function deposit(uint256 amount) external nonReentrant {\r\n        require(amount > 0, \"Amount must be greater than zero\");\r\n        \r\n        // Transfer WETH from user to this contract\r\n        weth.safeTransferFrom(msg.sender, address(this), amount);\r\n        \r\n        // Forward WETH to fund portfolio (EOA account)\r\n        weth.safeTransfer(fundPortfolio, amount);\r\n        \r\n        // Calculate shares to mint based on total portfolio value\r\n        uint256 supply = totalSupply();\r\n        uint256 shares = (supply == 0 || portfolioValue == 0) ? amount : (amount * supply) / portfolioValue;\r\n        \r\n        _mint(msg.sender, shares);\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw WETH by burning vault shares.\r\n     * @param shares The number of vault shares to redeem.\r\n     */\r\n    function withdraw(uint256 shares) external nonReentrant {\r\n        require(shares > 0, \"Shares must be greater than zero\");\r\n        require(balanceOf(msg.sender) >= shares, \"Insufficient shares\");\r\n\r\n        uint256 supply = totalSupply();\r\n        uint256 amount = (shares * portfolioValue) / supply; // Compute WETH equivalent\r\n\r\n        _burn(msg.sender, shares);\r\n\r\n        // Admin or bot must send WETH manually from fund portfolio (EOA) to user\r\n        emit WithdrawalRequest(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value of a single share based on fundPortfolio's total valuation.\r\n     */\r\n    function pricePerShare() external view returns (uint256) {\r\n        uint256 supply = totalSupply();\r\n        return supply == 0 ? 1e18 : (portfolioValue * 1e18) / supply;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds or removes admin privileges.\r\n     */\r\n    function setAdmin(address admin, bool status) external {\r\n        require(admins[msg.sender], \"Not an admin\");\r\n        admins[admin] = status;\r\n    }\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"fund_shares.sol": {
				"WETHVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_fundPortfolio",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawalRequest",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "admins",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundPortfolio",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "portfolioValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pricePerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newValue",
									"type": "uint256"
								}
							],
							"name": "setPortfolioValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weth",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract allows users to deposit WETH, mint proportional fund shares,      and send WETH to a designated fund portfolio while relying on an external      portfolio value update for tracking share value.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"deposit(uint256)": {
								"details": "Deposit WETH, mint proportional shares, and send WETH to the fund portfolio.",
								"params": {
									"amount": "The amount of WETH to deposit."
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"pricePerShare()": {
								"details": "Returns the value of a single share based on fundPortfolio's total valuation."
							},
							"setAdmin(address,bool)": {
								"details": "Adds or removes admin privileges."
							},
							"setPortfolioValue(uint256)": {
								"details": "Allows an admin to update the total portfolio value (tracked externally)."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"withdraw(uint256)": {
								"details": "Withdraw WETH by burning vault shares.",
								"params": {
									"shares": "The number of vault shares to redeem."
								}
							}
						},
						"title": "WETH ERC-4626 Vault",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"fund_shares.sol\":737:3953  contract WETHVault is ERC20, ReentrancyGuard {... */\n  mstore(0x40, 0xc0)\n    /* \"fund_shares.sol\":1137:1626  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"fund_shares.sol\":1281:1286  _name */\n  dup2\n    /* \"fund_shares.sol\":1288:1295  _symbol */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_8\n    /* \"fund_shares.sol\":1281:1286  _name */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_10\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x05\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"fund_shares.sol\":1316:1335  _weth != address(0) */\n  dup5\n  and\n    /* \"fund_shares.sol\":1308:1367  require(_weth != address(0), \"WETH address cannot be zero\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4500:4502   */\n  0x20\n    /* \"fund_shares.sol\":1308:1367  require(_weth != address(0), \"WETH address cannot be zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4482:4503   */\n  mstore\n    /* \"#utility.yul\":4539:4541   */\n  0x1b\n    /* \"#utility.yul\":4519:4537   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4512:4542   */\n  mstore\n    /* \"#utility.yul\":4578:4607   */\n  0x5745544820616464726573732063616e6e6f74206265207a65726f0000000000\n    /* \"#utility.yul\":4558:4576   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4551:4608   */\n  mstore\n    /* \"#utility.yul\":4625:4643   */\n  0x64\n  add\n    /* \"fund_shares.sol\":1308:1367  require(_weth != address(0), \"WETH address cannot be zero\") */\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"fund_shares.sol\":1386:1414  _fundPortfolio != address(0) */\n  dup4\n  and\n    /* \"fund_shares.sol\":1378:1456  require(_fundPortfolio != address(0), \"Fund portfolio address cannot be zero\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4856:4858   */\n  0x20\n    /* \"fund_shares.sol\":1378:1456  require(_fundPortfolio != address(0), \"Fund portfolio address cannot be zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4838:4859   */\n  mstore\n    /* \"#utility.yul\":4895:4897   */\n  0x25\n    /* \"#utility.yul\":4875:4893   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4868:4898   */\n  mstore\n    /* \"#utility.yul\":4934:4968   */\n  0x46756e6420706f7274666f6c696f20616464726573732063616e6e6f74206265\n    /* \"#utility.yul\":4914:4932   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4907:4969   */\n  mstore\n  shl(0xd8, 0x207a65726f)\n    /* \"#utility.yul\":4985:5003   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":4978:5013   */\n  mstore\n    /* \"#utility.yul\":5030:5049   */\n  0x84\n  add\n    /* \"fund_shares.sol\":1378:1456  require(_fundPortfolio != address(0), \"Fund portfolio address cannot be zero\") */\n  tag_14\n    /* \"#utility.yul\":4654:5055   */\n  jump\n    /* \"fund_shares.sol\":1378:1456  require(_fundPortfolio != address(0), \"Fund portfolio address cannot be zero\") */\ntag_16:\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"fund_shares.sol\":1477:1497  weth = IERC20(_weth) */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"fund_shares.sol\":1508:1538  fundPortfolio = _fundPortfolio */\n  and\n  0xa0\n  mstore\n    /* \"fund_shares.sol\":1556:1566  msg.sender */\n  caller\n    /* \"fund_shares.sol\":1549:1567  admins[msg.sender] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"fund_shares.sol\":1549:1555  admins */\n  0x06\n    /* \"fund_shares.sol\":1549:1567  admins[msg.sender] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"fund_shares.sol\":1549:1574  admins[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"fund_shares.sol\":1570:1574  true */\n  0x01\n    /* \"fund_shares.sol\":1549:1574  admins[msg.sender] = true */\n  or\n  swap1\n  sstore\n    /* \"fund_shares.sol\":737:3953  contract WETHVault is ERC20, ReentrancyGuard {... */\n  jump(tag_27)\n    /* \"#utility.yul\":14:191   */\ntag_20:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_29:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_21:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:1051   */\ntag_22:\n    /* \"#utility.yul\":382:387   */\n  0x00\n    /* \"#utility.yul\":435:438   */\n  dup3\n    /* \"#utility.yul\":428:432   */\n  0x1f\n    /* \"#utility.yul\":420:426   */\n  dup4\n    /* \"#utility.yul\":416:433   */\n  add\n    /* \"#utility.yul\":412:439   */\n  slt\n    /* \"#utility.yul\":402:457   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":453:454   */\n  0x00\n    /* \"#utility.yul\":450:451   */\n  0x00\n    /* \"#utility.yul\":443:455   */\n  revert\n    /* \"#utility.yul\":402:457   */\ntag_32:\n    /* \"#utility.yul\":480:493   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":505:535   */\n  dup2\n  gt\n    /* \"#utility.yul\":502:558   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":538:556   */\n  tag_34\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":587:589   */\n  0x40\n    /* \"#utility.yul\":581:590   */\n  mload\n    /* \"#utility.yul\":679:681   */\n  0x1f\n    /* \"#utility.yul\":641:658   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":637:668   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":670:672   */\n  0x3f\n    /* \"#utility.yul\":633:673   */\n  add\n    /* \"#utility.yul\":629:683   */\n  and\n    /* \"#utility.yul\":617:684   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":699:733   */\n  dup2\n  gt\n    /* \"#utility.yul\":735:757   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":696:758   */\n  or\n    /* \"#utility.yul\":693:781   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":761:779   */\n  tag_36\n  tag_21\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":797:799   */\n  0x40\n    /* \"#utility.yul\":790:812   */\n  mstore\n    /* \"#utility.yul\":821:843   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":862:881   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":858:888   */\n  add\n    /* \"#utility.yul\":855:894   */\n  dup6\n  lt\n    /* \"#utility.yul\":852:911   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":907:908   */\n  0x00\n    /* \"#utility.yul\":904:905   */\n  0x00\n    /* \"#utility.yul\":897:909   */\n  revert\n    /* \"#utility.yul\":852:911   */\ntag_37:\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":957:961   */\n  0x20\n    /* \"#utility.yul\":949:955   */\n  dup6\n    /* \"#utility.yul\":945:962   */\n  add\n    /* \"#utility.yul\":938:942   */\n  0x20\n    /* \"#utility.yul\":930:936   */\n  dup4\n    /* \"#utility.yul\":926:943   */\n  add\n    /* \"#utility.yul\":920:971   */\n  mcopy\n    /* \"#utility.yul\":1019:1020   */\n  0x00\n    /* \"#utility.yul\":991:1010   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":1012:1016   */\n  0x20\n    /* \"#utility.yul\":987:1017   */\n  add\n    /* \"#utility.yul\":980:1021   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":995:1001   */\n  swap4\n    /* \"#utility.yul\":328:1051   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1784   */\ntag_3:\n    /* \"#utility.yul\":1173:1179   */\n  0x00\n    /* \"#utility.yul\":1181:1187   */\n  0x00\n    /* \"#utility.yul\":1189:1195   */\n  0x00\n    /* \"#utility.yul\":1197:1203   */\n  0x00\n    /* \"#utility.yul\":1250:1253   */\n  0x80\n    /* \"#utility.yul\":1238:1247   */\n  dup6\n    /* \"#utility.yul\":1229:1236   */\n  dup8\n    /* \"#utility.yul\":1225:1248   */\n  sub\n    /* \"#utility.yul\":1221:1254   */\n  slt\n    /* \"#utility.yul\":1218:1271   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1267:1268   */\n  0x00\n    /* \"#utility.yul\":1264:1265   */\n  0x00\n    /* \"#utility.yul\":1257:1269   */\n  revert\n    /* \"#utility.yul\":1218:1271   */\ntag_39:\n    /* \"#utility.yul\":1290:1330   */\n  tag_40\n    /* \"#utility.yul\":1320:1329   */\n  dup6\n    /* \"#utility.yul\":1290:1330   */\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1280:1330   */\n  swap4\n  pop\n    /* \"#utility.yul\":1349:1398   */\n  tag_41\n    /* \"#utility.yul\":1394:1396   */\n  0x20\n    /* \"#utility.yul\":1383:1392   */\n  dup7\n    /* \"#utility.yul\":1379:1397   */\n  add\n    /* \"#utility.yul\":1349:1398   */\n  tag_20\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1442:1444   */\n  0x40\n    /* \"#utility.yul\":1427:1445   */\n  dup7\n  add\n    /* \"#utility.yul\":1421:1446   */\n  mload\n    /* \"#utility.yul\":1339:1398   */\n  swap1\n  swap4\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1458:1488   */\n  dup2\n  gt\n    /* \"#utility.yul\":1455:1505   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1501:1502   */\n  0x00\n    /* \"#utility.yul\":1498:1499   */\n  0x00\n    /* \"#utility.yul\":1491:1503   */\n  revert\n    /* \"#utility.yul\":1455:1505   */\ntag_42:\n    /* \"#utility.yul\":1524:1585   */\n  tag_43\n    /* \"#utility.yul\":1577:1584   */\n  dup8\n    /* \"#utility.yul\":1568:1574   */\n  dup3\n    /* \"#utility.yul\":1557:1566   */\n  dup9\n    /* \"#utility.yul\":1553:1575   */\n  add\n    /* \"#utility.yul\":1524:1585   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1631:1633   */\n  0x60\n    /* \"#utility.yul\":1616:1634   */\n  dup8\n  add\n    /* \"#utility.yul\":1610:1635   */\n  mload\n    /* \"#utility.yul\":1514:1585   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1610:1635   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1647:1679   */\n  dup2\n  gt\n    /* \"#utility.yul\":1644:1696   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1692:1693   */\n  0x00\n    /* \"#utility.yul\":1689:1690   */\n  0x00\n    /* \"#utility.yul\":1682:1694   */\n  revert\n    /* \"#utility.yul\":1644:1696   */\ntag_44:\n    /* \"#utility.yul\":1715:1778   */\n  tag_45\n    /* \"#utility.yul\":1770:1777   */\n  dup8\n    /* \"#utility.yul\":1759:1767   */\n  dup3\n    /* \"#utility.yul\":1748:1757   */\n  dup9\n    /* \"#utility.yul\":1744:1768   */\n  add\n    /* \"#utility.yul\":1715:1778   */\n  tag_22\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1705:1778   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1056:1784   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1789:2169   */\ntag_23:\n    /* \"#utility.yul\":1868:1869   */\n  0x01\n    /* \"#utility.yul\":1864:1876   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1911:1923   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1932:1993   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1986:1990   */\n  0x7f\n    /* \"#utility.yul\":1978:1984   */\n  dup3\n    /* \"#utility.yul\":1974:1991   */\n  and\n    /* \"#utility.yul\":1964:1991   */\n  swap2\n  pop\n    /* \"#utility.yul\":1932:1993   */\ntag_47:\n    /* \"#utility.yul\":2039:2041   */\n  0x20\n    /* \"#utility.yul\":2031:2037   */\n  dup3\n    /* \"#utility.yul\":2028:2042   */\n  lt\n    /* \"#utility.yul\":2008:2026   */\n  dup2\n    /* \"#utility.yul\":2005:2043   */\n  sub\n    /* \"#utility.yul\":2002:2163   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2085:2095   */\n  0x4e487b71\n    /* \"#utility.yul\":2080:2083   */\n  0xe0\n    /* \"#utility.yul\":2076:2096   */\n  shl\n    /* \"#utility.yul\":2073:2074   */\n  0x00\n    /* \"#utility.yul\":2066:2097   */\n  mstore\n    /* \"#utility.yul\":2120:2124   */\n  0x22\n    /* \"#utility.yul\":2117:2118   */\n  0x04\n    /* \"#utility.yul\":2110:2125   */\n  mstore\n    /* \"#utility.yul\":2148:2152   */\n  0x24\n    /* \"#utility.yul\":2145:2146   */\n  0x00\n    /* \"#utility.yul\":2138:2153   */\n  revert\n    /* \"#utility.yul\":2002:2163   */\ntag_48:\n  pop\n    /* \"#utility.yul\":1789:2169   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2300:2818   */\ntag_25:\n    /* \"#utility.yul\":2402:2404   */\n  0x1f\n    /* \"#utility.yul\":2397:2400   */\n  dup3\n    /* \"#utility.yul\":2394:2405   */\n  gt\n    /* \"#utility.yul\":2391:2812   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2438:2443   */\n  dup1\n    /* \"#utility.yul\":2435:2436   */\n  0x00\n    /* \"#utility.yul\":2428:2444   */\n  mstore\n    /* \"#utility.yul\":2482:2486   */\n  0x20\n    /* \"#utility.yul\":2479:2480   */\n  0x00\n    /* \"#utility.yul\":2469:2487   */\n  keccak256\n    /* \"#utility.yul\":2552:2554   */\n  0x1f\n    /* \"#utility.yul\":2540:2550   */\n  dup5\n    /* \"#utility.yul\":2536:2555   */\n  add\n    /* \"#utility.yul\":2533:2534   */\n  0x05\n    /* \"#utility.yul\":2529:2556   */\n  shr\n    /* \"#utility.yul\":2523:2527   */\n  dup2\n    /* \"#utility.yul\":2519:2557   */\n  add\n    /* \"#utility.yul\":2588:2592   */\n  0x20\n    /* \"#utility.yul\":2576:2586   */\n  dup6\n    /* \"#utility.yul\":2573:2593   */\n  lt\n    /* \"#utility.yul\":2570:2617   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":2611:2615   */\n  dup1\n    /* \"#utility.yul\":2570:2617   */\ntag_52:\n    /* \"#utility.yul\":2666:2668   */\n  0x1f\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2657:2669   */\n  add\n    /* \"#utility.yul\":2654:2655   */\n  0x05\n    /* \"#utility.yul\":2650:2670   */\n  shr\n    /* \"#utility.yul\":2644:2648   */\n  dup3\n    /* \"#utility.yul\":2640:2671   */\n  add\n    /* \"#utility.yul\":2630:2671   */\n  swap2\n  pop\n    /* \"#utility.yul\":2721:2802   */\ntag_53:\n    /* \"#utility.yul\":2739:2741   */\n  dup2\n    /* \"#utility.yul\":2732:2737   */\n  dup2\n    /* \"#utility.yul\":2729:2742   */\n  lt\n    /* \"#utility.yul\":2721:2802   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2798:2799   */\n  0x00\n    /* \"#utility.yul\":2784:2800   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2765:2766   */\n  0x01\n    /* \"#utility.yul\":2754:2767   */\n  add\n    /* \"#utility.yul\":2721:2802   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":2725:2728   */\n  pop\n  pop\n    /* \"#utility.yul\":2391:2812   */\ntag_51:\n    /* \"#utility.yul\":2300:2818   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2994:4293   */\ntag_9:\n    /* \"#utility.yul\":3114:3124   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3136:3166   */\n  dup2\n  gt\n    /* \"#utility.yul\":3133:3189   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3169:3187   */\n  tag_59\n  tag_21\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":3198:3295   */\n  tag_60\n    /* \"#utility.yul\":3288:3294   */\n  dup2\n    /* \"#utility.yul\":3248:3286   */\n  tag_61\n    /* \"#utility.yul\":3280:3284   */\n  dup5\n    /* \"#utility.yul\":3274:3285   */\n  sload\n    /* \"#utility.yul\":3248:3286   */\n  tag_23\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":3242:3246   */\n  dup5\n    /* \"#utility.yul\":3198:3295   */\n  tag_25\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":3344:3348   */\n  0x20\n    /* \"#utility.yul\":3375:3377   */\n  0x1f\n    /* \"#utility.yul\":3364:3378   */\n  dup3\n  gt\n    /* \"#utility.yul\":3392:3393   */\n  0x01\n    /* \"#utility.yul\":3387:4036   */\n  dup2\n  eq\n  tag_63\n  jumpi\n    /* \"#utility.yul\":4080:4081   */\n  0x00\n    /* \"#utility.yul\":4097:4103   */\n  dup4\n    /* \"#utility.yul\":4094:4183   */\n  iszero\n  tag_64\n  jumpi\n  pop\n    /* \"#utility.yul\":4149:4168   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":4143:4169   */\n  mload\n    /* \"#utility.yul\":4094:4183   */\ntag_64:\n  not(0x00)\n    /* \"#utility.yul\":2951:2952   */\n  0x03\n    /* \"#utility.yul\":2947:2958   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2943:2967   */\n  shr\n    /* \"#utility.yul\":2939:2968   */\n  not\n    /* \"#utility.yul\":2929:2969   */\n  and\n    /* \"#utility.yul\":2975:2976   */\n  0x01\n    /* \"#utility.yul\":2971:2982   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2926:2983   */\n  or\n    /* \"#utility.yul\":4196:4277   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3357:4287   */\n  jump(tag_55)\n    /* \"#utility.yul\":3387:4036   */\ntag_63:\n    /* \"#utility.yul\":2247:2248   */\n  0x00\n    /* \"#utility.yul\":2240:2254   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2284:2288   */\n  0x20\n    /* \"#utility.yul\":2271:2289   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3423:3443   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3541:3763   */\ntag_67:\n    /* \"#utility.yul\":3555:3562   */\n  dup3\n    /* \"#utility.yul\":3552:3553   */\n  dup2\n    /* \"#utility.yul\":3549:3563   */\n  lt\n    /* \"#utility.yul\":3541:3763   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":3637:3656   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3631:3657   */\n  mload\n    /* \"#utility.yul\":3616:3658   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3744:3748   */\n  0x20\n    /* \"#utility.yul\":3729:3749   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3697:3698   */\n  0x01\n    /* \"#utility.yul\":3685:3699   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3571:3583   */\n  add\n    /* \"#utility.yul\":3541:3763   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":3545:3548   */\n  pop\n    /* \"#utility.yul\":3791:3797   */\n  dup5\n    /* \"#utility.yul\":3782:3789   */\n  dup3\n    /* \"#utility.yul\":3779:3798   */\n  lt\n    /* \"#utility.yul\":3776:3977   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3852:3871   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3846:3872   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3935:3936   */\n  0x03\n    /* \"#utility.yul\":3931:3945   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3947:3950   */\n  0xf8\n    /* \"#utility.yul\":3927:3951   */\n  and\n    /* \"#utility.yul\":3923:3960   */\n  shr\n    /* \"#utility.yul\":3919:3961   */\n  not\n    /* \"#utility.yul\":3904:3962   */\n  and\n    /* \"#utility.yul\":3889:3963   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3776:3977   */\ntag_70:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4023:4024   */\n  0x01\n    /* \"#utility.yul\":4007:4021   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4003:4025   */\n  add\n    /* \"#utility.yul\":3990:4026   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2994:4293   */\n  jump\t// out\n    /* \"#utility.yul\":4654:5055   */\ntag_27:\n    /* \"fund_shares.sol\":737:3953  contract WETHVault is ERC20, ReentrancyGuard {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n  0x00\n  assignImmutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"fund_shares.sol\":737:3953  contract WETHVault is ERC20, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4b0bddd2\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xaa4d1655\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      dup1\n      0x4b0bddd2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x73acb590\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x99530b06\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3fc8cef3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x429b62e5\n      eq\n      tag_12\n      jumpi\n      revert(0x00, 0x00)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x08867db6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"fund_shares.sol\":1739:1962  function setPortfolioValue(uint256 _newValue) external {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":1316:1330   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1309:1331   */\n      iszero\n        /* \"#utility.yul\":1291:1332   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1279:1281   */\n      0x20\n        /* \"#utility.yul\":1264:1282   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":1151:1338   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":1489:1514   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":1343:1520   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_34\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"fund_shares.sol\":2921:3433  function withdraw(uint256 shares) external nonReentrant {... */\n    tag_8:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":2046:2082   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_28\n        /* \"#utility.yul\":1904:2088   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_10:\n      tag_34\n      tag_57\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"fund_shares.sol\":824:852  IERC20 public immutable weth */\n    tag_11:\n      tag_60\n      immutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n      dup2\n      jump\n    tag_60:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2272:2304   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2254:2305   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2242:2244   */\n      0x20\n        /* \"#utility.yul\":2227:2245   */\n      add\n        /* \"fund_shares.sol\":824:852  IERC20 public immutable weth */\n      tag_28\n        /* \"#utility.yul\":2093:2311   */\n      jump\n        /* \"fund_shares.sol\":904:942  mapping(address => bool) public admins */\n    tag_12:\n      tag_34\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"fund_shares.sol\":3800:3950  function setAdmin(address admin, bool status) external {... */\n    tag_13:\n      tag_30\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_40\n      tag_74\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"fund_shares.sol\":990:1019  uint256 public portfolioValue */\n    tag_15:\n      tag_40\n      sload(0x07)\n      dup2\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_16:\n      tag_26\n      tag_81\n      jump\t// in\n        /* \"fund_shares.sol\":3550:3727  function pricePerShare() external view returns (uint256) {... */\n    tag_17:\n      tag_40\n      tag_84\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_18:\n      tag_34\n      tag_87\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_19:\n      tag_34\n      tag_91\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"fund_shares.sol\":859:897  address public immutable fundPortfolio */\n    tag_20:\n      tag_60\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n      dup2\n      jump\n        /* \"fund_shares.sol\":2131:2783  function deposit(uint256 amount) external nonReentrant {... */\n    tag_21:\n      tag_30\n      tag_99\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_22:\n      tag_40\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_108\n      jump\t// in\n    tag_109:\n      dup1\n      iszero\n      tag_110\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_111\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_110)\n    tag_111:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_112:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_112\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"fund_shares.sol\":1739:1962  function setPortfolioValue(uint256 _newValue) external {... */\n    tag_33:\n        /* \"fund_shares.sol\":1820:1830  msg.sender */\n      caller\n        /* \"fund_shares.sol\":1813:1831  admins[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"fund_shares.sol\":1813:1819  admins */\n      0x06\n        /* \"fund_shares.sol\":1813:1831  admins[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"fund_shares.sol\":1805:1848  require(admins[msg.sender], \"Not an admin\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4010:4012   */\n      0x20\n        /* \"fund_shares.sol\":1805:1848  require(admins[msg.sender], \"Not an admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3992:4013   */\n      mstore\n        /* \"#utility.yul\":4049:4051   */\n      0x0c\n        /* \"#utility.yul\":4029:4047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4022:4052   */\n      mstore\n      shl(0xa1, 0x2737ba1030b71030b236b4b7)\n        /* \"#utility.yul\":4068:4086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4061:4103   */\n      mstore\n        /* \"#utility.yul\":4120:4138   */\n      0x64\n      add\n        /* \"fund_shares.sol\":1805:1848  require(admins[msg.sender], \"Not an admin\") */\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"fund_shares.sol\":1879:1880  0 */\n      0x00\n        /* \"fund_shares.sol\":1867:1876  _newValue */\n      dup2\n        /* \"fund_shares.sol\":1867:1880  _newValue > 0 */\n      gt\n        /* \"fund_shares.sol\":1859:1917  require(_newValue > 0, \"Portfolio value must be positive\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"fund_shares.sol\":1859:1917  require(_newValue > 0, \"Portfolio value must be positive\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4333:4354   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4370:4388   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4363:4393   */\n      mstore\n        /* \"#utility.yul\":4429:4463   */\n      0x506f7274666f6c696f2076616c7565206d75737420626520706f736974697665\n        /* \"#utility.yul\":4409:4427   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4402:4464   */\n      mstore\n        /* \"#utility.yul\":4481:4499   */\n      0x64\n      add\n        /* \"fund_shares.sol\":1859:1917  require(_newValue > 0, \"Portfolio value must be positive\") */\n      tag_115\n        /* \"#utility.yul\":4149:4505   */\n      jump\n        /* \"fund_shares.sol\":1859:1917  require(_newValue > 0, \"Portfolio value must be positive\") */\n    tag_117:\n        /* \"fund_shares.sol\":1928:1942  portfolioValue */\n      0x07\n        /* \"fund_shares.sol\":1928:1954  portfolioValue = _newValue */\n      sstore\n        /* \"fund_shares.sol\":1739:1962  function setPortfolioValue(uint256 _newValue) external {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_120:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_131\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"fund_shares.sol\":2921:3433  function withdraw(uint256 shares) external nonReentrant {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_133\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_133:\n        /* \"fund_shares.sol\":3005:3006  0 */\n      0x00\n        /* \"fund_shares.sol\":2996:3002  shares */\n      dup2\n        /* \"fund_shares.sol\":2996:3006  shares > 0 */\n      gt\n        /* \"fund_shares.sol\":2988:3043  require(shares > 0, \"Shares must be greater than zero\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4712:4714   */\n      0x20\n        /* \"fund_shares.sol\":2988:3043  require(shares > 0, \"Shares must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4694:4715   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4731:4749   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4724:4754   */\n      mstore\n        /* \"#utility.yul\":4790:4824   */\n      0x536861726573206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":4770:4788   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4763:4825   */\n      mstore\n        /* \"#utility.yul\":4842:4860   */\n      0x64\n      add\n        /* \"fund_shares.sol\":2988:3043  require(shares > 0, \"Shares must be greater than zero\") */\n      tag_115\n        /* \"#utility.yul\":4510:4866   */\n      jump\n        /* \"fund_shares.sol\":2988:3043  require(shares > 0, \"Shares must be greater than zero\") */\n    tag_136:\n        /* \"fund_shares.sol\":3072:3082  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"fund_shares.sol\":3087:3093  shares */\n      dup2\n      gt\n        /* \"fund_shares.sol\":3062:3093  balanceOf(msg.sender) >= shares */\n      iszero\n        /* \"fund_shares.sol\":3054:3117  require(balanceOf(msg.sender) >= shares, \"Insufficient shares\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5073:5075   */\n      0x20\n        /* \"fund_shares.sol\":3054:3117  require(balanceOf(msg.sender) >= shares, \"Insufficient shares\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5055:5076   */\n      mstore\n        /* \"#utility.yul\":5112:5114   */\n      0x13\n        /* \"#utility.yul\":5092:5110   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5085:5115   */\n      mstore\n      shl(0x68, 0x496e73756666696369656e7420736861726573)\n        /* \"#utility.yul\":5131:5149   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5124:5173   */\n      mstore\n        /* \"#utility.yul\":5190:5208   */\n      0x64\n      add\n        /* \"fund_shares.sol\":3054:3117  require(balanceOf(msg.sender) >= shares, \"Insufficient shares\") */\n      tag_115\n        /* \"#utility.yul\":4871:5214   */\n      jump\n        /* \"fund_shares.sol\":3054:3117  require(balanceOf(msg.sender) >= shares, \"Insufficient shares\") */\n    tag_140:\n        /* \"fund_shares.sol\":3130:3144  uint256 supply */\n      0x00\n        /* \"fund_shares.sol\":3147:3160  totalSupply() */\n      tag_143\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"fund_shares.sol\":3147:3160  totalSupply() */\n    tag_143:\n        /* \"fund_shares.sol\":3130:3160  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"fund_shares.sol\":3171:3185  uint256 amount */\n      0x00\n        /* \"fund_shares.sol\":3216:3222  supply */\n      dup2\n        /* \"fund_shares.sol\":3198:3212  portfolioValue */\n      sload(0x07)\n        /* \"fund_shares.sol\":3189:3195  shares */\n      dup5\n        /* \"fund_shares.sol\":3189:3212  shares * portfolioValue */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"fund_shares.sol\":3188:3222  (shares * portfolioValue) / supply */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"fund_shares.sol\":3171:3222  uint256 amount = (shares * portfolioValue) / supply */\n      swap1\n      pop\n        /* \"fund_shares.sol\":3262:3287  _burn(msg.sender, shares) */\n      tag_148\n        /* \"fund_shares.sol\":3268:3278  msg.sender */\n      caller\n        /* \"fund_shares.sol\":3280:3286  shares */\n      dup5\n        /* \"fund_shares.sol\":3262:3267  _burn */\n      tag_149\n        /* \"fund_shares.sol\":3262:3287  _burn(msg.sender, shares) */\n      jump\t// in\n    tag_148:\n        /* \"fund_shares.sol\":3388:3425  WithdrawalRequest(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1489:1514   */\n      dup2\n      dup2\n      mstore\n        /* \"fund_shares.sol\":3406:3416  msg.sender */\n      caller\n      swap1\n        /* \"fund_shares.sol\":3388:3425  WithdrawalRequest(msg.sender, amount) */\n      0x9345a8a944c0bca27038313dd8066210a495ba6374e523065a2e7adcc020ff2b\n      swap1\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"fund_shares.sol\":3388:3425  WithdrawalRequest(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"fund_shares.sol\":2977:3433  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_151:\n        /* \"fund_shares.sol\":2921:3433  function withdraw(uint256 shares) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_157\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_157:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"fund_shares.sol\":3800:3950  function setAdmin(address admin, bool status) external {... */\n    tag_72:\n        /* \"fund_shares.sol\":3881:3891  msg.sender */\n      caller\n        /* \"fund_shares.sol\":3874:3892  admins[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"fund_shares.sol\":3874:3880  admins */\n      0x06\n        /* \"fund_shares.sol\":3874:3892  admins[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"fund_shares.sol\":3866:3909  require(admins[msg.sender], \"Not an admin\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4010:4012   */\n      0x20\n        /* \"fund_shares.sol\":3866:3909  require(admins[msg.sender], \"Not an admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3992:4013   */\n      mstore\n        /* \"#utility.yul\":4049:4051   */\n      0x0c\n        /* \"#utility.yul\":4029:4047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4022:4052   */\n      mstore\n      shl(0xa1, 0x2737ba1030b71030b236b4b7)\n        /* \"#utility.yul\":4068:4086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4061:4103   */\n      mstore\n        /* \"#utility.yul\":4120:4138   */\n      0x64\n      add\n        /* \"fund_shares.sol\":3866:3909  require(admins[msg.sender], \"Not an admin\") */\n      tag_115\n        /* \"#utility.yul\":3808:4144   */\n      jump\n        /* \"fund_shares.sol\":3866:3909  require(admins[msg.sender], \"Not an admin\") */\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"fund_shares.sol\":3920:3933  admins[admin] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"fund_shares.sol\":3920:3926  admins */\n      0x06\n        /* \"fund_shares.sol\":3920:3933  admins[admin] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"fund_shares.sol\":3920:3942  admins[admin] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"fund_shares.sol\":3800:3950  function setAdmin(address admin, bool status) external {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n        /* \"fund_shares.sol\":3550:3727  function pricePerShare() external view returns (uint256) {... */\n    tag_84:\n        /* \"fund_shares.sol\":3598:3605  uint256 */\n      0x00\n        /* \"fund_shares.sol\":3618:3632  uint256 supply */\n      0x00\n        /* \"fund_shares.sol\":3635:3648  totalSupply() */\n      tag_171\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"fund_shares.sol\":3635:3648  totalSupply() */\n    tag_171:\n        /* \"fund_shares.sol\":3618:3648  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"fund_shares.sol\":3666:3677  supply == 0 */\n      dup1\n      iszero\n        /* \"fund_shares.sol\":3666:3719  supply == 0 ? 1e18 : (portfolioValue * 1e18) / supply */\n      tag_172\n      jumpi\n        /* \"fund_shares.sol\":3713:3719  supply */\n      dup1\n        /* \"fund_shares.sol\":3688:3702  portfolioValue */\n      sload(0x07)\n        /* \"fund_shares.sol\":3705:3709  1e18 */\n      0x0de0b6b3a7640000\n        /* \"fund_shares.sol\":3688:3709  portfolioValue * 1e18 */\n      tag_173\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_173:\n        /* \"fund_shares.sol\":3687:3719  (portfolioValue * 1e18) / supply */\n      tag_174\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_174:\n        /* \"fund_shares.sol\":3666:3719  supply == 0 ? 1e18 : (portfolioValue * 1e18) / supply */\n      jump(tag_175)\n    tag_172:\n        /* \"fund_shares.sol\":3680:3684  1e18 */\n      0x0de0b6b3a7640000\n        /* \"fund_shares.sol\":3666:3719  supply == 0 ? 1e18 : (portfolioValue * 1e18) / supply */\n    tag_175:\n        /* \"fund_shares.sol\":3659:3719  return supply == 0 ? 1e18 : (portfolioValue * 1e18) / supply */\n      swap2\n      pop\n      pop\n        /* \"fund_shares.sol\":3550:3727  function pricePerShare() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_178\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_178:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6078:6080   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6060:6081   */\n      mstore\n        /* \"#utility.yul\":6117:6119   */\n      0x25\n        /* \"#utility.yul\":6097:6115   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6090:6120   */\n      mstore\n        /* \"#utility.yul\":6156:6190   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6136:6154   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6129:6191   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":6207:6225   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6200:6235   */\n      mstore\n        /* \"#utility.yul\":6252:6271   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_115\n        /* \"#utility.yul\":5876:6277   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_179:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_92:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_131\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"fund_shares.sol\":2131:2783  function deposit(uint256 amount) external nonReentrant {... */\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_187\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_187:\n        /* \"fund_shares.sol\":2214:2215  0 */\n      0x00\n        /* \"fund_shares.sol\":2205:2211  amount */\n      dup2\n        /* \"fund_shares.sol\":2205:2215  amount > 0 */\n      gt\n        /* \"fund_shares.sol\":2197:2252  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6484:6486   */\n      0x20\n        /* \"fund_shares.sol\":2197:2252  require(amount > 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6466:6487   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6503:6521   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6496:6526   */\n      mstore\n        /* \"#utility.yul\":6562:6596   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":6542:6560   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6535:6597   */\n      mstore\n        /* \"#utility.yul\":6614:6632   */\n      0x64\n      add\n        /* \"fund_shares.sol\":2197:2252  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_115\n        /* \"#utility.yul\":6282:6638   */\n      jump\n        /* \"fund_shares.sol\":2197:2252  require(amount > 0, \"Amount must be greater than zero\") */\n    tag_189:\n        /* \"fund_shares.sol\":2326:2382  weth.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_192\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"fund_shares.sol\":2326:2330  weth */\n      immutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n        /* \"fund_shares.sol\":2326:2347  weth.safeTransferFrom */\n      and\n        /* \"fund_shares.sol\":2348:2358  msg.sender */\n      caller\n        /* \"fund_shares.sol\":2368:2372  this */\n      address\n        /* \"fund_shares.sol\":2375:2381  amount */\n      dup5\n        /* \"fund_shares.sol\":2326:2347  weth.safeTransferFrom */\n      tag_193\n        /* \"fund_shares.sol\":2326:2382  weth.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_192:\n        /* \"fund_shares.sol\":2460:2500  weth.safeTransfer(fundPortfolio, amount) */\n      tag_194\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"fund_shares.sol\":2460:2464  weth */\n      immutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n        /* \"fund_shares.sol\":2460:2477  weth.safeTransfer */\n      and\n        /* \"fund_shares.sol\":2478:2491  fundPortfolio */\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n        /* \"fund_shares.sol\":2493:2499  amount */\n      dup4\n        /* \"fund_shares.sol\":2460:2477  weth.safeTransfer */\n      tag_195\n        /* \"fund_shares.sol\":2460:2500  weth.safeTransfer(fundPortfolio, amount) */\n      jump\t// in\n    tag_194:\n        /* \"fund_shares.sol\":2589:2603  uint256 supply */\n      0x00\n        /* \"fund_shares.sol\":2606:2619  totalSupply() */\n      tag_196\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"fund_shares.sol\":2606:2619  totalSupply() */\n    tag_196:\n        /* \"fund_shares.sol\":2589:2619  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"fund_shares.sol\":2630:2644  uint256 shares */\n      0x00\n        /* \"fund_shares.sol\":2648:2659  supply == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"fund_shares.sol\":2648:2682  supply == 0 || portfolioValue == 0 */\n      tag_197\n      jumpi\n      pop\n        /* \"fund_shares.sol\":2663:2677  portfolioValue */\n      sload(0x07)\n        /* \"fund_shares.sol\":2663:2682  portfolioValue == 0 */\n      iszero\n        /* \"fund_shares.sol\":2648:2682  supply == 0 || portfolioValue == 0 */\n    tag_197:\n        /* \"fund_shares.sol\":2647:2729  (supply == 0 || portfolioValue == 0) ? amount : (amount * supply) / portfolioValue */\n      tag_198\n      jumpi\n        /* \"fund_shares.sol\":2715:2729  portfolioValue */\n      sload(0x07)\n        /* \"fund_shares.sol\":2696:2711  amount * supply */\n      tag_199\n        /* \"fund_shares.sol\":2705:2711  supply */\n      dup4\n        /* \"fund_shares.sol\":2696:2702  amount */\n      dup6\n        /* \"fund_shares.sol\":2696:2711  amount * supply */\n      tag_145\n      jump\t// in\n    tag_199:\n        /* \"fund_shares.sol\":2695:2729  (amount * supply) / portfolioValue */\n      tag_200\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_200:\n        /* \"fund_shares.sol\":2647:2729  (supply == 0 || portfolioValue == 0) ? amount : (amount * supply) / portfolioValue */\n      jump(tag_201)\n    tag_198:\n        /* \"fund_shares.sol\":2686:2692  amount */\n      dup3\n        /* \"fund_shares.sol\":2647:2729  (supply == 0 || portfolioValue == 0) ? amount : (amount * supply) / portfolioValue */\n    tag_201:\n        /* \"fund_shares.sol\":2630:2729  uint256 shares = (supply == 0 || portfolioValue == 0) ? amount : (amount * supply) / portfolioValue */\n      swap1\n      pop\n        /* \"fund_shares.sol\":2750:2775  _mint(msg.sender, shares) */\n      tag_202\n        /* \"fund_shares.sol\":2756:2766  msg.sender */\n      caller\n        /* \"fund_shares.sol\":2768:2774  shares */\n      dup3\n        /* \"fund_shares.sol\":2750:2755  _mint */\n      tag_203\n        /* \"fund_shares.sol\":2750:2775  _mint(msg.sender, shares) */\n      jump\t// in\n    tag_202:\n        /* \"fund_shares.sol\":2186:2783  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6845:6847   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6827:6848   */\n      mstore\n        /* \"#utility.yul\":6884:6886   */\n      0x24\n        /* \"#utility.yul\":6864:6882   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6857:6887   */\n      mstore\n        /* \"#utility.yul\":6923:6957   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":6903:6921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6896:6958   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":6974:6992   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6967:7001   */\n      mstore\n        /* \"#utility.yul\":7018:7037   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_115\n        /* \"#utility.yul\":6643:7043   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7250:7252   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7232:7253   */\n      mstore\n        /* \"#utility.yul\":7289:7291   */\n      0x22\n        /* \"#utility.yul\":7269:7287   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7262:7292   */\n      mstore\n        /* \"#utility.yul\":7328:7362   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":7308:7326   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7301:7363   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":7379:7397   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7372:7404   */\n      mstore\n        /* \"#utility.yul\":7421:7440   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n        /* \"#utility.yul\":7048:7446   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1489:1514   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_129:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_216\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_221\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7653:7655   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7635:7656   */\n      mstore\n        /* \"#utility.yul\":7692:7694   */\n      0x1d\n        /* \"#utility.yul\":7672:7690   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7665:7695   */\n      mstore\n        /* \"#utility.yul\":7731:7762   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":7711:7729   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7704:7763   */\n      mstore\n        /* \"#utility.yul\":7780:7798   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_115\n        /* \"#utility.yul\":7451:7804   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_218:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_221\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_221:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8011:8013   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7993:8014   */\n      mstore\n        /* \"#utility.yul\":8050:8052   */\n      0x25\n        /* \"#utility.yul\":8030:8048   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8023:8053   */\n      mstore\n        /* \"#utility.yul\":8089:8123   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":8069:8087   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8062:8124   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":8140:8158   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8133:8168   */\n      mstore\n        /* \"#utility.yul\":8185:8204   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_115\n        /* \"#utility.yul\":7809:8210   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8417:8419   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8399:8420   */\n      mstore\n        /* \"#utility.yul\":8456:8458   */\n      0x23\n        /* \"#utility.yul\":8436:8454   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8429:8459   */\n      mstore\n        /* \"#utility.yul\":8495:8529   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":8475:8493   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8468:8530   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":8546:8564   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8539:8572   */\n      mstore\n        /* \"#utility.yul\":8589:8608   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_115\n        /* \"#utility.yul\":8215:8614   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8821:8823   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8803:8824   */\n      mstore\n        /* \"#utility.yul\":8860:8862   */\n      0x26\n        /* \"#utility.yul\":8840:8858   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8833:8863   */\n      mstore\n        /* \"#utility.yul\":8899:8933   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":8879:8897   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8872:8934   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":8950:8968   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8943:8979   */\n      mstore\n        /* \"#utility.yul\":8996:9015   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_115\n        /* \"#utility.yul\":8619:9021   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1489:1514   */\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_221\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_134:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x05)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9228:9230   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9210:9231   */\n      mstore\n        /* \"#utility.yul\":9267:9269   */\n      0x1f\n        /* \"#utility.yul\":9247:9265   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9240:9270   */\n      mstore\n        /* \"#utility.yul\":9306:9339   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9286:9304   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9279:9340   */\n      mstore\n        /* \"#utility.yul\":9357:9375   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_115\n        /* \"#utility.yul\":9026:9381   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_238:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9458:9479  account != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9588:9590   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9570:9591   */\n      mstore\n        /* \"#utility.yul\":9627:9629   */\n      0x21\n        /* \"#utility.yul\":9607:9625   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9600:9630   */\n      mstore\n        /* \"#utility.yul\":9666:9700   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":9646:9664   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9639:9701   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":9717:9735   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9710:9741   */\n      mstore\n        /* \"#utility.yul\":9758:9777   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_115\n        /* \"#utility.yul\":9386:9783   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9588:9610  uint256 accountBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9649:9673  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9990:9992   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9972:9993   */\n      mstore\n        /* \"#utility.yul\":10029:10031   */\n      0x22\n        /* \"#utility.yul\":10009:10027   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10002:10032   */\n      mstore\n        /* \"#utility.yul\":10068:10102   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":10048:10066   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10041:10103   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":10119:10137   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10112:10144   */\n      mstore\n        /* \"#utility.yul\":10161:10180   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_115\n        /* \"#utility.yul\":9788:10186   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9767:9790  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9746:9790  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9883:9895  _totalSupply */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9883:9905  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1489:1514   */\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      swap2\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      tag_214\n        /* \"#utility.yul\":1343:1520   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9979:10027  _afterTokenTransfer(account, address(0), amount) */\n    tag_250:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9440:10034  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_193:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1482:1550  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10411:10443   */\n      dup1\n      dup6\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1482:1550  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":10393:10444   */\n      mstore\n        /* \"#utility.yul\":10480:10512   */\n      dup4\n      and\n        /* \"#utility.yul\":10460:10478   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10453:10513   */\n      mstore\n        /* \"#utility.yul\":10529:10547   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":10522:10556   */\n      dup3\n      swap1\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_221\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1475:1480  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1505:1532  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":10366:10384   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1482:1550  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n    tag_254:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1474  _callOptionalReturn */\n      tag_256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_195:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10759:10791   */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10741:10792   */\n      mstore\n        /* \"#utility.yul\":10808:10826   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":10801:10835   */\n      dup3\n      swap1\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_250\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1043:1048  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1073:1096  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":10714:10732   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      tag_254\n        /* \"#utility.yul\":10567:10841   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11048:11050   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11030:11051   */\n      mstore\n        /* \"#utility.yul\":11087:11089   */\n      0x1f\n        /* \"#utility.yul\":11067:11085   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11060:11090   */\n      mstore\n        /* \"#utility.yul\":11126:11159   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":11106:11124   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11099:11160   */\n      mstore\n        /* \"#utility.yul\":11177:11195   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_115\n        /* \"#utility.yul\":10846:11201   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_262:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_266\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_266:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1489:1514   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_256:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5638  bytes memory returndata */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_272\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5673  data */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5649:5654  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5668  address(token).functionCall */\n      and\n      tag_273\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5710  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5738  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5745  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5749:5750  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5750  returndata.length == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_275\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5765:5775  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5754:5784  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_275\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11658:11660   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11640:11661   */\n      mstore\n        /* \"#utility.yul\":11697:11699   */\n      0x2a\n        /* \"#utility.yul\":11677:11695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11670:11700   */\n      mstore\n        /* \"#utility.yul\":11736:11770   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":11716:11734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11709:11771   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":11787:11805   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11780:11820   */\n      mstore\n        /* \"#utility.yul\":11837:11856   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_115\n        /* \"#utility.yul\":11456:11862   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_273:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_281\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_282\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_281:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_282:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12069:12071   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12051:12072   */\n      mstore\n        /* \"#utility.yul\":12108:12110   */\n      0x26\n        /* \"#utility.yul\":12088:12106   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12081:12111   */\n      mstore\n        /* \"#utility.yul\":12147:12181   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12127:12145   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12120:12182   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":12198:12216   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12191:12227   */\n      mstore\n        /* \"#utility.yul\":12244:12263   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_115\n        /* \"#utility.yul\":11867:12269   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_284:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5487:5498  target.call */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_287\n      swap2\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_291\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_290)\n    tag_291:\n      0x60\n      swap2\n      pop\n    tag_290:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_292\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_293\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_292:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_293:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_295\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_299\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12782:12784   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12764:12785   */\n      mstore\n        /* \"#utility.yul\":12821:12823   */\n      0x1d\n        /* \"#utility.yul\":12801:12819   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12794:12824   */\n      mstore\n        /* \"#utility.yul\":12860:12891   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":12840:12858   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12833:12892   */\n      mstore\n        /* \"#utility.yul\":12909:12927   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_115\n        /* \"#utility.yul\":12580:12933   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n    tag_299:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8201:8218  return returndata */\n      jump(tag_281)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_295:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_281\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      dup2\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      tag_307\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_307:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap2\n      swap1\n        /* \"#utility.yul\":14:432   */\n    tag_29:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:663   */\n    tag_32:\n        /* \"#utility.yul\":496:502   */\n      0x00\n        /* \"#utility.yul\":549:551   */\n      0x20\n        /* \"#utility.yul\":537:546   */\n      dup3\n        /* \"#utility.yul\":528:535   */\n      dup5\n        /* \"#utility.yul\":524:547   */\n      sub\n        /* \"#utility.yul\":520:552   */\n      slt\n        /* \"#utility.yul\":517:569   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":565:566   */\n      0x00\n        /* \"#utility.yul\":562:563   */\n      0x00\n        /* \"#utility.yul\":555:567   */\n      revert\n        /* \"#utility.yul\":517:569   */\n    tag_316:\n      pop\n        /* \"#utility.yul\":610:633   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":437:663   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:841   */\n    tag_310:\n        /* \"#utility.yul\":736:756   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":785:816   */\n      dup2\n      and\n        /* \"#utility.yul\":775:817   */\n      dup2\n      eq\n        /* \"#utility.yul\":765:835   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":831:832   */\n      0x00\n        /* \"#utility.yul\":828:829   */\n      0x00\n        /* \"#utility.yul\":821:833   */\n      revert\n        /* \"#utility.yul\":765:835   */\n    tag_318:\n        /* \"#utility.yul\":668:841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":846:1146   */\n    tag_36:\n        /* \"#utility.yul\":914:920   */\n      0x00\n        /* \"#utility.yul\":922:928   */\n      0x00\n        /* \"#utility.yul\":975:977   */\n      0x40\n        /* \"#utility.yul\":963:972   */\n      dup4\n        /* \"#utility.yul\":954:961   */\n      dup6\n        /* \"#utility.yul\":950:973   */\n      sub\n        /* \"#utility.yul\":946:978   */\n      slt\n        /* \"#utility.yul\":943:995   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":988:989   */\n      0x00\n        /* \"#utility.yul\":981:993   */\n      revert\n        /* \"#utility.yul\":943:995   */\n    tag_320:\n        /* \"#utility.yul\":1014:1043   */\n      tag_321\n        /* \"#utility.yul\":1033:1042   */\n      dup4\n        /* \"#utility.yul\":1014:1043   */\n      tag_310\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1004:1043   */\n      swap5\n        /* \"#utility.yul\":1112:1114   */\n      0x20\n        /* \"#utility.yul\":1097:1115   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1084:1116   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":846:1146   */\n      jump\t// out\n        /* \"#utility.yul\":1525:1899   */\n    tag_46:\n        /* \"#utility.yul\":1602:1608   */\n      0x00\n        /* \"#utility.yul\":1610:1616   */\n      0x00\n        /* \"#utility.yul\":1618:1624   */\n      0x00\n        /* \"#utility.yul\":1671:1673   */\n      0x60\n        /* \"#utility.yul\":1659:1668   */\n      dup5\n        /* \"#utility.yul\":1650:1657   */\n      dup7\n        /* \"#utility.yul\":1646:1669   */\n      sub\n        /* \"#utility.yul\":1642:1674   */\n      slt\n        /* \"#utility.yul\":1639:1691   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":1687:1688   */\n      0x00\n        /* \"#utility.yul\":1684:1685   */\n      0x00\n        /* \"#utility.yul\":1677:1689   */\n      revert\n        /* \"#utility.yul\":1639:1691   */\n    tag_325:\n        /* \"#utility.yul\":1710:1739   */\n      tag_326\n        /* \"#utility.yul\":1729:1738   */\n      dup5\n        /* \"#utility.yul\":1710:1739   */\n      tag_310\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":1700:1739   */\n      swap3\n      pop\n        /* \"#utility.yul\":1758:1796   */\n      tag_327\n        /* \"#utility.yul\":1792:1794   */\n      0x20\n        /* \"#utility.yul\":1781:1790   */\n      dup6\n        /* \"#utility.yul\":1777:1795   */\n      add\n        /* \"#utility.yul\":1758:1796   */\n      tag_310\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1525:1899   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1748:1796   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1865:1867   */\n      0x40\n        /* \"#utility.yul\":1850:1868   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1837:1869   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1525:1899   */\n      jump\t// out\n        /* \"#utility.yul\":2316:2502   */\n    tag_66:\n        /* \"#utility.yul\":2375:2381   */\n      0x00\n        /* \"#utility.yul\":2428:2430   */\n      0x20\n        /* \"#utility.yul\":2416:2425   */\n      dup3\n        /* \"#utility.yul\":2407:2414   */\n      dup5\n        /* \"#utility.yul\":2403:2426   */\n      sub\n        /* \"#utility.yul\":2399:2431   */\n      slt\n        /* \"#utility.yul\":2396:2448   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2441:2442   */\n      0x00\n        /* \"#utility.yul\":2434:2446   */\n      revert\n        /* \"#utility.yul\":2396:2448   */\n    tag_331:\n        /* \"#utility.yul\":2467:2496   */\n      tag_332\n        /* \"#utility.yul\":2486:2495   */\n      dup3\n        /* \"#utility.yul\":2467:2496   */\n      tag_310\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2457:2496   */\n      swap4\n        /* \"#utility.yul\":2316:2502   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2507:2625   */\n    tag_311:\n        /* \"#utility.yul\":2593:2598   */\n      dup1\n        /* \"#utility.yul\":2586:2599   */\n      iszero\n        /* \"#utility.yul\":2579:2600   */\n      iszero\n        /* \"#utility.yul\":2572:2577   */\n      dup2\n        /* \"#utility.yul\":2569:2601   */\n      eq\n        /* \"#utility.yul\":2559:2619   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":2615:2616   */\n      0x00\n        /* \"#utility.yul\":2612:2613   */\n      0x00\n        /* \"#utility.yul\":2605:2617   */\n      revert\n        /* \"#utility.yul\":2630:2945   */\n    tag_71:\n        /* \"#utility.yul\":2695:2701   */\n      0x00\n        /* \"#utility.yul\":2703:2709   */\n      0x00\n        /* \"#utility.yul\":2756:2758   */\n      0x40\n        /* \"#utility.yul\":2744:2753   */\n      dup4\n        /* \"#utility.yul\":2735:2742   */\n      dup6\n        /* \"#utility.yul\":2731:2754   */\n      sub\n        /* \"#utility.yul\":2727:2759   */\n      slt\n        /* \"#utility.yul\":2724:2776   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":2772:2773   */\n      0x00\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2762:2774   */\n      revert\n        /* \"#utility.yul\":2724:2776   */\n    tag_336:\n        /* \"#utility.yul\":2795:2824   */\n      tag_337\n        /* \"#utility.yul\":2814:2823   */\n      dup4\n        /* \"#utility.yul\":2795:2824   */\n      tag_310\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":2785:2824   */\n      swap2\n      pop\n        /* \"#utility.yul\":2874:2876   */\n      0x20\n        /* \"#utility.yul\":2863:2872   */\n      dup4\n        /* \"#utility.yul\":2859:2877   */\n      add\n        /* \"#utility.yul\":2846:2878   */\n      calldataload\n        /* \"#utility.yul\":2887:2915   */\n      tag_338\n        /* \"#utility.yul\":2909:2914   */\n      dup2\n        /* \"#utility.yul\":2887:2915   */\n      tag_311\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":2934:2939   */\n      dup1\n        /* \"#utility.yul\":2924:2939   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2630:2945   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3158:3418   */\n    tag_103:\n        /* \"#utility.yul\":3226:3232   */\n      0x00\n        /* \"#utility.yul\":3234:3240   */\n      0x00\n        /* \"#utility.yul\":3287:3289   */\n      0x40\n        /* \"#utility.yul\":3275:3284   */\n      dup4\n        /* \"#utility.yul\":3266:3273   */\n      dup6\n        /* \"#utility.yul\":3262:3285   */\n      sub\n        /* \"#utility.yul\":3258:3290   */\n      slt\n        /* \"#utility.yul\":3255:3307   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":3303:3304   */\n      0x00\n        /* \"#utility.yul\":3300:3301   */\n      0x00\n        /* \"#utility.yul\":3293:3305   */\n      revert\n        /* \"#utility.yul\":3255:3307   */\n    tag_341:\n        /* \"#utility.yul\":3326:3355   */\n      tag_342\n        /* \"#utility.yul\":3345:3354   */\n      dup4\n        /* \"#utility.yul\":3326:3355   */\n      tag_310\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3316:3355   */\n      swap2\n      pop\n        /* \"#utility.yul\":3374:3412   */\n      tag_343\n        /* \"#utility.yul\":3408:3410   */\n      0x20\n        /* \"#utility.yul\":3397:3406   */\n      dup5\n        /* \"#utility.yul\":3393:3411   */\n      add\n        /* \"#utility.yul\":3374:3412   */\n      tag_310\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3364:3412   */\n      swap1\n      pop\n        /* \"#utility.yul\":3158:3418   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3423:3803   */\n    tag_108:\n        /* \"#utility.yul\":3502:3503   */\n      0x01\n        /* \"#utility.yul\":3498:3510   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3545:3557   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3566:3627   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":3620:3624   */\n      0x7f\n        /* \"#utility.yul\":3612:3618   */\n      dup3\n        /* \"#utility.yul\":3608:3625   */\n      and\n        /* \"#utility.yul\":3598:3625   */\n      swap2\n      pop\n        /* \"#utility.yul\":3566:3627   */\n    tag_345:\n        /* \"#utility.yul\":3673:3675   */\n      0x20\n        /* \"#utility.yul\":3665:3671   */\n      dup3\n        /* \"#utility.yul\":3662:3676   */\n      lt\n        /* \"#utility.yul\":3642:3660   */\n      dup2\n        /* \"#utility.yul\":3639:3677   */\n      sub\n        /* \"#utility.yul\":3636:3797   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":3719:3729   */\n      0x4e487b71\n        /* \"#utility.yul\":3714:3717   */\n      0xe0\n        /* \"#utility.yul\":3710:3730   */\n      shl\n        /* \"#utility.yul\":3707:3708   */\n      0x00\n        /* \"#utility.yul\":3700:3731   */\n      mstore\n        /* \"#utility.yul\":3754:3758   */\n      0x22\n        /* \"#utility.yul\":3751:3752   */\n      0x04\n        /* \"#utility.yul\":3744:3759   */\n      mstore\n        /* \"#utility.yul\":3782:3786   */\n      0x24\n        /* \"#utility.yul\":3779:3780   */\n      0x00\n        /* \"#utility.yul\":3772:3787   */\n      revert\n        /* \"#utility.yul\":3636:3797   */\n    tag_346:\n      pop\n        /* \"#utility.yul\":3423:3803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5219:5346   */\n    tag_312:\n        /* \"#utility.yul\":5280:5290   */\n      0x4e487b71\n        /* \"#utility.yul\":5275:5278   */\n      0xe0\n        /* \"#utility.yul\":5271:5291   */\n      shl\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5261:5292   */\n      mstore\n        /* \"#utility.yul\":5311:5315   */\n      0x11\n        /* \"#utility.yul\":5308:5309   */\n      0x04\n        /* \"#utility.yul\":5301:5316   */\n      mstore\n        /* \"#utility.yul\":5335:5339   */\n      0x24\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5325:5340   */\n      revert\n        /* \"#utility.yul\":5351:5519   */\n    tag_145:\n        /* \"#utility.yul\":5424:5433   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5455:5464   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5472:5487   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5466:5488   */\n      dup5\n      eq\n        /* \"#utility.yul\":5452:5489   */\n      or\n        /* \"#utility.yul\":5442:5513   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":5493:5511   */\n      tag_120\n      tag_312\n      jump\t// in\n        /* \"#utility.yul\":5524:5741   */\n    tag_147:\n        /* \"#utility.yul\":5564:5565   */\n      0x00\n        /* \"#utility.yul\":5590:5591   */\n      dup3\n        /* \"#utility.yul\":5580:5712   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":5634:5644   */\n      0x4e487b71\n        /* \"#utility.yul\":5629:5632   */\n      0xe0\n        /* \"#utility.yul\":5625:5645   */\n      shl\n        /* \"#utility.yul\":5622:5623   */\n      0x00\n        /* \"#utility.yul\":5615:5646   */\n      mstore\n        /* \"#utility.yul\":5669:5673   */\n      0x12\n        /* \"#utility.yul\":5666:5667   */\n      0x04\n        /* \"#utility.yul\":5659:5674   */\n      mstore\n        /* \"#utility.yul\":5697:5701   */\n      0x24\n        /* \"#utility.yul\":5694:5695   */\n      0x00\n        /* \"#utility.yul\":5687:5702   */\n      revert\n        /* \"#utility.yul\":5580:5712   */\n    tag_356:\n      pop\n        /* \"#utility.yul\":5726:5735   */\n      div\n      swap1\n        /* \"#utility.yul\":5524:5741   */\n      jump\t// out\n        /* \"#utility.yul\":5746:5871   */\n    tag_159:\n        /* \"#utility.yul\":5811:5820   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5832:5842   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5829:5865   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":5845:5863   */\n      tag_120\n      tag_312\n      jump\t// in\n        /* \"#utility.yul\":11206:11451   */\n    tag_276:\n        /* \"#utility.yul\":11273:11279   */\n      0x00\n        /* \"#utility.yul\":11326:11328   */\n      0x20\n        /* \"#utility.yul\":11314:11323   */\n      dup3\n        /* \"#utility.yul\":11305:11312   */\n      dup5\n        /* \"#utility.yul\":11301:11324   */\n      sub\n        /* \"#utility.yul\":11297:11329   */\n      slt\n        /* \"#utility.yul\":11294:11346   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":11342:11343   */\n      0x00\n        /* \"#utility.yul\":11339:11340   */\n      0x00\n        /* \"#utility.yul\":11332:11344   */\n      revert\n        /* \"#utility.yul\":11294:11346   */\n    tag_375:\n        /* \"#utility.yul\":11374:11383   */\n      dup2\n        /* \"#utility.yul\":11368:11384   */\n      mload\n        /* \"#utility.yul\":11393:11421   */\n      tag_332\n        /* \"#utility.yul\":11415:11420   */\n      dup2\n        /* \"#utility.yul\":11393:11421   */\n      tag_311\n      jump\t// in\n        /* \"#utility.yul\":12274:12575   */\n    tag_288:\n        /* \"#utility.yul\":12403:12406   */\n      0x00\n        /* \"#utility.yul\":12441:12447   */\n      dup3\n        /* \"#utility.yul\":12435:12448   */\n      mload\n        /* \"#utility.yul\":12487:12493   */\n      dup1\n        /* \"#utility.yul\":12480:12484   */\n      0x20\n        /* \"#utility.yul\":12472:12478   */\n      dup6\n        /* \"#utility.yul\":12468:12485   */\n      add\n        /* \"#utility.yul\":12463:12466   */\n      dup5\n        /* \"#utility.yul\":12457:12494   */\n      mcopy\n        /* \"#utility.yul\":12549:12550   */\n      0x00\n        /* \"#utility.yul\":12513:12529   */\n      swap3\n      add\n        /* \"#utility.yul\":12538:12551   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":12513:12529   */\n      swap2\n        /* \"#utility.yul\":12274:12575   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122006e586570c1c06a9fe2011c94ab30d4de4ce6e3b579667b95f1a270f0e93ea8d64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_293": {
									"entryPoint": null,
									"id": 293,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_384": {
									"entryPoint": null,
									"id": 384,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_83": {
									"entryPoint": null,
									"id": 83,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_stringliteral_223e7e21f1e005e14a47cf68489b873f054d1423f02e114052090f0c6fbd3b11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50c197e522fff986de4bf4eedbdfb702f19e0aa534018456bb4f299eea67a9b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5057:9",
										"nodeType": "YulBlock",
										"src": "0:5057:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:9",
													"nodeType": "YulBlock",
													"src": "74:117:9",
													"statements": [
														{
															"nativeSrc": "84:22:9",
															"nodeType": "YulAssignment",
															"src": "84:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:9"
																},
																"nativeSrc": "93:13:9",
																"nodeType": "YulFunctionCall",
																"src": "93:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:9",
																"nodeType": "YulBlock",
																"src": "169:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:9",
																					"nodeType": "YulLiteral",
																					"src": "178:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:9",
																					"nodeType": "YulLiteral",
																					"src": "181:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:9"
																			},
																			"nativeSrc": "171:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:9"
																		},
																		"nativeSrc": "171:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:9",
																										"nodeType": "YulLiteral",
																										"src": "154:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:9",
																										"nodeType": "YulLiteral",
																										"src": "159:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:9"
																								},
																								"nativeSrc": "150:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:9",
																								"nodeType": "YulLiteral",
																								"src": "163:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:9"
																						},
																						"nativeSrc": "146:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:9"
																				},
																				"nativeSrc": "135:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:9"
																		},
																		"nativeSrc": "125:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:9"
																},
																"nativeSrc": "118:50:9",
																"nodeType": "YulFunctionCall",
																"src": "118:50:9"
															},
															"nativeSrc": "115:70:9",
															"nodeType": "YulIf",
															"src": "115:70:9"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:9",
														"nodeType": "YulTypedName",
														"src": "53:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:9",
														"nodeType": "YulTypedName",
														"src": "64:5:9",
														"type": ""
													}
												],
												"src": "14:177:9"
											},
											{
												"body": {
													"nativeSrc": "228:95:9",
													"nodeType": "YulBlock",
													"src": "228:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "245:1:9",
																		"nodeType": "YulLiteral",
																		"src": "245:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "252:3:9",
																				"nodeType": "YulLiteral",
																				"src": "252:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "257:10:9",
																				"nodeType": "YulLiteral",
																				"src": "257:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "248:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:9"
																		},
																		"nativeSrc": "248:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "238:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:9"
																},
																"nativeSrc": "238:31:9",
																"nodeType": "YulFunctionCall",
																"src": "238:31:9"
															},
															"nativeSrc": "238:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "238:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "285:1:9",
																		"nodeType": "YulLiteral",
																		"src": "285:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "288:4:9",
																		"nodeType": "YulLiteral",
																		"src": "288:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "278:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:9"
																},
																"nativeSrc": "278:15:9",
																"nodeType": "YulFunctionCall",
																"src": "278:15:9"
															},
															"nativeSrc": "278:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "278:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "309:1:9",
																		"nodeType": "YulLiteral",
																		"src": "309:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "312:4:9",
																		"nodeType": "YulLiteral",
																		"src": "312:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "302:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:9"
																},
																"nativeSrc": "302:15:9",
																"nodeType": "YulFunctionCall",
																"src": "302:15:9"
															},
															"nativeSrc": "302:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "302:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "196:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:9"
											},
											{
												"body": {
													"nativeSrc": "392:659:9",
													"nodeType": "YulBlock",
													"src": "392:659:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "441:16:9",
																"nodeType": "YulBlock",
																"src": "441:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "450:1:9",
																					"nodeType": "YulLiteral",
																					"src": "450:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "453:1:9",
																					"nodeType": "YulLiteral",
																					"src": "453:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "443:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:9"
																			},
																			"nativeSrc": "443:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "443:12:9"
																		},
																		"nativeSrc": "443:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "420:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "420:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "428:4:9",
																						"nodeType": "YulLiteral",
																						"src": "428:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "416:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "416:3:9"
																				},
																				"nativeSrc": "416:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "416:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "435:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "435:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "412:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "412:3:9"
																		},
																		"nativeSrc": "412:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "412:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "405:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "405:6:9"
																},
																"nativeSrc": "405:35:9",
																"nodeType": "YulFunctionCall",
																"src": "405:35:9"
															},
															"nativeSrc": "402:55:9",
															"nodeType": "YulIf",
															"src": "402:55:9"
														},
														{
															"nativeSrc": "466:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "466:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "486:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "486:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "480:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "480:5:9"
																},
																"nativeSrc": "480:13:9",
																"nodeType": "YulFunctionCall",
																"src": "480:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "470:6:9",
																	"nodeType": "YulTypedName",
																	"src": "470:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "536:22:9",
																"nodeType": "YulBlock",
																"src": "536:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "538:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "538:16:9"
																			},
																			"nativeSrc": "538:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "538:18:9"
																		},
																		"nativeSrc": "538:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "538:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "508:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "508:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "524:2:9",
																						"nodeType": "YulLiteral",
																						"src": "524:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "528:1:9",
																						"nodeType": "YulLiteral",
																						"src": "528:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "520:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "520:3:9"
																				},
																				"nativeSrc": "520:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "520:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "532:1:9",
																				"nodeType": "YulLiteral",
																				"src": "532:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "516:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:9"
																		},
																		"nativeSrc": "516:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "505:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "505:2:9"
																},
																"nativeSrc": "505:30:9",
																"nodeType": "YulFunctionCall",
																"src": "505:30:9"
															},
															"nativeSrc": "502:56:9",
															"nodeType": "YulIf",
															"src": "502:56:9"
														},
														{
															"nativeSrc": "567:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "567:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "587:2:9",
																		"nodeType": "YulLiteral",
																		"src": "587:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "581:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "581:5:9"
																},
																"nativeSrc": "581:9:9",
																"nodeType": "YulFunctionCall",
																"src": "581:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "571:6:9",
																	"nodeType": "YulTypedName",
																	"src": "571:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "599:85:9",
															"nodeType": "YulVariableDeclaration",
															"src": "599:85:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "621:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "621:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "645:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "645:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "653:4:9",
																										"nodeType": "YulLiteral",
																										"src": "653:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "641:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "641:3:9"
																								},
																								"nativeSrc": "641:17:9",
																								"nodeType": "YulFunctionCall",
																								"src": "641:17:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "664:2:9",
																										"nodeType": "YulLiteral",
																										"src": "664:2:9",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "660:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "660:3:9"
																								},
																								"nativeSrc": "660:7:9",
																								"nodeType": "YulFunctionCall",
																								"src": "660:7:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "637:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "637:3:9"
																						},
																						"nativeSrc": "637:31:9",
																						"nodeType": "YulFunctionCall",
																						"src": "637:31:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "670:2:9",
																						"nodeType": "YulLiteral",
																						"src": "670:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "633:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "633:3:9"
																				},
																				"nativeSrc": "633:40:9",
																				"nodeType": "YulFunctionCall",
																				"src": "633:40:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "679:2:9",
																						"nodeType": "YulLiteral",
																						"src": "679:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "675:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "675:3:9"
																				},
																				"nativeSrc": "675:7:9",
																				"nodeType": "YulFunctionCall",
																				"src": "675:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "629:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:9"
																		},
																		"nativeSrc": "629:54:9",
																		"nodeType": "YulFunctionCall",
																		"src": "629:54:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "617:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "617:3:9"
																},
																"nativeSrc": "617:67:9",
																"nodeType": "YulFunctionCall",
																"src": "617:67:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "603:10:9",
																	"nodeType": "YulTypedName",
																	"src": "603:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "759:22:9",
																"nodeType": "YulBlock",
																"src": "759:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "761:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "761:16:9"
																			},
																			"nativeSrc": "761:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "761:18:9"
																		},
																		"nativeSrc": "761:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "761:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "702:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "702:10:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "722:2:9",
																								"nodeType": "YulLiteral",
																								"src": "722:2:9",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "726:1:9",
																								"nodeType": "YulLiteral",
																								"src": "726:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "718:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:9"
																						},
																						"nativeSrc": "718:10:9",
																						"nodeType": "YulFunctionCall",
																						"src": "718:10:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "730:1:9",
																						"nodeType": "YulLiteral",
																						"src": "730:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "714:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "714:3:9"
																				},
																				"nativeSrc": "714:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "714:18:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "699:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "699:2:9"
																		},
																		"nativeSrc": "699:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "699:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "738:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "738:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "750:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "735:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "735:2:9"
																		},
																		"nativeSrc": "735:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "735:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "696:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "696:2:9"
																},
																"nativeSrc": "696:62:9",
																"nodeType": "YulFunctionCall",
																"src": "696:62:9"
															},
															"nativeSrc": "693:88:9",
															"nodeType": "YulIf",
															"src": "693:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "797:2:9",
																		"nodeType": "YulLiteral",
																		"src": "797:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "801:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "801:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "790:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "790:6:9"
																},
																"nativeSrc": "790:22:9",
																"nodeType": "YulFunctionCall",
																"src": "790:22:9"
															},
															"nativeSrc": "790:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "790:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "828:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "828:6:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "836:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "836:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "821:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "821:6:9"
																},
																"nativeSrc": "821:22:9",
																"nodeType": "YulFunctionCall",
																"src": "821:22:9"
															},
															"nativeSrc": "821:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "821:22:9"
														},
														{
															"body": {
																"nativeSrc": "895:16:9",
																"nodeType": "YulBlock",
																"src": "895:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "904:1:9",
																					"nodeType": "YulLiteral",
																					"src": "904:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "907:1:9",
																					"nodeType": "YulLiteral",
																					"src": "907:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "897:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "897:6:9"
																			},
																			"nativeSrc": "897:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "897:12:9"
																		},
																		"nativeSrc": "897:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "897:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "866:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "866:6:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "874:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "874:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "862:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "862:3:9"
																				},
																				"nativeSrc": "862:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "862:19:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "883:4:9",
																				"nodeType": "YulLiteral",
																				"src": "883:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "858:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "858:3:9"
																		},
																		"nativeSrc": "858:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "858:30:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "890:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "890:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "855:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "855:2:9"
																},
																"nativeSrc": "855:39:9",
																"nodeType": "YulFunctionCall",
																"src": "855:39:9"
															},
															"nativeSrc": "852:59:9",
															"nodeType": "YulIf",
															"src": "852:59:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "930:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "930:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "938:4:9",
																				"nodeType": "YulLiteral",
																				"src": "938:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "926:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:9"
																		},
																		"nativeSrc": "926:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "926:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "949:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "949:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "957:4:9",
																				"nodeType": "YulLiteral",
																				"src": "957:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "945:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:9"
																		},
																		"nativeSrc": "945:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "945:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "964:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "964:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "920:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "920:5:9"
																},
																"nativeSrc": "920:51:9",
																"nodeType": "YulFunctionCall",
																"src": "920:51:9"
															},
															"nativeSrc": "920:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "920:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "995:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1003:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1003:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "991:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "991:3:9"
																				},
																				"nativeSrc": "991:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "991:19:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1012:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "987:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "987:3:9"
																		},
																		"nativeSrc": "987:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "987:30:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1019:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1019:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "980:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:9"
																},
																"nativeSrc": "980:41:9",
																"nodeType": "YulFunctionCall",
																"src": "980:41:9"
															},
															"nativeSrc": "980:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "980:41:9"
														},
														{
															"nativeSrc": "1030:15:9",
															"nodeType": "YulAssignment",
															"src": "1030:15:9",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1039:6:9",
																"nodeType": "YulIdentifier",
																"src": "1039:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1030:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1030:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "328:723:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "366:6:9",
														"nodeType": "YulTypedName",
														"src": "366:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "374:3:9",
														"nodeType": "YulTypedName",
														"src": "374:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "382:5:9",
														"nodeType": "YulTypedName",
														"src": "382:5:9",
														"type": ""
													}
												],
												"src": "328:723:9"
											},
											{
												"body": {
													"nativeSrc": "1208:576:9",
													"nodeType": "YulBlock",
													"src": "1208:576:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1255:16:9",
																"nodeType": "YulBlock",
																"src": "1255:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1264:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1264:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1267:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1267:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1257:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1257:6:9"
																			},
																			"nativeSrc": "1257:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1257:12:9"
																		},
																		"nativeSrc": "1257:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1257:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1229:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1229:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1238:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1238:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1225:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1225:3:9"
																		},
																		"nativeSrc": "1225:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1225:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1250:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1250:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1221:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1221:3:9"
																},
																"nativeSrc": "1221:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1221:33:9"
															},
															"nativeSrc": "1218:53:9",
															"nodeType": "YulIf",
															"src": "1218:53:9"
														},
														{
															"nativeSrc": "1280:50:9",
															"nodeType": "YulAssignment",
															"src": "1280:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1320:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1320:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "1290:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "1290:29:9"
																},
																"nativeSrc": "1290:40:9",
																"nodeType": "YulFunctionCall",
																"src": "1290:40:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1280:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1280:6:9"
																}
															]
														},
														{
															"nativeSrc": "1339:59:9",
															"nodeType": "YulAssignment",
															"src": "1339:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1383:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1383:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1394:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1394:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1379:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1379:3:9"
																		},
																		"nativeSrc": "1379:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1379:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "1349:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "1349:29:9"
																},
																"nativeSrc": "1349:49:9",
																"nodeType": "YulFunctionCall",
																"src": "1349:49:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1339:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:9"
																}
															]
														},
														{
															"nativeSrc": "1407:39:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1407:39:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1431:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1431:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1442:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1442:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1427:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:9"
																		},
																		"nativeSrc": "1427:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1421:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1421:5:9"
																},
																"nativeSrc": "1421:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1421:25:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1411:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1411:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1489:16:9",
																"nodeType": "YulBlock",
																"src": "1489:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1498:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1501:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1501:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1491:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1491:6:9"
																			},
																			"nativeSrc": "1491:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1491:12:9"
																		},
																		"nativeSrc": "1491:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1491:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1461:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1461:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1477:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1477:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1481:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1481:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1473:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:9"
																				},
																				"nativeSrc": "1473:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1473:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1485:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1485:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1469:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1469:3:9"
																		},
																		"nativeSrc": "1469:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1469:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1458:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1458:2:9"
																},
																"nativeSrc": "1458:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1458:30:9"
															},
															"nativeSrc": "1455:50:9",
															"nodeType": "YulIf",
															"src": "1455:50:9"
														},
														{
															"nativeSrc": "1514:71:9",
															"nodeType": "YulAssignment",
															"src": "1514:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1557:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1557:9:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1568:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1568:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1553:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1553:3:9"
																		},
																		"nativeSrc": "1553:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1553:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1577:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "1577:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1524:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "1524:28:9"
																},
																"nativeSrc": "1524:61:9",
																"nodeType": "YulFunctionCall",
																"src": "1524:61:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1514:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1514:6:9"
																}
															]
														},
														{
															"nativeSrc": "1594:41:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1594:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1620:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1620:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1631:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1631:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1616:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1616:3:9"
																		},
																		"nativeSrc": "1616:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1616:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1610:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1610:5:9"
																},
																"nativeSrc": "1610:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1610:25:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1598:8:9",
																	"nodeType": "YulTypedName",
																	"src": "1598:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1680:16:9",
																"nodeType": "YulBlock",
																"src": "1680:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1689:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1689:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1692:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1692:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1682:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1682:6:9"
																			},
																			"nativeSrc": "1682:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1682:12:9"
																		},
																		"nativeSrc": "1682:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1682:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1650:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1650:8:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1668:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1668:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1672:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1672:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1664:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1664:3:9"
																				},
																				"nativeSrc": "1664:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1664:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1676:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1676:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1660:3:9"
																		},
																		"nativeSrc": "1660:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1660:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1647:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1647:2:9"
																},
																"nativeSrc": "1647:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1647:32:9"
															},
															"nativeSrc": "1644:52:9",
															"nodeType": "YulIf",
															"src": "1644:52:9"
														},
														{
															"nativeSrc": "1705:73:9",
															"nodeType": "YulAssignment",
															"src": "1705:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1748:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1748:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1759:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "1759:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1744:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1744:3:9"
																		},
																		"nativeSrc": "1744:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1744:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1770:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "1770:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1715:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "1715:28:9"
																},
																"nativeSrc": "1715:63:9",
																"nodeType": "YulFunctionCall",
																"src": "1715:63:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1705:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1705:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "1056:728:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1150:9:9",
														"nodeType": "YulTypedName",
														"src": "1150:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1161:7:9",
														"nodeType": "YulTypedName",
														"src": "1161:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1173:6:9",
														"nodeType": "YulTypedName",
														"src": "1173:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1181:6:9",
														"nodeType": "YulTypedName",
														"src": "1181:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1189:6:9",
														"nodeType": "YulTypedName",
														"src": "1189:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1197:6:9",
														"nodeType": "YulTypedName",
														"src": "1197:6:9",
														"type": ""
													}
												],
												"src": "1056:728:9"
											},
											{
												"body": {
													"nativeSrc": "1844:325:9",
													"nodeType": "YulBlock",
													"src": "1844:325:9",
													"statements": [
														{
															"nativeSrc": "1854:22:9",
															"nodeType": "YulAssignment",
															"src": "1854:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1868:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1868:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1871:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1871:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1864:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1864:3:9"
																},
																"nativeSrc": "1864:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1864:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1854:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1854:6:9"
																}
															]
														},
														{
															"nativeSrc": "1885:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1885:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1915:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1915:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1921:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1921:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1911:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1911:3:9"
																},
																"nativeSrc": "1911:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1911:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1889:18:9",
																	"nodeType": "YulTypedName",
																	"src": "1889:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1962:31:9",
																"nodeType": "YulBlock",
																"src": "1962:31:9",
																"statements": [
																	{
																		"nativeSrc": "1964:27:9",
																		"nodeType": "YulAssignment",
																		"src": "1964:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1978:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1978:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1986:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1986:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1974:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1974:3:9"
																			},
																			"nativeSrc": "1974:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1974:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1964:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1964:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1942:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1942:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1935:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1935:6:9"
																},
																"nativeSrc": "1935:26:9",
																"nodeType": "YulFunctionCall",
																"src": "1935:26:9"
															},
															"nativeSrc": "1932:61:9",
															"nodeType": "YulIf",
															"src": "1932:61:9"
														},
														{
															"body": {
																"nativeSrc": "2052:111:9",
																"nodeType": "YulBlock",
																"src": "2052:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2073:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2080:3:9",
																							"nodeType": "YulLiteral",
																							"src": "2080:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2085:10:9",
																							"nodeType": "YulLiteral",
																							"src": "2085:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2076:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2076:3:9"
																					},
																					"nativeSrc": "2076:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2076:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2066:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2066:6:9"
																			},
																			"nativeSrc": "2066:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2066:31:9"
																		},
																		"nativeSrc": "2066:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2066:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2117:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2117:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2120:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2120:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2110:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2110:6:9"
																			},
																			"nativeSrc": "2110:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2110:15:9"
																		},
																		"nativeSrc": "2110:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2110:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2145:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2145:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2148:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2148:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2138:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2138:6:9"
																			},
																			"nativeSrc": "2138:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2138:15:9"
																		},
																		"nativeSrc": "2138:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2138:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2008:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2008:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2031:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2031:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2039:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2039:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2028:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2028:2:9"
																		},
																		"nativeSrc": "2028:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2028:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2005:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2005:2:9"
																},
																"nativeSrc": "2005:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2005:38:9"
															},
															"nativeSrc": "2002:161:9",
															"nodeType": "YulIf",
															"src": "2002:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1789:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1824:4:9",
														"nodeType": "YulTypedName",
														"src": "1824:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1833:6:9",
														"nodeType": "YulTypedName",
														"src": "1833:6:9",
														"type": ""
													}
												],
												"src": "1789:380:9"
											},
											{
												"body": {
													"nativeSrc": "2230:65:9",
													"nodeType": "YulBlock",
													"src": "2230:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2247:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2247:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2250:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2250:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2240:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2240:6:9"
																},
																"nativeSrc": "2240:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2240:14:9"
															},
															"nativeSrc": "2240:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "2240:14:9"
														},
														{
															"nativeSrc": "2263:26:9",
															"nodeType": "YulAssignment",
															"src": "2263:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2281:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2281:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2284:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2284:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2271:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2271:9:9"
																},
																"nativeSrc": "2271:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2271:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2263:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2263:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2174:121:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2213:3:9",
														"nodeType": "YulTypedName",
														"src": "2213:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2221:4:9",
														"nodeType": "YulTypedName",
														"src": "2221:4:9",
														"type": ""
													}
												],
												"src": "2174:121:9"
											},
											{
												"body": {
													"nativeSrc": "2381:437:9",
													"nodeType": "YulBlock",
													"src": "2381:437:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2414:398:9",
																"nodeType": "YulBlock",
																"src": "2414:398:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2435:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2435:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2438:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2438:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2428:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2428:6:9"
																			},
																			"nativeSrc": "2428:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2428:16:9"
																		},
																		"nativeSrc": "2428:16:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2428:16:9"
																	},
																	{
																		"nativeSrc": "2457:30:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2457:30:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2479:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2479:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2482:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2482:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2469:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2469:9:9"
																			},
																			"nativeSrc": "2469:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2469:18:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2461:4:9",
																				"nodeType": "YulTypedName",
																				"src": "2461:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2500:57:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2500:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2523:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "2523:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2533:1:9",
																							"nodeType": "YulLiteral",
																							"src": "2533:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2540:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "2540:10:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2552:2:9",
																									"nodeType": "YulLiteral",
																									"src": "2552:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2536:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2536:3:9"
																							},
																							"nativeSrc": "2536:19:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2536:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2529:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2529:3:9"
																					},
																					"nativeSrc": "2529:27:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2529:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2519:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2519:3:9"
																			},
																			"nativeSrc": "2519:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2519:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2504:11:9",
																				"nodeType": "YulTypedName",
																				"src": "2504:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2594:23:9",
																			"nodeType": "YulBlock",
																			"src": "2594:23:9",
																			"statements": [
																				{
																					"nativeSrc": "2596:19:9",
																					"nodeType": "YulAssignment",
																					"src": "2596:19:9",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2611:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2611:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2596:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "2596:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2576:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "2576:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2588:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2588:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2573:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "2573:2:9"
																			},
																			"nativeSrc": "2573:20:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2573:20:9"
																		},
																		"nativeSrc": "2570:47:9",
																		"nodeType": "YulIf",
																		"src": "2570:47:9"
																	},
																	{
																		"nativeSrc": "2630:41:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2630:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2644:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "2644:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2654:1:9",
																							"nodeType": "YulLiteral",
																							"src": "2654:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2661:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2661:3:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2666:2:9",
																									"nodeType": "YulLiteral",
																									"src": "2666:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2657:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2657:3:9"
																							},
																							"nativeSrc": "2657:12:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2657:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2650:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2650:3:9"
																					},
																					"nativeSrc": "2650:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2650:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2640:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2640:3:9"
																			},
																			"nativeSrc": "2640:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2640:31:9"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2634:2:9",
																				"nodeType": "YulTypedName",
																				"src": "2634:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2684:24:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2684:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2697:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "2697:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2688:5:9",
																				"nodeType": "YulTypedName",
																				"src": "2688:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2782:20:9",
																			"nodeType": "YulBlock",
																			"src": "2782:20:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2791:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "2791:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2798:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2798:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2784:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2784:6:9"
																						},
																						"nativeSrc": "2784:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2784:16:9"
																					},
																					"nativeSrc": "2784:16:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "2784:16:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2732:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2732:5:9"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2739:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "2739:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2729:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "2729:2:9"
																			},
																			"nativeSrc": "2729:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2729:13:9"
																		},
																		"nativeSrc": "2721:81:9",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2743:26:9",
																			"nodeType": "YulBlock",
																			"src": "2743:26:9",
																			"statements": [
																				{
																					"nativeSrc": "2745:22:9",
																					"nodeType": "YulAssignment",
																					"src": "2745:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2758:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "2758:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2765:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2765:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2754:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2754:3:9"
																						},
																						"nativeSrc": "2754:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2754:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2745:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "2745:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2725:3:9",
																			"nodeType": "YulBlock",
																			"src": "2725:3:9",
																			"statements": []
																		},
																		"src": "2721:81:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2397:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2402:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2402:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2394:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2394:2:9"
																},
																"nativeSrc": "2394:11:9",
																"nodeType": "YulFunctionCall",
																"src": "2394:11:9"
															},
															"nativeSrc": "2391:421:9",
															"nodeType": "YulIf",
															"src": "2391:421:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2300:518:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2353:5:9",
														"nodeType": "YulTypedName",
														"src": "2353:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2360:3:9",
														"nodeType": "YulTypedName",
														"src": "2360:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2365:10:9",
														"nodeType": "YulTypedName",
														"src": "2365:10:9",
														"type": ""
													}
												],
												"src": "2300:518:9"
											},
											{
												"body": {
													"nativeSrc": "2908:81:9",
													"nodeType": "YulBlock",
													"src": "2908:81:9",
													"statements": [
														{
															"nativeSrc": "2918:65:9",
															"nodeType": "YulAssignment",
															"src": "2918:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2933:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2933:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2951:1:9",
																										"nodeType": "YulLiteral",
																										"src": "2951:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2954:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "2954:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2947:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2947:3:9"
																								},
																								"nativeSrc": "2947:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2947:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2964:1:9",
																										"nodeType": "YulLiteral",
																										"src": "2964:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2960:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2960:3:9"
																								},
																								"nativeSrc": "2960:6:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2960:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2943:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2943:3:9"
																						},
																						"nativeSrc": "2943:24:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2943:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2939:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2939:3:9"
																				},
																				"nativeSrc": "2939:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2939:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2929:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2929:3:9"
																		},
																		"nativeSrc": "2929:40:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2929:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2975:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2975:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2978:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2978:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2971:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2971:3:9"
																		},
																		"nativeSrc": "2971:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2971:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2926:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2926:2:9"
																},
																"nativeSrc": "2926:57:9",
																"nodeType": "YulFunctionCall",
																"src": "2926:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2918:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2918:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2823:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2885:4:9",
														"nodeType": "YulTypedName",
														"src": "2885:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2891:3:9",
														"nodeType": "YulTypedName",
														"src": "2891:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2899:4:9",
														"nodeType": "YulTypedName",
														"src": "2899:4:9",
														"type": ""
													}
												],
												"src": "2823:166:9"
											},
											{
												"body": {
													"nativeSrc": "3090:1203:9",
													"nodeType": "YulBlock",
													"src": "3090:1203:9",
													"statements": [
														{
															"nativeSrc": "3100:24:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3100:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3120:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3120:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3114:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3114:5:9"
																},
																"nativeSrc": "3114:10:9",
																"nodeType": "YulFunctionCall",
																"src": "3114:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3104:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3104:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3167:22:9",
																"nodeType": "YulBlock",
																"src": "3167:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3169:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "3169:16:9"
																			},
																			"nativeSrc": "3169:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3169:18:9"
																		},
																		"nativeSrc": "3169:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3169:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3139:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3139:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3155:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3155:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3159:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3159:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3151:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3151:3:9"
																				},
																				"nativeSrc": "3151:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3151:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3163:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3163:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3147:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:9"
																		},
																		"nativeSrc": "3147:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3147:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3136:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3136:2:9"
																},
																"nativeSrc": "3136:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3136:30:9"
															},
															"nativeSrc": "3133:56:9",
															"nodeType": "YulIf",
															"src": "3133:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3242:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3242:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3280:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "3280:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3274:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3274:5:9"
																				},
																				"nativeSrc": "3274:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3274:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3248:25:9",
																			"nodeType": "YulIdentifier",
																			"src": "3248:25:9"
																		},
																		"nativeSrc": "3248:38:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3248:38:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3288:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3288:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3198:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3198:43:9"
																},
																"nativeSrc": "3198:97:9",
																"nodeType": "YulFunctionCall",
																"src": "3198:97:9"
															},
															"nativeSrc": "3198:97:9",
															"nodeType": "YulExpressionStatement",
															"src": "3198:97:9"
														},
														{
															"nativeSrc": "3304:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3304:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3321:1:9",
																"nodeType": "YulLiteral",
																"src": "3321:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3308:9:9",
																	"nodeType": "YulTypedName",
																	"src": "3308:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3331:17:9",
															"nodeType": "YulAssignment",
															"src": "3331:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3344:4:9",
																"nodeType": "YulLiteral",
																"src": "3344:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3331:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3331:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3394:642:9",
																		"nodeType": "YulBlock",
																		"src": "3394:642:9",
																		"statements": [
																			{
																				"nativeSrc": "3408:35:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3408:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3427:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "3427:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3439:2:9",
																									"nodeType": "YulLiteral",
																									"src": "3439:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3435:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "3435:3:9"
																							},
																							"nativeSrc": "3435:7:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3435:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3423:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3423:3:9"
																					},
																					"nativeSrc": "3423:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3423:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3412:7:9",
																						"nodeType": "YulTypedName",
																						"src": "3412:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3456:49:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3456:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3500:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "3500:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3470:29:9",
																						"nodeType": "YulIdentifier",
																						"src": "3470:29:9"
																					},
																					"nativeSrc": "3470:35:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3470:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3460:6:9",
																						"nodeType": "YulTypedName",
																						"src": "3460:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3518:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3518:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3527:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3527:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3522:1:9",
																						"nodeType": "YulTypedName",
																						"src": "3522:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3598:165:9",
																					"nodeType": "YulBlock",
																					"src": "3598:165:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3623:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "3623:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3641:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "3641:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3646:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "3646:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3637:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "3637:3:9"
																												},
																												"nativeSrc": "3637:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "3637:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3631:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "3631:5:9"
																										},
																										"nativeSrc": "3631:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "3631:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3616:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "3616:6:9"
																								},
																								"nativeSrc": "3616:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3616:42:9"
																							},
																							"nativeSrc": "3616:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "3616:42:9"
																						},
																						{
																							"nativeSrc": "3675:24:9",
																							"nodeType": "YulAssignment",
																							"src": "3675:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3689:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "3689:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3697:1:9",
																										"nodeType": "YulLiteral",
																										"src": "3697:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3685:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3685:3:9"
																								},
																								"nativeSrc": "3685:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3685:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3675:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "3675:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3716:33:9",
																							"nodeType": "YulAssignment",
																							"src": "3716:33:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3733:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "3733:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3744:4:9",
																										"nodeType": "YulLiteral",
																										"src": "3744:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3729:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3729:3:9"
																								},
																								"nativeSrc": "3729:20:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3729:20:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3716:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "3716:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3552:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "3552:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3555:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "3555:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3549:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "3549:2:9"
																					},
																					"nativeSrc": "3549:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3549:14:9"
																				},
																				"nativeSrc": "3541:222:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3564:21:9",
																					"nodeType": "YulBlock",
																					"src": "3564:21:9",
																					"statements": [
																						{
																							"nativeSrc": "3566:17:9",
																							"nodeType": "YulAssignment",
																							"src": "3566:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3575:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "3575:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3578:4:9",
																										"nodeType": "YulLiteral",
																										"src": "3578:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3571:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:9"
																								},
																								"nativeSrc": "3571:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3571:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3566:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "3566:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3545:3:9",
																					"nodeType": "YulBlock",
																					"src": "3545:3:9",
																					"statements": []
																				},
																				"src": "3541:222:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "3811:166:9",
																					"nodeType": "YulBlock",
																					"src": "3811:166:9",
																					"statements": [
																						{
																							"nativeSrc": "3829:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3829:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3856:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "3856:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3861:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "3861:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3852:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "3852:3:9"
																										},
																										"nativeSrc": "3852:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "3852:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3846:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "3846:5:9"
																								},
																								"nativeSrc": "3846:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3846:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3833:9:9",
																									"nodeType": "YulTypedName",
																									"src": "3833:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3896:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "3896:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3908:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "3908:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3935:1:9",
																																				"nodeType": "YulLiteral",
																																				"src": "3935:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3938:6:9",
																																				"nodeType": "YulIdentifier",
																																				"src": "3938:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3931:3:9",
																																			"nodeType": "YulIdentifier",
																																			"src": "3931:3:9"
																																		},
																																		"nativeSrc": "3931:14:9",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3931:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3947:3:9",
																																		"nodeType": "YulLiteral",
																																		"src": "3947:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3927:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "3927:3:9"
																																},
																																"nativeSrc": "3927:24:9",
																																"nodeType": "YulFunctionCall",
																																"src": "3927:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3957:1:9",
																																		"nodeType": "YulLiteral",
																																		"src": "3957:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3953:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "3953:3:9"
																																},
																																"nativeSrc": "3953:6:9",
																																"nodeType": "YulFunctionCall",
																																"src": "3953:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3923:3:9",
																															"nodeType": "YulIdentifier",
																															"src": "3923:3:9"
																														},
																														"nativeSrc": "3923:37:9",
																														"nodeType": "YulFunctionCall",
																														"src": "3923:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3919:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "3919:3:9"
																												},
																												"nativeSrc": "3919:42:9",
																												"nodeType": "YulFunctionCall",
																												"src": "3919:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3904:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "3904:3:9"
																										},
																										"nativeSrc": "3904:58:9",
																										"nodeType": "YulFunctionCall",
																										"src": "3904:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3889:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "3889:6:9"
																								},
																								"nativeSrc": "3889:74:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3889:74:9"
																							},
																							"nativeSrc": "3889:74:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "3889:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3782:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "3782:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3791:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "3791:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3779:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "3779:2:9"
																					},
																					"nativeSrc": "3779:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3779:19:9"
																				},
																				"nativeSrc": "3776:201:9",
																				"nodeType": "YulIf",
																				"src": "3776:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3997:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "3997:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4011:1:9",
																											"nodeType": "YulLiteral",
																											"src": "4011:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4014:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "4014:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4007:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "4007:3:9"
																									},
																									"nativeSrc": "4007:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "4007:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4023:1:9",
																									"nodeType": "YulLiteral",
																									"src": "4023:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4003:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "4003:3:9"
																							},
																							"nativeSrc": "4003:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4003:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3990:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3990:6:9"
																					},
																					"nativeSrc": "3990:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3990:36:9"
																				},
																				"nativeSrc": "3990:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3990:36:9"
																			}
																		]
																	},
																	"nativeSrc": "3387:649:9",
																	"nodeType": "YulCase",
																	"src": "3387:649:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3392:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3392:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4053:234:9",
																		"nodeType": "YulBlock",
																		"src": "4053:234:9",
																		"statements": [
																			{
																				"nativeSrc": "4067:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4067:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4080:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4080:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4071:5:9",
																						"nodeType": "YulTypedName",
																						"src": "4071:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4116:67:9",
																					"nodeType": "YulBlock",
																					"src": "4116:67:9",
																					"statements": [
																						{
																							"nativeSrc": "4134:35:9",
																							"nodeType": "YulAssignment",
																							"src": "4134:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4153:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "4153:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4158:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4158:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4149:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "4149:3:9"
																										},
																										"nativeSrc": "4149:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4149:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4143:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4143:5:9"
																								},
																								"nativeSrc": "4143:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4143:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4134:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4134:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4097:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4097:6:9"
																				},
																				"nativeSrc": "4094:89:9",
																				"nodeType": "YulIf",
																				"src": "4094:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4203:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4203:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4262:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4262:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4269:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4269:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4209:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "4209:52:9"
																							},
																							"nativeSrc": "4209:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4209:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4196:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4196:6:9"
																					},
																					"nativeSrc": "4196:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4196:81:9"
																				},
																				"nativeSrc": "4196:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4196:81:9"
																			}
																		]
																	},
																	"nativeSrc": "4045:242:9",
																	"nodeType": "YulCase",
																	"src": "4045:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3367:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3367:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3375:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3375:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3364:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3364:2:9"
																},
																"nativeSrc": "3364:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3364:14:9"
															},
															"nativeSrc": "3357:930:9",
															"nodeType": "YulSwitch",
															"src": "3357:930:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2994:1299:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3075:4:9",
														"nodeType": "YulTypedName",
														"src": "3075:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3081:3:9",
														"nodeType": "YulTypedName",
														"src": "3081:3:9",
														"type": ""
													}
												],
												"src": "2994:1299:9"
											},
											{
												"body": {
													"nativeSrc": "4472:177:9",
													"nodeType": "YulBlock",
													"src": "4472:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4489:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4489:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4500:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4500:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4482:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:9"
																},
																"nativeSrc": "4482:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4482:21:9"
															},
															"nativeSrc": "4482:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4482:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4534:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4534:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4519:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4519:3:9"
																		},
																		"nativeSrc": "4519:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4519:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4539:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4539:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4512:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4512:6:9"
																},
																"nativeSrc": "4512:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4512:30:9"
															},
															"nativeSrc": "4512:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4512:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4562:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4562:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4573:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4573:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4558:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:9"
																		},
																		"nativeSrc": "4558:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4558:18:9"
																	},
																	{
																		"hexValue": "5745544820616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "4578:29:9",
																		"nodeType": "YulLiteral",
																		"src": "4578:29:9",
																		"type": "",
																		"value": "WETH address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4551:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4551:6:9"
																},
																"nativeSrc": "4551:57:9",
																"nodeType": "YulFunctionCall",
																"src": "4551:57:9"
															},
															"nativeSrc": "4551:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "4551:57:9"
														},
														{
															"nativeSrc": "4617:26:9",
															"nodeType": "YulAssignment",
															"src": "4617:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4629:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4629:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4640:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4625:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4625:3:9"
																},
																"nativeSrc": "4625:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4625:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4617:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4617:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_223e7e21f1e005e14a47cf68489b873f054d1423f02e114052090f0c6fbd3b11__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4298:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4449:9:9",
														"nodeType": "YulTypedName",
														"src": "4449:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4463:4:9",
														"nodeType": "YulTypedName",
														"src": "4463:4:9",
														"type": ""
													}
												],
												"src": "4298:351:9"
											},
											{
												"body": {
													"nativeSrc": "4828:227:9",
													"nodeType": "YulBlock",
													"src": "4828:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4845:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4845:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4856:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4856:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4838:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4838:6:9"
																},
																"nativeSrc": "4838:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4838:21:9"
															},
															"nativeSrc": "4838:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4838:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4879:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4879:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4890:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4890:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4875:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4875:3:9"
																		},
																		"nativeSrc": "4875:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4875:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4895:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4895:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4868:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4868:6:9"
																},
																"nativeSrc": "4868:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4868:30:9"
															},
															"nativeSrc": "4868:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4868:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4918:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4918:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4929:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4929:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4914:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4914:3:9"
																		},
																		"nativeSrc": "4914:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4914:18:9"
																	},
																	{
																		"hexValue": "46756e6420706f7274666f6c696f20616464726573732063616e6e6f74206265",
																		"kind": "string",
																		"nativeSrc": "4934:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4934:34:9",
																		"type": "",
																		"value": "Fund portfolio address cannot be"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4907:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4907:6:9"
																},
																"nativeSrc": "4907:62:9",
																"nodeType": "YulFunctionCall",
																"src": "4907:62:9"
															},
															"nativeSrc": "4907:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "4907:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4989:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4989:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5000:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5000:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4985:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4985:3:9"
																		},
																		"nativeSrc": "4985:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4985:18:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "5005:7:9",
																		"nodeType": "YulLiteral",
																		"src": "5005:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4978:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4978:6:9"
																},
																"nativeSrc": "4978:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4978:35:9"
															},
															"nativeSrc": "4978:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4978:35:9"
														},
														{
															"nativeSrc": "5022:27:9",
															"nodeType": "YulAssignment",
															"src": "5022:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5034:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5034:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5045:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5045:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5030:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5030:3:9"
																},
																"nativeSrc": "5030:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5030:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5022:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5022:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50c197e522fff986de4bf4eedbdfb702f19e0aa534018456bb4f299eea67a9b5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4654:401:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4805:9:9",
														"nodeType": "YulTypedName",
														"src": "4805:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4819:4:9",
														"nodeType": "YulTypedName",
														"src": "4819:4:9",
														"type": ""
													}
												],
												"src": "4654:401:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let offset := mload(add(headStart, 64))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 96))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value3 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_223e7e21f1e005e14a47cf68489b873f054d1423f02e114052090f0c6fbd3b11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"WETH address cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_50c197e522fff986de4bf4eedbdfb702f19e0aa534018456bb4f299eea67a9b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Fund portfolio address cannot be\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b5060405161172c38038061172c83398101604081905261002e916101fa565b8181600361003c8382610304565b5060046100498282610304565b50506001600555506001600160a01b0384166100ac5760405162461bcd60e51b815260206004820152601b60248201527f5745544820616464726573732063616e6e6f74206265207a65726f000000000060448201526064015b60405180910390fd5b6001600160a01b0383166101105760405162461bcd60e51b815260206004820152602560248201527f46756e6420706f7274666f6c696f20616464726573732063616e6e6f74206265604482015264207a65726f60d81b60648201526084016100a3565b50506001600160a01b039182166080521660a052335f908152600660205260409020805460ff191660011790556103be565b80516001600160a01b0381168114610158575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610180575f5ffd5b81516001600160401b038111156101995761019961015d565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101c7576101c761015d565b6040528181528382016020018510156101de575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f6080858703121561020d575f5ffd5b61021685610142565b935061022460208601610142565b60408601519093506001600160401b0381111561023f575f5ffd5b61024b87828801610171565b606087015190935090506001600160401b03811115610268575f5ffd5b61027487828801610171565b91505092959194509250565b600181811c9082168061029457607f821691505b6020821081036102b257634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102ff57805f5260205f20601f840160051c810160208510156102dd5750805b601f840160051c820191505b818110156102fc575f81556001016102e9565b50505b505050565b81516001600160401b0381111561031d5761031d61015d565b6103318161032b8454610280565b846102b8565b6020601f821160018114610363575f831561034c5750848201515b5f19600385901b1c1916600184901b1784556102fc565b5f84815260208120601f198516915b828110156103925787850151825560209485019460019092019101610372565b50848210156103af57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b60805160a0516113386103f45f395f81816102bb01526107c801525f81816101e00152818161077101526107a601526113385ff3fe608060405234801561000f575f5ffd5b5060043610610127575f3560e01c80634b0bddd2116100a9578063a457c2d71161006e578063a457c2d714610290578063a9059cbb146102a3578063aa4d1655146102b6578063b6b55f25146102dd578063dd62ed3e146102f0575f5ffd5b80634b0bddd21461023c57806370a082311461024f57806373acb5901461027757806395d89b411461028057806399530b0614610288575f5ffd5b80632e1a7d4d116100ef5780632e1a7d4d146101a6578063313ce567146101b957806339509351146101c85780633fc8cef3146101db578063429b62e51461021a575f5ffd5b806306fdde031461012b57806308867db614610149578063095ea7b31461015e57806318160ddd1461018157806323b872dd14610193575b5f5ffd5b610133610303565b60405161014091906110e0565b60405180910390f35b61015c610157366004611115565b610393565b005b61017161016c366004611147565b610439565b6040519015158152602001610140565b6002545b604051908152602001610140565b6101716101a136600461116f565b610452565b61015c6101b4366004611115565b610475565b60405160128152602001610140565b6101716101d6366004611147565b610596565b6102027f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610140565b6101716102283660046111a9565b60066020525f908152604090205460ff1681565b61015c61024a3660046111d6565b6105b7565b61018561025d3660046111a9565b6001600160a01b03165f9081526020819052604090205490565b61018560075481565b61013361062e565b61018561063d565b61017161029e366004611147565b610686565b6101716102b1366004611147565b610700565b6102027f000000000000000000000000000000000000000000000000000000000000000081565b61015c6102eb366004611115565b61070d565b6101856102fe36600461120b565b610841565b6060600380546103129061123c565b80601f016020809104026020016040519081016040528092919081815260200182805461033e9061123c565b80156103895780601f1061036057610100808354040283529160200191610389565b820191905f5260205f20905b81548152906001019060200180831161036c57829003601f168201915b5050505050905090565b335f9081526006602052604090205460ff166103e55760405162461bcd60e51b815260206004820152600c60248201526b2737ba1030b71030b236b4b760a11b60448201526064015b60405180910390fd5b5f81116104345760405162461bcd60e51b815260206004820181905260248201527f506f7274666f6c696f2076616c7565206d75737420626520706f73697469766560448201526064016103dc565b600755565b5f3361044681858561086b565b60019150505b92915050565b5f3361045f85828561098f565b61046a858585610a07565b506001949350505050565b61047d610ba9565b5f81116104cc5760405162461bcd60e51b815260206004820181905260248201527f536861726573206d7573742062652067726561746572207468616e207a65726f60448201526064016103dc565b335f908152602081905260409020548111156105205760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742073686172657360681b60448201526064016103dc565b5f61052a60025490565b90505f816007548461053c9190611288565b610546919061129f565b90506105523384610c02565b60405181815233907f9345a8a944c0bca27038313dd8066210a495ba6374e523065a2e7adcc020ff2b9060200160405180910390a250506105936001600555565b50565b5f336104468185856105a88383610841565b6105b291906112be565b61086b565b335f9081526006602052604090205460ff166106045760405162461bcd60e51b815260206004820152600c60248201526b2737ba1030b71030b236b4b760a11b60448201526064016103dc565b6001600160a01b03919091165f908152600660205260409020805460ff1916911515919091179055565b6060600480546103129061123c565b5f5f61064860025490565b905080156106765780600754670de0b6b3a76400006106679190611288565b610671919061129f565b610680565b670de0b6b3a76400005b91505090565b5f33816106938286610841565b9050838110156106f35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103dc565b61046a828686840361086b565b5f33610446818585610a07565b610715610ba9565b5f81116107645760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016103dc565b6107996001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610d2f565b6107ed6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610d9a565b5f6107f760025490565b90505f8115806108075750600754155b610827576007546108188385611288565b610822919061129f565b610829565b825b90506108353382610dca565b50506105936001600555565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166108cd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103dc565b6001600160a01b03821661092e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dc565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b5f61099a8484610841565b90505f198114610a0157818110156109f45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103dc565b610a01848484840361086b565b50505050565b6001600160a01b038316610a6b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dc565b6001600160a01b038216610acd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dc565b6001600160a01b0383165f9081526020819052604090205481811015610b445760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103dc565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a01565b600260055403610bfb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103dc565b6002600555565b6001600160a01b038216610c625760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103dc565b6001600160a01b0382165f9081526020819052604090205481811015610cd55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103dc565b6001600160a01b0383165f818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610982565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610a019085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e87565b6040516001600160a01b038316602482015260448101829052610d2a90849063a9059cbb60e01b90606401610d63565b6001600160a01b038216610e205760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103dc565b8060025f828254610e3191906112be565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f610edb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f5a9092919063ffffffff16565b905080515f1480610efb575080806020019051810190610efb91906112d1565b610d2a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103dc565b6060610f6884845f85610f70565b949350505050565b606082471015610fd15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103dc565b5f5f866001600160a01b03168587604051610fec91906112ec565b5f6040518083038185875af1925050503d805f8114611026576040519150601f19603f3d011682016040523d82523d5f602084013e61102b565b606091505b509150915061103c87838387611047565b979650505050505050565b606083156110b55782515f036110ae576001600160a01b0385163b6110ae5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103dc565b5081610f68565b610f6883838151156110ca5781518083602001fd5b8060405162461bcd60e51b81526004016103dc91905b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215611125575f5ffd5b5035919050565b80356001600160a01b0381168114611142575f5ffd5b919050565b5f5f60408385031215611158575f5ffd5b6111618361112c565b946020939093013593505050565b5f5f5f60608486031215611181575f5ffd5b61118a8461112c565b92506111986020850161112c565b929592945050506040919091013590565b5f602082840312156111b9575f5ffd5b6111c28261112c565b9392505050565b8015158114610593575f5ffd5b5f5f604083850312156111e7575f5ffd5b6111f08361112c565b91506020830135611200816111c9565b809150509250929050565b5f5f6040838503121561121c575f5ffd5b6112258361112c565b91506112336020840161112c565b90509250929050565b600181811c9082168061125057607f821691505b60208210810361126e57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761044c5761044c611274565b5f826112b957634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561044c5761044c611274565b5f602082840312156112e1575f5ffd5b81516111c2816111c9565b5f82518060208501845e5f92019182525091905056fea264697066735822122006e586570c1c06a9fe2011c94ab30d4de4ce6e3b579667b95f1a270f0e93ea8d64736f6c634300081c0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x172C CODESIZE SUB DUP1 PUSH2 0x172C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x1FA JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 PUSH2 0x3C DUP4 DUP3 PUSH2 0x304 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x49 DUP3 DUP3 PUSH2 0x304 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5745544820616464726573732063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6420706F7274666F6C696F20616464726573732063616E6E6F74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA3 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x3BE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x158 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x180 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x199 JUMPI PUSH2 0x199 PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1C7 JUMPI PUSH2 0x1C7 PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x1DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x216 DUP6 PUSH2 0x142 JUMP JUMPDEST SWAP4 POP PUSH2 0x224 PUSH1 0x20 DUP7 ADD PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x23F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x24B DUP8 DUP3 DUP9 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x268 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x274 DUP8 DUP3 DUP9 ADD PUSH2 0x171 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x294 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2FF JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2DD JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2FC JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x31D JUMPI PUSH2 0x31D PUSH2 0x15D JUMP JUMPDEST PUSH2 0x331 DUP2 PUSH2 0x32B DUP5 SLOAD PUSH2 0x280 JUMP JUMPDEST DUP5 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x363 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x34C JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2FC JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x392 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x372 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x3AF JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1338 PUSH2 0x3F4 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x2BB ADD MSTORE PUSH2 0x7C8 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1E0 ADD MSTORE DUP2 DUP2 PUSH2 0x771 ADD MSTORE PUSH2 0x7A6 ADD MSTORE PUSH2 0x1338 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B0BDDD2 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xAA4D1655 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x4B0BDDD2 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x73ACB590 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x99530B06 EQ PUSH2 0x288 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x21A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8867DB6 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x193 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH2 0x202 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x185 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x185 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x171 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x700 JUMP JUMPDEST PUSH2 0x202 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST PUSH2 0x185 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x312 SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33E SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x360 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x389 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA1030B71030B236B4B7 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F7274666F6C696F2076616C7565206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x446 DUP2 DUP6 DUP6 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x45F DUP6 DUP3 DUP6 PUSH2 0x98F JUMP JUMPDEST PUSH2 0x46A DUP6 DUP6 DUP6 PUSH2 0xA07 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x47D PUSH2 0xBA9 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536861726573206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420736861726573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH0 PUSH2 0x52A PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x7 SLOAD DUP5 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x129F JUMP JUMPDEST SWAP1 POP PUSH2 0x552 CALLER DUP5 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x9345A8A944C0BCA27038313DD8066210A495BA6374E523065A2E7ADCC020FF2B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x593 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x446 DUP2 DUP6 DUP6 PUSH2 0x5A8 DUP4 DUP4 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA1030B71030B236B4B7 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x312 SWAP1 PUSH2 0x123C JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x648 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x676 JUMPI DUP1 PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x129F JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x693 DUP3 DUP7 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x46A DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x86B JUMP JUMPDEST PUSH0 CALLER PUSH2 0x446 DUP2 DUP6 DUP6 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x715 PUSH2 0xBA9 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x799 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x7ED PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP4 PUSH2 0xD9A JUMP JUMPDEST PUSH0 PUSH2 0x7F7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 ISZERO DUP1 PUSH2 0x807 JUMPI POP PUSH1 0x7 SLOAD ISZERO JUMPDEST PUSH2 0x827 JUMPI PUSH1 0x7 SLOAD PUSH2 0x818 DUP4 DUP6 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x129F JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH2 0x835 CALLER DUP3 PUSH2 0xDCA JUMP JUMPDEST POP POP PUSH2 0x593 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x99A DUP5 DUP5 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xA01 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH2 0xA01 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x86B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xACD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xBFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x982 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xA01 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xD2A SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x12BE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEDB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF5A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ DUP1 PUSH2 0xEFB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEFB SWAP2 SWAP1 PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0xD2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF68 DUP5 DUP5 PUSH0 DUP6 PUSH2 0xF70 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xFD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH0 PUSH0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x12EC JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1026 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x102B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x103C DUP8 DUP4 DUP4 DUP8 PUSH2 0x1047 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x10B5 JUMPI DUP3 MLOAD PUSH0 SUB PUSH2 0x10AE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x10AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST POP DUP2 PUSH2 0xF68 JUMP JUMPDEST PUSH2 0xF68 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x10CA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP2 SWAP1 JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1125 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1142 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1158 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1161 DUP4 PUSH2 0x112C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1181 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x118A DUP5 PUSH2 0x112C JUMP JUMPDEST SWAP3 POP PUSH2 0x1198 PUSH1 0x20 DUP6 ADD PUSH2 0x112C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11C2 DUP3 PUSH2 0x112C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x593 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11F0 DUP4 PUSH2 0x112C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1200 DUP2 PUSH2 0x11C9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x121C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1225 DUP4 PUSH2 0x112C JUMP JUMPDEST SWAP2 POP PUSH2 0x1233 PUSH1 0x20 DUP5 ADD PUSH2 0x112C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1250 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x126E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x1274 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x12B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x1274 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11C2 DUP2 PUSH2 0x11C9 JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xE5 DUP7 JUMPI 0xC SHR MOD 0xA9 INVALID KECCAK256 GT 0xC9 BLOBBASEFEE 0xB3 0xD 0x4D 0xE4 0xCE PUSH15 0x3B579667B95F1A270F0E93EA8D6473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "737:3216:0:-:0;;;1137:489;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1281:5;1288:7;2046:5:2;:13;1281:5:0;2046::2;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;1716:1:1;1821:7;:22;-1:-1:-1;;;;;;1316:19:0;::::1;1308:59;;;::::0;-1:-1:-1;;;1308:59:0;;4500:2:9;1308:59:0::1;::::0;::::1;4482:21:9::0;4539:2;4519:18;;;4512:30;4578:29;4558:18;;;4551:57;4625:18;;1308:59:0::1;;;;;;;;;-1:-1:-1::0;;;;;1386:28:0;::::1;1378:78;;;::::0;-1:-1:-1;;;1378:78:0;;4856:2:9;1378:78:0::1;::::0;::::1;4838:21:9::0;4895:2;4875:18;;;4868:30;4934:34;4914:18;;;4907:62;-1:-1:-1;;;4985:18:9;;;4978:35;5030:19;;1378:78:0::1;4654:401:9::0;1378:78:0::1;-1:-1:-1::0;;;;;;;1477:20:0;;::::1;;::::0;1508:30:::1;;::::0;1556:10:::1;1549:18;::::0;;;:6:::1;:18;::::0;;;;:25;;-1:-1:-1;;1549:25:0::1;1570:4;1549:25;::::0;;737:3216;;14:177:9;93:13;;-1:-1:-1;;;;;135:31:9;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:723;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;480:13;;-1:-1:-1;;;;;505:30:9;;502:56;;;538:18;;:::i;:::-;587:2;581:9;679:2;641:17;;-1:-1:-1;;637:31:9;;;670:2;633:40;629:54;617:67;;-1:-1:-1;;;;;699:34:9;;735:22;;;696:62;693:88;;;761:18;;:::i;:::-;797:2;790:22;821;;;862:19;;;883:4;858:30;855:39;-1:-1:-1;852:59:9;;;907:1;904;897:12;852:59;964:6;957:4;949:6;945:17;938:4;930:6;926:17;920:51;1019:1;991:19;;;1012:4;987:30;980:41;;;;995:6;328:723;-1:-1:-1;;;328:723:9:o;1056:728::-;1173:6;1181;1189;1197;1250:3;1238:9;1229:7;1225:23;1221:33;1218:53;;;1267:1;1264;1257:12;1218:53;1290:40;1320:9;1290:40;:::i;:::-;1280:50;;1349:49;1394:2;1383:9;1379:18;1349:49;:::i;:::-;1442:2;1427:18;;1421:25;1339:59;;-1:-1:-1;;;;;;1458:30:9;;1455:50;;;1501:1;1498;1491:12;1455:50;1524:61;1577:7;1568:6;1557:9;1553:22;1524:61;:::i;:::-;1631:2;1616:18;;1610:25;1514:71;;-1:-1:-1;1610:25:9;-1:-1:-1;;;;;;1647:32:9;;1644:52;;;1692:1;1689;1682:12;1644:52;1715:63;1770:7;1759:8;1748:9;1744:24;1715:63;:::i;:::-;1705:73;;;1056:728;;;;;;;:::o;1789:380::-;1868:1;1864:12;;;;1911;;;1932:61;;1986:4;1978:6;1974:17;1964:27;;1932:61;2039:2;2031:6;2028:14;2008:18;2005:38;2002:161;;2085:10;2080:3;2076:20;2073:1;2066:31;2120:4;2117:1;2110:15;2148:4;2145:1;2138:15;2002:161;;1789:380;;;:::o;2300:518::-;2402:2;2397:3;2394:11;2391:421;;;2438:5;2435:1;2428:16;2482:4;2479:1;2469:18;2552:2;2540:10;2536:19;2533:1;2529:27;2523:4;2519:38;2588:4;2576:10;2573:20;2570:47;;;-1:-1:-1;2611:4:9;2570:47;2666:2;2661:3;2657:12;2654:1;2650:20;2644:4;2640:31;2630:41;;2721:81;2739:2;2732:5;2729:13;2721:81;;;2798:1;2784:16;;2765:1;2754:13;2721:81;;;2725:3;;2391:421;2300:518;;;:::o;2994:1299::-;3114:10;;-1:-1:-1;;;;;3136:30:9;;3133:56;;;3169:18;;:::i;:::-;3198:97;3288:6;3248:38;3280:4;3274:11;3248:38;:::i;:::-;3242:4;3198:97;:::i;:::-;3344:4;3375:2;3364:14;;3392:1;3387:649;;;;4080:1;4097:6;4094:89;;;-1:-1:-1;4149:19:9;;;4143:26;4094:89;-1:-1:-1;;2951:1:9;2947:11;;;2943:24;2939:29;2929:40;2975:1;2971:11;;;2926:57;4196:81;;3357:930;;3387:649;2247:1;2240:14;;;2284:4;2271:18;;-1:-1:-1;;3423:20:9;;;3541:222;3555:7;3552:1;3549:14;3541:222;;;3637:19;;;3631:26;3616:42;;3744:4;3729:20;;;;3697:1;3685:14;;;;3571:12;3541:222;;;3545:3;3791:6;3782:7;3779:19;3776:201;;;3852:19;;;3846:26;-1:-1:-1;;3935:1:9;3931:14;;;3947:3;3927:24;3923:37;3919:42;3904:58;3889:74;;3776:201;-1:-1:-1;;;;4023:1:9;4007:14;;;4003:22;3990:36;;-1:-1:-1;2994:1299:9:o;4654:401::-;737:3216:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_925": {
									"entryPoint": null,
									"id": 925,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_860": {
									"entryPoint": 2155,
									"id": 860,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_914": {
									"entryPoint": null,
									"id": 914,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_815": {
									"entryPoint": 3074,
									"id": 815,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1392": {
									"entryPoint": 3719,
									"id": 1392,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_743": {
									"entryPoint": 3530,
									"id": 743,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1783": {
									"entryPoint": null,
									"id": 1783,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_319": {
									"entryPoint": 2985,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1770": {
									"entryPoint": null,
									"id": 1770,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_903": {
									"entryPoint": 2447,
									"id": 903,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_686": {
									"entryPoint": 2567,
									"id": 686,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@admins_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_481": {
									"entryPoint": 2113,
									"id": 481,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_506": {
									"entryPoint": 1081,
									"id": 506,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_414": {
									"entryPoint": null,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_609": {
									"entryPoint": 1670,
									"id": 609,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_174": {
									"entryPoint": 1805,
									"id": 174,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_1595": {
									"entryPoint": 3952,
									"id": 1595,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1531": {
									"entryPoint": 3930,
									"id": 1531,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@fundPortfolio_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseAllowance_568": {
									"entryPoint": 1430,
									"id": 568,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1459": {
									"entryPoint": null,
									"id": 1459,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_394": {
									"entryPoint": 771,
									"id": 394,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@portfolioValue_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pricePerShare_250": {
									"entryPoint": 1597,
									"id": 250,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_1125": {
									"entryPoint": 3375,
									"id": 1125,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1098": {
									"entryPoint": 3482,
									"id": 1098,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAdmin_273": {
									"entryPoint": 1463,
									"id": 273,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setPortfolioValue_109": {
									"entryPoint": 915,
									"id": 109,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_404": {
									"entryPoint": 1582,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_424": {
									"entryPoint": null,
									"id": 424,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_539": {
									"entryPoint": 1106,
									"id": 539,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_463": {
									"entryPoint": 1792,
									"id": 463,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_1726": {
									"entryPoint": 4167,
									"id": 1726,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@weth_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_226": {
									"entryPoint": 1141,
									"id": 226,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1004__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0fbe0c6dac5daba7d11827572748ff332b3c7549f0bb6797ad4591095f3ac528__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 4553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12935:9",
										"nodeType": "YulBlock",
										"src": "0:12935:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:9",
													"nodeType": "YulBlock",
													"src": "135:297:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:9",
																		"nodeType": "YulLiteral",
																		"src": "163:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:9"
																},
																"nativeSrc": "145:21:9",
																"nodeType": "YulFunctionCall",
																"src": "145:21:9"
															},
															"nativeSrc": "145:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:9"
														},
														{
															"nativeSrc": "175:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:9"
																},
																"nativeSrc": "189:13:9",
																"nodeType": "YulFunctionCall",
																"src": "189:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:9",
																	"nodeType": "YulTypedName",
																	"src": "179:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:9",
																				"nodeType": "YulLiteral",
																				"src": "233:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:9"
																		},
																		"nativeSrc": "218:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:9"
																},
																"nativeSrc": "211:34:9",
																"nodeType": "YulFunctionCall",
																"src": "211:34:9"
															},
															"nativeSrc": "211:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:9",
																				"nodeType": "YulLiteral",
																				"src": "275:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:9"
																		},
																		"nativeSrc": "260:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:9",
																				"nodeType": "YulLiteral",
																				"src": "292:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:9"
																		},
																		"nativeSrc": "280:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:9"
																},
																"nativeSrc": "254:50:9",
																"nodeType": "YulFunctionCall",
																"src": "254:50:9"
															},
															"nativeSrc": "254:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:9"
																				},
																				"nativeSrc": "324:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:9",
																				"nodeType": "YulLiteral",
																				"src": "348:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:9"
																		},
																		"nativeSrc": "320:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:9",
																		"nodeType": "YulLiteral",
																		"src": "353:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:9"
																},
																"nativeSrc": "313:42:9",
																"nodeType": "YulFunctionCall",
																"src": "313:42:9"
															},
															"nativeSrc": "313:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:9"
														},
														{
															"nativeSrc": "364:62:9",
															"nodeType": "YulAssignment",
															"src": "364:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:9",
																								"nodeType": "YulLiteral",
																								"src": "407:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:9"
																						},
																						"nativeSrc": "395:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:9",
																								"nodeType": "YulLiteral",
																								"src": "416:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:9"
																						},
																						"nativeSrc": "412:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:9"
																				},
																				"nativeSrc": "391:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:9"
																		},
																		"nativeSrc": "376:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:9",
																		"nodeType": "YulLiteral",
																		"src": "423:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:9"
																},
																"nativeSrc": "372:54:9",
																"nodeType": "YulFunctionCall",
																"src": "372:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:9",
														"nodeType": "YulTypedName",
														"src": "104:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:9",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:9",
														"nodeType": "YulTypedName",
														"src": "126:4:9",
														"type": ""
													}
												],
												"src": "14:418:9"
											},
											{
												"body": {
													"nativeSrc": "507:156:9",
													"nodeType": "YulBlock",
													"src": "507:156:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "553:16:9",
																"nodeType": "YulBlock",
																"src": "553:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "562:1:9",
																					"nodeType": "YulLiteral",
																					"src": "562:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "565:1:9",
																					"nodeType": "YulLiteral",
																					"src": "565:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "555:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "555:6:9"
																			},
																			"nativeSrc": "555:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "555:12:9"
																		},
																		"nativeSrc": "555:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "555:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "528:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "528:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "537:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "537:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "524:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "524:3:9"
																		},
																		"nativeSrc": "524:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "524:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "549:2:9",
																		"nodeType": "YulLiteral",
																		"src": "549:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "520:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "520:3:9"
																},
																"nativeSrc": "520:32:9",
																"nodeType": "YulFunctionCall",
																"src": "520:32:9"
															},
															"nativeSrc": "517:52:9",
															"nodeType": "YulIf",
															"src": "517:52:9"
														},
														{
															"nativeSrc": "578:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "578:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "591:1:9",
																"nodeType": "YulLiteral",
																"src": "591:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "582:5:9",
																	"nodeType": "YulTypedName",
																	"src": "582:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "601:32:9",
															"nodeType": "YulAssignment",
															"src": "601:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "623:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "623:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "610:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "610:12:9"
																},
																"nativeSrc": "610:23:9",
																"nodeType": "YulFunctionCall",
																"src": "610:23:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "601:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "601:5:9"
																}
															]
														},
														{
															"nativeSrc": "642:15:9",
															"nodeType": "YulAssignment",
															"src": "642:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "652:5:9",
																"nodeType": "YulIdentifier",
																"src": "652:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "642:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "642:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "437:226:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "473:9:9",
														"nodeType": "YulTypedName",
														"src": "473:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "484:7:9",
														"nodeType": "YulTypedName",
														"src": "484:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "496:6:9",
														"nodeType": "YulTypedName",
														"src": "496:6:9",
														"type": ""
													}
												],
												"src": "437:226:9"
											},
											{
												"body": {
													"nativeSrc": "717:124:9",
													"nodeType": "YulBlock",
													"src": "717:124:9",
													"statements": [
														{
															"nativeSrc": "727:29:9",
															"nodeType": "YulAssignment",
															"src": "727:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "749:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "749:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "736:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "736:12:9"
																},
																"nativeSrc": "736:20:9",
																"nodeType": "YulFunctionCall",
																"src": "736:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "727:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "727:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "819:16:9",
																"nodeType": "YulBlock",
																"src": "819:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "828:1:9",
																					"nodeType": "YulLiteral",
																					"src": "828:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "831:1:9",
																					"nodeType": "YulLiteral",
																					"src": "831:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "821:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "821:6:9"
																			},
																			"nativeSrc": "821:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "821:12:9"
																		},
																		"nativeSrc": "821:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "821:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "778:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "778:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "789:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "789:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "804:3:9",
																										"nodeType": "YulLiteral",
																										"src": "804:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "809:1:9",
																										"nodeType": "YulLiteral",
																										"src": "809:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "800:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "800:3:9"
																								},
																								"nativeSrc": "800:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "800:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "813:1:9",
																								"nodeType": "YulLiteral",
																								"src": "813:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "796:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "796:3:9"
																						},
																						"nativeSrc": "796:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "796:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "785:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "785:3:9"
																				},
																				"nativeSrc": "785:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "785:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "775:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "775:2:9"
																		},
																		"nativeSrc": "775:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "775:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "768:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "768:6:9"
																},
																"nativeSrc": "768:50:9",
																"nodeType": "YulFunctionCall",
																"src": "768:50:9"
															},
															"nativeSrc": "765:70:9",
															"nodeType": "YulIf",
															"src": "765:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "668:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "696:6:9",
														"nodeType": "YulTypedName",
														"src": "696:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "707:5:9",
														"nodeType": "YulTypedName",
														"src": "707:5:9",
														"type": ""
													}
												],
												"src": "668:173:9"
											},
											{
												"body": {
													"nativeSrc": "933:213:9",
													"nodeType": "YulBlock",
													"src": "933:213:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "979:16:9",
																"nodeType": "YulBlock",
																"src": "979:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "988:1:9",
																					"nodeType": "YulLiteral",
																					"src": "988:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "991:1:9",
																					"nodeType": "YulLiteral",
																					"src": "991:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "981:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "981:6:9"
																			},
																			"nativeSrc": "981:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "981:12:9"
																		},
																		"nativeSrc": "981:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "981:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "954:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "954:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "963:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "963:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "950:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "950:3:9"
																		},
																		"nativeSrc": "950:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "950:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "975:2:9",
																		"nodeType": "YulLiteral",
																		"src": "975:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "946:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "946:3:9"
																},
																"nativeSrc": "946:32:9",
																"nodeType": "YulFunctionCall",
																"src": "946:32:9"
															},
															"nativeSrc": "943:52:9",
															"nodeType": "YulIf",
															"src": "943:52:9"
														},
														{
															"nativeSrc": "1004:39:9",
															"nodeType": "YulAssignment",
															"src": "1004:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1033:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1033:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1014:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1014:18:9"
																},
																"nativeSrc": "1014:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1014:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1004:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:9"
																}
															]
														},
														{
															"nativeSrc": "1052:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1052:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1065:1:9",
																"nodeType": "YulLiteral",
																"src": "1065:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1056:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1056:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1075:41:9",
															"nodeType": "YulAssignment",
															"src": "1075:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1101:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1101:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1112:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1112:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1097:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1097:3:9"
																		},
																		"nativeSrc": "1097:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1097:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1084:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1084:12:9"
																},
																"nativeSrc": "1084:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1084:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1075:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1075:5:9"
																}
															]
														},
														{
															"nativeSrc": "1125:15:9",
															"nodeType": "YulAssignment",
															"src": "1125:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1135:5:9",
																"nodeType": "YulIdentifier",
																"src": "1135:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1125:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1125:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "846:300:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "891:9:9",
														"nodeType": "YulTypedName",
														"src": "891:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "902:7:9",
														"nodeType": "YulTypedName",
														"src": "902:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "914:6:9",
														"nodeType": "YulTypedName",
														"src": "914:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "922:6:9",
														"nodeType": "YulTypedName",
														"src": "922:6:9",
														"type": ""
													}
												],
												"src": "846:300:9"
											},
											{
												"body": {
													"nativeSrc": "1246:92:9",
													"nodeType": "YulBlock",
													"src": "1246:92:9",
													"statements": [
														{
															"nativeSrc": "1256:26:9",
															"nodeType": "YulAssignment",
															"src": "1256:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1268:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1268:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1279:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1279:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1264:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1264:3:9"
																},
																"nativeSrc": "1264:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1264:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1256:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1256:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1298:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1298:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1323:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1323:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1316:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1316:6:9"
																				},
																				"nativeSrc": "1316:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1316:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1309:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1309:6:9"
																		},
																		"nativeSrc": "1309:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1309:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:9"
																},
																"nativeSrc": "1291:41:9",
																"nodeType": "YulFunctionCall",
																"src": "1291:41:9"
															},
															"nativeSrc": "1291:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "1291:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1151:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1215:9:9",
														"nodeType": "YulTypedName",
														"src": "1215:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1226:6:9",
														"nodeType": "YulTypedName",
														"src": "1226:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1237:4:9",
														"nodeType": "YulTypedName",
														"src": "1237:4:9",
														"type": ""
													}
												],
												"src": "1151:187:9"
											},
											{
												"body": {
													"nativeSrc": "1444:76:9",
													"nodeType": "YulBlock",
													"src": "1444:76:9",
													"statements": [
														{
															"nativeSrc": "1454:26:9",
															"nodeType": "YulAssignment",
															"src": "1454:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1466:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1466:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1477:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1477:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:9"
																},
																"nativeSrc": "1462:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1462:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1454:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1496:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1496:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1507:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1507:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1489:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:9"
																},
																"nativeSrc": "1489:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1489:25:9"
															},
															"nativeSrc": "1489:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "1489:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1343:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1413:9:9",
														"nodeType": "YulTypedName",
														"src": "1413:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1424:6:9",
														"nodeType": "YulTypedName",
														"src": "1424:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1435:4:9",
														"nodeType": "YulTypedName",
														"src": "1435:4:9",
														"type": ""
													}
												],
												"src": "1343:177:9"
											},
											{
												"body": {
													"nativeSrc": "1629:270:9",
													"nodeType": "YulBlock",
													"src": "1629:270:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1675:16:9",
																"nodeType": "YulBlock",
																"src": "1675:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1684:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1684:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1687:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1687:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1677:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1677:6:9"
																			},
																			"nativeSrc": "1677:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1677:12:9"
																		},
																		"nativeSrc": "1677:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1677:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1650:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1650:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1659:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1659:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1646:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1646:3:9"
																		},
																		"nativeSrc": "1646:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1646:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1671:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1671:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1642:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1642:3:9"
																},
																"nativeSrc": "1642:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1642:32:9"
															},
															"nativeSrc": "1639:52:9",
															"nodeType": "YulIf",
															"src": "1639:52:9"
														},
														{
															"nativeSrc": "1700:39:9",
															"nodeType": "YulAssignment",
															"src": "1700:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1729:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1729:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1710:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1710:18:9"
																},
																"nativeSrc": "1710:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1710:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1700:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:9"
																}
															]
														},
														{
															"nativeSrc": "1748:48:9",
															"nodeType": "YulAssignment",
															"src": "1748:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1781:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1781:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1792:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1792:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1777:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:9"
																		},
																		"nativeSrc": "1777:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1777:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1758:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1758:18:9"
																},
																"nativeSrc": "1758:38:9",
																"nodeType": "YulFunctionCall",
																"src": "1758:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1748:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:9"
																}
															]
														},
														{
															"nativeSrc": "1805:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1805:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1818:1:9",
																"nodeType": "YulLiteral",
																"src": "1818:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1809:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1809:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1828:41:9",
															"nodeType": "YulAssignment",
															"src": "1828:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1854:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1854:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1865:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1865:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1850:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1850:3:9"
																		},
																		"nativeSrc": "1850:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1850:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1837:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1837:12:9"
																},
																"nativeSrc": "1837:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1837:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1828:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1828:5:9"
																}
															]
														},
														{
															"nativeSrc": "1878:15:9",
															"nodeType": "YulAssignment",
															"src": "1878:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1888:5:9",
																"nodeType": "YulIdentifier",
																"src": "1888:5:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1878:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1525:374:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1579:9:9",
														"nodeType": "YulTypedName",
														"src": "1579:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1590:7:9",
														"nodeType": "YulTypedName",
														"src": "1590:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1602:6:9",
														"nodeType": "YulTypedName",
														"src": "1602:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1610:6:9",
														"nodeType": "YulTypedName",
														"src": "1610:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1618:6:9",
														"nodeType": "YulTypedName",
														"src": "1618:6:9",
														"type": ""
													}
												],
												"src": "1525:374:9"
											},
											{
												"body": {
													"nativeSrc": "2001:87:9",
													"nodeType": "YulBlock",
													"src": "2001:87:9",
													"statements": [
														{
															"nativeSrc": "2011:26:9",
															"nodeType": "YulAssignment",
															"src": "2011:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2023:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2023:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2034:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2034:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2019:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:9"
																},
																"nativeSrc": "2019:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2019:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2011:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2053:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2053:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2068:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2068:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2076:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2076:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2064:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2064:3:9"
																		},
																		"nativeSrc": "2064:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2064:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2046:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2046:6:9"
																},
																"nativeSrc": "2046:36:9",
																"nodeType": "YulFunctionCall",
																"src": "2046:36:9"
															},
															"nativeSrc": "2046:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "2046:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1904:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1970:9:9",
														"nodeType": "YulTypedName",
														"src": "1970:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1981:6:9",
														"nodeType": "YulTypedName",
														"src": "1981:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1992:4:9",
														"nodeType": "YulTypedName",
														"src": "1992:4:9",
														"type": ""
													}
												],
												"src": "1904:184:9"
											},
											{
												"body": {
													"nativeSrc": "2209:102:9",
													"nodeType": "YulBlock",
													"src": "2209:102:9",
													"statements": [
														{
															"nativeSrc": "2219:26:9",
															"nodeType": "YulAssignment",
															"src": "2219:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2231:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2231:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2242:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2242:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2227:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:9"
																},
																"nativeSrc": "2227:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2227:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2219:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2219:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2261:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2261:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2276:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2276:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2292:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2292:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2297:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2297:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2288:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2288:3:9"
																						},
																						"nativeSrc": "2288:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2288:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2301:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2301:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2284:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2284:3:9"
																				},
																				"nativeSrc": "2284:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2284:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2272:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:9"
																		},
																		"nativeSrc": "2272:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2272:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2254:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:9"
																},
																"nativeSrc": "2254:51:9",
																"nodeType": "YulFunctionCall",
																"src": "2254:51:9"
															},
															"nativeSrc": "2254:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "2254:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1004__to_t_address__fromStack_reversed",
												"nativeSrc": "2093:218:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2178:9:9",
														"nodeType": "YulTypedName",
														"src": "2178:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2189:6:9",
														"nodeType": "YulTypedName",
														"src": "2189:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2200:4:9",
														"nodeType": "YulTypedName",
														"src": "2200:4:9",
														"type": ""
													}
												],
												"src": "2093:218:9"
											},
											{
												"body": {
													"nativeSrc": "2386:116:9",
													"nodeType": "YulBlock",
													"src": "2386:116:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2432:16:9",
																"nodeType": "YulBlock",
																"src": "2432:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2441:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2444:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2444:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2434:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:9"
																			},
																			"nativeSrc": "2434:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2434:12:9"
																		},
																		"nativeSrc": "2434:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2407:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2407:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2416:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2403:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:9"
																		},
																		"nativeSrc": "2403:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2403:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2428:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2399:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:9"
																},
																"nativeSrc": "2399:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2399:32:9"
															},
															"nativeSrc": "2396:52:9",
															"nodeType": "YulIf",
															"src": "2396:52:9"
														},
														{
															"nativeSrc": "2457:39:9",
															"nodeType": "YulAssignment",
															"src": "2457:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2486:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2486:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2467:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2467:18:9"
																},
																"nativeSrc": "2467:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2467:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2457:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2316:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2352:9:9",
														"nodeType": "YulTypedName",
														"src": "2352:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2363:7:9",
														"nodeType": "YulTypedName",
														"src": "2363:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2375:6:9",
														"nodeType": "YulTypedName",
														"src": "2375:6:9",
														"type": ""
													}
												],
												"src": "2316:186:9"
											},
											{
												"body": {
													"nativeSrc": "2549:76:9",
													"nodeType": "YulBlock",
													"src": "2549:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2603:16:9",
																"nodeType": "YulBlock",
																"src": "2603:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2612:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2612:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2615:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2615:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2605:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2605:6:9"
																			},
																			"nativeSrc": "2605:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2605:12:9"
																		},
																		"nativeSrc": "2605:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2605:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2572:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2572:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2593:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "2593:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2586:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2586:6:9"
																						},
																						"nativeSrc": "2586:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2586:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2579:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2579:6:9"
																				},
																				"nativeSrc": "2579:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2579:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2569:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2569:2:9"
																		},
																		"nativeSrc": "2569:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2569:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2562:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2562:6:9"
																},
																"nativeSrc": "2562:40:9",
																"nodeType": "YulFunctionCall",
																"src": "2562:40:9"
															},
															"nativeSrc": "2559:60:9",
															"nodeType": "YulIf",
															"src": "2559:60:9"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "2507:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2538:5:9",
														"nodeType": "YulTypedName",
														"src": "2538:5:9",
														"type": ""
													}
												],
												"src": "2507:118:9"
											},
											{
												"body": {
													"nativeSrc": "2714:231:9",
													"nodeType": "YulBlock",
													"src": "2714:231:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2760:16:9",
																"nodeType": "YulBlock",
																"src": "2760:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2769:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2769:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2772:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2772:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2762:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:9"
																			},
																			"nativeSrc": "2762:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2762:12:9"
																		},
																		"nativeSrc": "2762:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2735:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2735:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2744:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2744:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:9"
																		},
																		"nativeSrc": "2731:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2756:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2756:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2727:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2727:3:9"
																},
																"nativeSrc": "2727:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2727:32:9"
															},
															"nativeSrc": "2724:52:9",
															"nodeType": "YulIf",
															"src": "2724:52:9"
														},
														{
															"nativeSrc": "2785:39:9",
															"nodeType": "YulAssignment",
															"src": "2785:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2814:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2814:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2795:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2795:18:9"
																},
																"nativeSrc": "2795:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2795:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2785:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2785:6:9"
																}
															]
														},
														{
															"nativeSrc": "2833:45:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2833:45:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2863:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2863:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2874:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2874:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2859:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2859:3:9"
																		},
																		"nativeSrc": "2859:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2859:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2846:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2846:12:9"
																},
																"nativeSrc": "2846:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2846:32:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2837:5:9",
																	"nodeType": "YulTypedName",
																	"src": "2837:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2909:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2909:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "2887:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "2887:21:9"
																},
																"nativeSrc": "2887:28:9",
																"nodeType": "YulFunctionCall",
																"src": "2887:28:9"
															},
															"nativeSrc": "2887:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "2887:28:9"
														},
														{
															"nativeSrc": "2924:15:9",
															"nodeType": "YulAssignment",
															"src": "2924:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "2934:5:9",
																"nodeType": "YulIdentifier",
																"src": "2934:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2924:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2630:315:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2672:9:9",
														"nodeType": "YulTypedName",
														"src": "2672:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2683:7:9",
														"nodeType": "YulTypedName",
														"src": "2683:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2695:6:9",
														"nodeType": "YulTypedName",
														"src": "2695:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2703:6:9",
														"nodeType": "YulTypedName",
														"src": "2703:6:9",
														"type": ""
													}
												],
												"src": "2630:315:9"
											},
											{
												"body": {
													"nativeSrc": "3051:102:9",
													"nodeType": "YulBlock",
													"src": "3051:102:9",
													"statements": [
														{
															"nativeSrc": "3061:26:9",
															"nodeType": "YulAssignment",
															"src": "3061:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3073:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3084:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3084:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3069:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:9"
																},
																"nativeSrc": "3069:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3069:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3061:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3061:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3103:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3103:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3118:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3118:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3134:3:9",
																								"nodeType": "YulLiteral",
																								"src": "3134:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3139:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3139:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3130:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3130:3:9"
																						},
																						"nativeSrc": "3130:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3130:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3143:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3143:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3126:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3126:3:9"
																				},
																				"nativeSrc": "3126:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3126:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3114:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3114:3:9"
																		},
																		"nativeSrc": "3114:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3114:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3096:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:9"
																},
																"nativeSrc": "3096:51:9",
																"nodeType": "YulFunctionCall",
																"src": "3096:51:9"
															},
															"nativeSrc": "3096:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "3096:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2950:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3020:9:9",
														"nodeType": "YulTypedName",
														"src": "3020:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3031:6:9",
														"nodeType": "YulTypedName",
														"src": "3031:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3042:4:9",
														"nodeType": "YulTypedName",
														"src": "3042:4:9",
														"type": ""
													}
												],
												"src": "2950:203:9"
											},
											{
												"body": {
													"nativeSrc": "3245:173:9",
													"nodeType": "YulBlock",
													"src": "3245:173:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3291:16:9",
																"nodeType": "YulBlock",
																"src": "3291:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3300:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3300:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3303:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3303:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3293:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3293:6:9"
																			},
																			"nativeSrc": "3293:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3293:12:9"
																		},
																		"nativeSrc": "3293:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3293:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3266:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3266:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3275:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3275:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3262:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3262:3:9"
																		},
																		"nativeSrc": "3262:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3262:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3287:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3287:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3258:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3258:3:9"
																},
																"nativeSrc": "3258:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3258:32:9"
															},
															"nativeSrc": "3255:52:9",
															"nodeType": "YulIf",
															"src": "3255:52:9"
														},
														{
															"nativeSrc": "3316:39:9",
															"nodeType": "YulAssignment",
															"src": "3316:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3345:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3345:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3326:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3326:18:9"
																},
																"nativeSrc": "3326:29:9",
																"nodeType": "YulFunctionCall",
																"src": "3326:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3316:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3316:6:9"
																}
															]
														},
														{
															"nativeSrc": "3364:48:9",
															"nodeType": "YulAssignment",
															"src": "3364:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3397:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3397:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3408:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3408:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3393:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3393:3:9"
																		},
																		"nativeSrc": "3393:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3393:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3374:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3374:18:9"
																},
																"nativeSrc": "3374:38:9",
																"nodeType": "YulFunctionCall",
																"src": "3374:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3364:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3158:260:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3203:9:9",
														"nodeType": "YulTypedName",
														"src": "3203:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3214:7:9",
														"nodeType": "YulTypedName",
														"src": "3214:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3226:6:9",
														"nodeType": "YulTypedName",
														"src": "3226:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3234:6:9",
														"nodeType": "YulTypedName",
														"src": "3234:6:9",
														"type": ""
													}
												],
												"src": "3158:260:9"
											},
											{
												"body": {
													"nativeSrc": "3478:325:9",
													"nodeType": "YulBlock",
													"src": "3478:325:9",
													"statements": [
														{
															"nativeSrc": "3488:22:9",
															"nodeType": "YulAssignment",
															"src": "3488:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3502:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3502:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3505:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3505:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3498:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3498:3:9"
																},
																"nativeSrc": "3498:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3498:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3488:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:9"
																}
															]
														},
														{
															"nativeSrc": "3519:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3519:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3549:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3549:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3555:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3545:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3545:3:9"
																},
																"nativeSrc": "3545:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3545:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3523:18:9",
																	"nodeType": "YulTypedName",
																	"src": "3523:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3596:31:9",
																"nodeType": "YulBlock",
																"src": "3596:31:9",
																"statements": [
																	{
																		"nativeSrc": "3598:27:9",
																		"nodeType": "YulAssignment",
																		"src": "3598:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3612:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3612:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3620:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3620:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3608:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3608:3:9"
																			},
																			"nativeSrc": "3608:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3608:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3598:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3598:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3576:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3576:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3569:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:9"
																},
																"nativeSrc": "3569:26:9",
																"nodeType": "YulFunctionCall",
																"src": "3569:26:9"
															},
															"nativeSrc": "3566:61:9",
															"nodeType": "YulIf",
															"src": "3566:61:9"
														},
														{
															"body": {
																"nativeSrc": "3686:111:9",
																"nodeType": "YulBlock",
																"src": "3686:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3707:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3707:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3714:3:9",
																							"nodeType": "YulLiteral",
																							"src": "3714:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3719:10:9",
																							"nodeType": "YulLiteral",
																							"src": "3719:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3710:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3710:3:9"
																					},
																					"nativeSrc": "3710:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3710:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3700:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3700:6:9"
																			},
																			"nativeSrc": "3700:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3700:31:9"
																		},
																		"nativeSrc": "3700:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3700:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3751:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3751:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3754:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3754:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3744:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3744:6:9"
																			},
																			"nativeSrc": "3744:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3744:15:9"
																		},
																		"nativeSrc": "3744:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3744:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3779:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3779:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3782:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3782:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3772:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3772:6:9"
																			},
																			"nativeSrc": "3772:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3772:15:9"
																		},
																		"nativeSrc": "3772:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3772:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3642:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3642:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3665:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3665:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3673:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3673:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3662:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3662:2:9"
																		},
																		"nativeSrc": "3662:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3662:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3639:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3639:2:9"
																},
																"nativeSrc": "3639:38:9",
																"nodeType": "YulFunctionCall",
																"src": "3639:38:9"
															},
															"nativeSrc": "3636:161:9",
															"nodeType": "YulIf",
															"src": "3636:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3423:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3458:4:9",
														"nodeType": "YulTypedName",
														"src": "3458:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3467:6:9",
														"nodeType": "YulTypedName",
														"src": "3467:6:9",
														"type": ""
													}
												],
												"src": "3423:380:9"
											},
											{
												"body": {
													"nativeSrc": "3982:162:9",
													"nodeType": "YulBlock",
													"src": "3982:162:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3999:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3999:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4010:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3992:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3992:6:9"
																},
																"nativeSrc": "3992:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3992:21:9"
															},
															"nativeSrc": "3992:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3992:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4033:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4033:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4044:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4044:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4029:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4029:3:9"
																		},
																		"nativeSrc": "4029:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4029:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4049:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4049:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4022:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4022:6:9"
																},
																"nativeSrc": "4022:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4022:30:9"
															},
															"nativeSrc": "4022:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4022:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4072:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4072:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4083:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4083:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4068:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4068:3:9"
																		},
																		"nativeSrc": "4068:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4068:18:9"
																	},
																	{
																		"hexValue": "4e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "4088:14:9",
																		"nodeType": "YulLiteral",
																		"src": "4088:14:9",
																		"type": "",
																		"value": "Not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4061:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4061:6:9"
																},
																"nativeSrc": "4061:42:9",
																"nodeType": "YulFunctionCall",
																"src": "4061:42:9"
															},
															"nativeSrc": "4061:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "4061:42:9"
														},
														{
															"nativeSrc": "4112:26:9",
															"nodeType": "YulAssignment",
															"src": "4112:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4124:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4124:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4135:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4135:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4120:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4120:3:9"
																},
																"nativeSrc": "4120:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4120:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4112:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4112:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3808:336:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3959:9:9",
														"nodeType": "YulTypedName",
														"src": "3959:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3973:4:9",
														"nodeType": "YulTypedName",
														"src": "3973:4:9",
														"type": ""
													}
												],
												"src": "3808:336:9"
											},
											{
												"body": {
													"nativeSrc": "4323:182:9",
													"nodeType": "YulBlock",
													"src": "4323:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4333:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4333:6:9"
																},
																"nativeSrc": "4333:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4333:21:9"
															},
															"nativeSrc": "4333:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4333:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4374:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4374:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4385:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4385:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4370:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4370:3:9"
																		},
																		"nativeSrc": "4370:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4370:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4390:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4390:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4363:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4363:6:9"
																},
																"nativeSrc": "4363:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4363:30:9"
															},
															"nativeSrc": "4363:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4363:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4413:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4413:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4424:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4424:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4409:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4409:3:9"
																		},
																		"nativeSrc": "4409:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4409:18:9"
																	},
																	{
																		"hexValue": "506f7274666f6c696f2076616c7565206d75737420626520706f736974697665",
																		"kind": "string",
																		"nativeSrc": "4429:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4429:34:9",
																		"type": "",
																		"value": "Portfolio value must be positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4402:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:9"
																},
																"nativeSrc": "4402:62:9",
																"nodeType": "YulFunctionCall",
																"src": "4402:62:9"
															},
															"nativeSrc": "4402:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "4402:62:9"
														},
														{
															"nativeSrc": "4473:26:9",
															"nodeType": "YulAssignment",
															"src": "4473:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4485:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4485:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4496:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4496:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4481:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4481:3:9"
																},
																"nativeSrc": "4481:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4481:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4473:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4473:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0fbe0c6dac5daba7d11827572748ff332b3c7549f0bb6797ad4591095f3ac528__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4149:356:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4300:9:9",
														"nodeType": "YulTypedName",
														"src": "4300:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4314:4:9",
														"nodeType": "YulTypedName",
														"src": "4314:4:9",
														"type": ""
													}
												],
												"src": "4149:356:9"
											},
											{
												"body": {
													"nativeSrc": "4684:182:9",
													"nodeType": "YulBlock",
													"src": "4684:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4701:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4701:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4712:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4712:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4694:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4694:6:9"
																},
																"nativeSrc": "4694:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4694:21:9"
															},
															"nativeSrc": "4694:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4694:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4735:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4735:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4746:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4746:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4731:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4731:3:9"
																		},
																		"nativeSrc": "4731:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4731:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4751:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4751:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4724:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:9"
																},
																"nativeSrc": "4724:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4724:30:9"
															},
															"nativeSrc": "4724:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4724:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4774:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4774:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4785:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4785:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4770:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4770:3:9"
																		},
																		"nativeSrc": "4770:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4770:18:9"
																	},
																	{
																		"hexValue": "536861726573206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "4790:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4790:34:9",
																		"type": "",
																		"value": "Shares must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4763:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:9"
																},
																"nativeSrc": "4763:62:9",
																"nodeType": "YulFunctionCall",
																"src": "4763:62:9"
															},
															"nativeSrc": "4763:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "4763:62:9"
														},
														{
															"nativeSrc": "4834:26:9",
															"nodeType": "YulAssignment",
															"src": "4834:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4846:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4846:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4857:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4857:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4842:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4842:3:9"
																},
																"nativeSrc": "4842:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4842:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4834:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4834:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4510:356:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4661:9:9",
														"nodeType": "YulTypedName",
														"src": "4661:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4675:4:9",
														"nodeType": "YulTypedName",
														"src": "4675:4:9",
														"type": ""
													}
												],
												"src": "4510:356:9"
											},
											{
												"body": {
													"nativeSrc": "5045:169:9",
													"nodeType": "YulBlock",
													"src": "5045:169:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5062:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5062:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5073:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5073:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5055:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5055:6:9"
																},
																"nativeSrc": "5055:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5055:21:9"
															},
															"nativeSrc": "5055:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5055:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5096:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5096:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5107:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5107:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5092:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5092:3:9"
																		},
																		"nativeSrc": "5092:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5092:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5112:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5112:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5085:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5085:6:9"
																},
																"nativeSrc": "5085:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5085:30:9"
															},
															"nativeSrc": "5085:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5085:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5135:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5135:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5146:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5146:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5131:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:9"
																		},
																		"nativeSrc": "5131:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5131:18:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420736861726573",
																		"kind": "string",
																		"nativeSrc": "5151:21:9",
																		"nodeType": "YulLiteral",
																		"src": "5151:21:9",
																		"type": "",
																		"value": "Insufficient shares"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5124:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5124:6:9"
																},
																"nativeSrc": "5124:49:9",
																"nodeType": "YulFunctionCall",
																"src": "5124:49:9"
															},
															"nativeSrc": "5124:49:9",
															"nodeType": "YulExpressionStatement",
															"src": "5124:49:9"
														},
														{
															"nativeSrc": "5182:26:9",
															"nodeType": "YulAssignment",
															"src": "5182:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5194:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5194:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5205:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5205:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5190:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:9"
																},
																"nativeSrc": "5190:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5190:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5182:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5182:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4871:343:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5022:9:9",
														"nodeType": "YulTypedName",
														"src": "5022:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5036:4:9",
														"nodeType": "YulTypedName",
														"src": "5036:4:9",
														"type": ""
													}
												],
												"src": "4871:343:9"
											},
											{
												"body": {
													"nativeSrc": "5251:95:9",
													"nodeType": "YulBlock",
													"src": "5251:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5268:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5268:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5275:3:9",
																				"nodeType": "YulLiteral",
																				"src": "5275:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5280:10:9",
																				"nodeType": "YulLiteral",
																				"src": "5280:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5271:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:9"
																		},
																		"nativeSrc": "5271:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5271:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5261:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5261:6:9"
																},
																"nativeSrc": "5261:31:9",
																"nodeType": "YulFunctionCall",
																"src": "5261:31:9"
															},
															"nativeSrc": "5261:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "5261:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5308:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5308:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5311:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5301:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5301:6:9"
																},
																"nativeSrc": "5301:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5301:15:9"
															},
															"nativeSrc": "5301:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5301:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5332:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5335:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5335:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5325:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5325:6:9"
																},
																"nativeSrc": "5325:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5325:15:9"
															},
															"nativeSrc": "5325:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5325:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5219:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "5219:127:9"
											},
											{
												"body": {
													"nativeSrc": "5403:116:9",
													"nodeType": "YulBlock",
													"src": "5403:116:9",
													"statements": [
														{
															"nativeSrc": "5413:20:9",
															"nodeType": "YulAssignment",
															"src": "5413:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5428:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5428:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5431:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5431:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5424:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5424:3:9"
																},
																"nativeSrc": "5424:9:9",
																"nodeType": "YulFunctionCall",
																"src": "5424:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5413:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5413:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5491:22:9",
																"nodeType": "YulBlock",
																"src": "5491:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5493:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5493:16:9"
																			},
																			"nativeSrc": "5493:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5493:18:9"
																		},
																		"nativeSrc": "5493:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5493:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5462:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "5462:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5455:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5455:6:9"
																				},
																				"nativeSrc": "5455:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5455:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5469:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "5469:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5476:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "5476:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5485:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "5485:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5472:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "5472:3:9"
																						},
																						"nativeSrc": "5472:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "5472:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5466:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "5466:2:9"
																				},
																				"nativeSrc": "5466:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5466:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5452:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5452:2:9"
																		},
																		"nativeSrc": "5452:37:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5452:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5445:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5445:6:9"
																},
																"nativeSrc": "5445:45:9",
																"nodeType": "YulFunctionCall",
																"src": "5445:45:9"
															},
															"nativeSrc": "5442:71:9",
															"nodeType": "YulIf",
															"src": "5442:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5351:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5382:1:9",
														"nodeType": "YulTypedName",
														"src": "5382:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5385:1:9",
														"nodeType": "YulTypedName",
														"src": "5385:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5391:7:9",
														"nodeType": "YulTypedName",
														"src": "5391:7:9",
														"type": ""
													}
												],
												"src": "5351:168:9"
											},
											{
												"body": {
													"nativeSrc": "5570:171:9",
													"nodeType": "YulBlock",
													"src": "5570:171:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5601:111:9",
																"nodeType": "YulBlock",
																"src": "5601:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5622:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5622:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5629:3:9",
																							"nodeType": "YulLiteral",
																							"src": "5629:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5634:10:9",
																							"nodeType": "YulLiteral",
																							"src": "5634:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5625:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5625:3:9"
																					},
																					"nativeSrc": "5625:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5625:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5615:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5615:6:9"
																			},
																			"nativeSrc": "5615:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5615:31:9"
																		},
																		"nativeSrc": "5615:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5615:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5666:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5666:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5669:4:9",
																					"nodeType": "YulLiteral",
																					"src": "5669:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5659:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5659:6:9"
																			},
																			"nativeSrc": "5659:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5659:15:9"
																		},
																		"nativeSrc": "5659:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5659:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5694:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5694:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5697:4:9",
																					"nodeType": "YulLiteral",
																					"src": "5697:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5687:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5687:6:9"
																			},
																			"nativeSrc": "5687:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5687:15:9"
																		},
																		"nativeSrc": "5687:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5687:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5590:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5590:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5583:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5583:6:9"
																},
																"nativeSrc": "5583:9:9",
																"nodeType": "YulFunctionCall",
																"src": "5583:9:9"
															},
															"nativeSrc": "5580:132:9",
															"nodeType": "YulIf",
															"src": "5580:132:9"
														},
														{
															"nativeSrc": "5721:14:9",
															"nodeType": "YulAssignment",
															"src": "5721:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5730:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5730:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5733:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5733:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5726:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5726:3:9"
																},
																"nativeSrc": "5726:9:9",
																"nodeType": "YulFunctionCall",
																"src": "5726:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5721:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "5721:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5524:217:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5555:1:9",
														"nodeType": "YulTypedName",
														"src": "5555:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5558:1:9",
														"nodeType": "YulTypedName",
														"src": "5558:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5564:1:9",
														"nodeType": "YulTypedName",
														"src": "5564:1:9",
														"type": ""
													}
												],
												"src": "5524:217:9"
											},
											{
												"body": {
													"nativeSrc": "5794:77:9",
													"nodeType": "YulBlock",
													"src": "5794:77:9",
													"statements": [
														{
															"nativeSrc": "5804:16:9",
															"nodeType": "YulAssignment",
															"src": "5804:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5815:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5815:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5818:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5818:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5811:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5811:3:9"
																},
																"nativeSrc": "5811:9:9",
																"nodeType": "YulFunctionCall",
																"src": "5811:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5804:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5804:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5843:22:9",
																"nodeType": "YulBlock",
																"src": "5843:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5845:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5845:16:9"
																			},
																			"nativeSrc": "5845:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5845:18:9"
																		},
																		"nativeSrc": "5845:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5845:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5835:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5835:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5838:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5838:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5832:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5832:2:9"
																},
																"nativeSrc": "5832:10:9",
																"nodeType": "YulFunctionCall",
																"src": "5832:10:9"
															},
															"nativeSrc": "5829:36:9",
															"nodeType": "YulIf",
															"src": "5829:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5746:125:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5777:1:9",
														"nodeType": "YulTypedName",
														"src": "5777:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5780:1:9",
														"nodeType": "YulTypedName",
														"src": "5780:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5786:3:9",
														"nodeType": "YulTypedName",
														"src": "5786:3:9",
														"type": ""
													}
												],
												"src": "5746:125:9"
											},
											{
												"body": {
													"nativeSrc": "6050:227:9",
													"nodeType": "YulBlock",
													"src": "6050:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6067:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6067:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6078:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6078:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6060:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6060:6:9"
																},
																"nativeSrc": "6060:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6060:21:9"
															},
															"nativeSrc": "6060:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6060:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6101:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6101:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6112:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6112:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6097:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6097:3:9"
																		},
																		"nativeSrc": "6097:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6097:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6117:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6117:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6090:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6090:6:9"
																},
																"nativeSrc": "6090:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6090:30:9"
															},
															"nativeSrc": "6090:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6090:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6140:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6140:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6151:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6151:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6136:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6136:3:9"
																		},
																		"nativeSrc": "6136:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6136:18:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "6156:34:9",
																		"nodeType": "YulLiteral",
																		"src": "6156:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6129:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6129:6:9"
																},
																"nativeSrc": "6129:62:9",
																"nodeType": "YulFunctionCall",
																"src": "6129:62:9"
															},
															"nativeSrc": "6129:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "6129:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6211:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6211:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6222:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6222:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6207:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6207:3:9"
																		},
																		"nativeSrc": "6207:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6207:18:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "6227:7:9",
																		"nodeType": "YulLiteral",
																		"src": "6227:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6200:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6200:6:9"
																},
																"nativeSrc": "6200:35:9",
																"nodeType": "YulFunctionCall",
																"src": "6200:35:9"
															},
															"nativeSrc": "6200:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "6200:35:9"
														},
														{
															"nativeSrc": "6244:27:9",
															"nodeType": "YulAssignment",
															"src": "6244:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6256:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6256:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6267:3:9",
																		"nodeType": "YulLiteral",
																		"src": "6267:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6252:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6252:3:9"
																},
																"nativeSrc": "6252:19:9",
																"nodeType": "YulFunctionCall",
																"src": "6252:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6244:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6244:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5876:401:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6027:9:9",
														"nodeType": "YulTypedName",
														"src": "6027:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6041:4:9",
														"nodeType": "YulTypedName",
														"src": "6041:4:9",
														"type": ""
													}
												],
												"src": "5876:401:9"
											},
											{
												"body": {
													"nativeSrc": "6456:182:9",
													"nodeType": "YulBlock",
													"src": "6456:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6473:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6473:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6484:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6484:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6466:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6466:6:9"
																},
																"nativeSrc": "6466:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6466:21:9"
															},
															"nativeSrc": "6466:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6466:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6507:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6507:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6518:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6518:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6503:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6503:3:9"
																		},
																		"nativeSrc": "6503:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6503:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6523:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6523:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6496:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6496:6:9"
																},
																"nativeSrc": "6496:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6496:30:9"
															},
															"nativeSrc": "6496:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6496:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6546:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6546:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6557:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6557:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6542:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6542:3:9"
																		},
																		"nativeSrc": "6542:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6542:18:9"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "6562:34:9",
																		"nodeType": "YulLiteral",
																		"src": "6562:34:9",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6535:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6535:6:9"
																},
																"nativeSrc": "6535:62:9",
																"nodeType": "YulFunctionCall",
																"src": "6535:62:9"
															},
															"nativeSrc": "6535:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "6535:62:9"
														},
														{
															"nativeSrc": "6606:26:9",
															"nodeType": "YulAssignment",
															"src": "6606:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6618:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6618:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6629:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6629:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6614:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6614:3:9"
																},
																"nativeSrc": "6614:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6614:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6606:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6606:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6282:356:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6433:9:9",
														"nodeType": "YulTypedName",
														"src": "6433:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6447:4:9",
														"nodeType": "YulTypedName",
														"src": "6447:4:9",
														"type": ""
													}
												],
												"src": "6282:356:9"
											},
											{
												"body": {
													"nativeSrc": "6817:226:9",
													"nodeType": "YulBlock",
													"src": "6817:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6834:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6834:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6845:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6845:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6827:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6827:6:9"
																},
																"nativeSrc": "6827:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6827:21:9"
															},
															"nativeSrc": "6827:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6827:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6868:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6868:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6879:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6879:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6864:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6864:3:9"
																		},
																		"nativeSrc": "6864:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6884:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6884:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6857:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6857:6:9"
																},
																"nativeSrc": "6857:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6857:30:9"
															},
															"nativeSrc": "6857:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6857:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6907:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6907:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6918:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6918:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6903:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6903:3:9"
																		},
																		"nativeSrc": "6903:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6903:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "6923:34:9",
																		"nodeType": "YulLiteral",
																		"src": "6923:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6896:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6896:6:9"
																},
																"nativeSrc": "6896:62:9",
																"nodeType": "YulFunctionCall",
																"src": "6896:62:9"
															},
															"nativeSrc": "6896:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "6896:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6978:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6978:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6989:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6989:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6974:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6974:3:9"
																		},
																		"nativeSrc": "6974:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6974:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "6994:6:9",
																		"nodeType": "YulLiteral",
																		"src": "6994:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6967:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6967:6:9"
																},
																"nativeSrc": "6967:34:9",
																"nodeType": "YulFunctionCall",
																"src": "6967:34:9"
															},
															"nativeSrc": "6967:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "6967:34:9"
														},
														{
															"nativeSrc": "7010:27:9",
															"nodeType": "YulAssignment",
															"src": "7010:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7022:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7022:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7033:3:9",
																		"nodeType": "YulLiteral",
																		"src": "7033:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7018:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7018:3:9"
																},
																"nativeSrc": "7018:19:9",
																"nodeType": "YulFunctionCall",
																"src": "7018:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7010:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7010:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6643:400:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6794:9:9",
														"nodeType": "YulTypedName",
														"src": "6794:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6808:4:9",
														"nodeType": "YulTypedName",
														"src": "6808:4:9",
														"type": ""
													}
												],
												"src": "6643:400:9"
											},
											{
												"body": {
													"nativeSrc": "7222:224:9",
													"nodeType": "YulBlock",
													"src": "7222:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7239:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7239:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7250:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7250:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7232:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7232:6:9"
																},
																"nativeSrc": "7232:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7232:21:9"
															},
															"nativeSrc": "7232:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "7232:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7273:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7273:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7284:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7284:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7269:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7269:3:9"
																		},
																		"nativeSrc": "7269:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7269:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7289:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7289:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7262:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7262:6:9"
																},
																"nativeSrc": "7262:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7262:30:9"
															},
															"nativeSrc": "7262:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7262:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7312:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7312:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7323:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7323:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7308:3:9"
																		},
																		"nativeSrc": "7308:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7308:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "7328:34:9",
																		"nodeType": "YulLiteral",
																		"src": "7328:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7301:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7301:6:9"
																},
																"nativeSrc": "7301:62:9",
																"nodeType": "YulFunctionCall",
																"src": "7301:62:9"
															},
															"nativeSrc": "7301:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "7301:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7383:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7383:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7394:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7394:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7379:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7379:3:9"
																		},
																		"nativeSrc": "7379:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7379:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "7399:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7399:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7372:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7372:6:9"
																},
																"nativeSrc": "7372:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7372:32:9"
															},
															"nativeSrc": "7372:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "7372:32:9"
														},
														{
															"nativeSrc": "7413:27:9",
															"nodeType": "YulAssignment",
															"src": "7413:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7425:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7425:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7436:3:9",
																		"nodeType": "YulLiteral",
																		"src": "7436:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7421:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7421:3:9"
																},
																"nativeSrc": "7421:19:9",
																"nodeType": "YulFunctionCall",
																"src": "7421:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7413:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7413:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7048:398:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7199:9:9",
														"nodeType": "YulTypedName",
														"src": "7199:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7213:4:9",
														"nodeType": "YulTypedName",
														"src": "7213:4:9",
														"type": ""
													}
												],
												"src": "7048:398:9"
											},
											{
												"body": {
													"nativeSrc": "7625:179:9",
													"nodeType": "YulBlock",
													"src": "7625:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7642:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7642:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7653:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7653:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7635:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7635:6:9"
																},
																"nativeSrc": "7635:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7635:21:9"
															},
															"nativeSrc": "7635:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "7635:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7676:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7676:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7687:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7687:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7672:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7672:3:9"
																		},
																		"nativeSrc": "7672:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7672:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7692:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7692:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7665:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7665:6:9"
																},
																"nativeSrc": "7665:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7665:30:9"
															},
															"nativeSrc": "7665:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7665:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7715:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7715:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7726:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7726:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7711:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7711:3:9"
																		},
																		"nativeSrc": "7711:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7711:18:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "7731:31:9",
																		"nodeType": "YulLiteral",
																		"src": "7731:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7704:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7704:6:9"
																},
																"nativeSrc": "7704:59:9",
																"nodeType": "YulFunctionCall",
																"src": "7704:59:9"
															},
															"nativeSrc": "7704:59:9",
															"nodeType": "YulExpressionStatement",
															"src": "7704:59:9"
														},
														{
															"nativeSrc": "7772:26:9",
															"nodeType": "YulAssignment",
															"src": "7772:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7784:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7784:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7795:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7795:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7780:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7780:3:9"
																},
																"nativeSrc": "7780:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7780:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7772:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7772:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7451:353:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7602:9:9",
														"nodeType": "YulTypedName",
														"src": "7602:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7616:4:9",
														"nodeType": "YulTypedName",
														"src": "7616:4:9",
														"type": ""
													}
												],
												"src": "7451:353:9"
											},
											{
												"body": {
													"nativeSrc": "7983:227:9",
													"nodeType": "YulBlock",
													"src": "7983:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8000:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8000:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8011:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8011:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7993:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7993:6:9"
																},
																"nativeSrc": "7993:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7993:21:9"
															},
															"nativeSrc": "7993:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "7993:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8034:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8034:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8045:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8045:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8030:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8030:3:9"
																		},
																		"nativeSrc": "8030:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8030:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8050:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8050:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8023:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8023:6:9"
																},
																"nativeSrc": "8023:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8023:30:9"
															},
															"nativeSrc": "8023:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "8023:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8073:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8073:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8084:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8084:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8069:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8069:3:9"
																		},
																		"nativeSrc": "8069:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8069:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "8089:34:9",
																		"nodeType": "YulLiteral",
																		"src": "8089:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8062:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8062:6:9"
																},
																"nativeSrc": "8062:62:9",
																"nodeType": "YulFunctionCall",
																"src": "8062:62:9"
															},
															"nativeSrc": "8062:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "8062:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8144:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8144:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8155:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8155:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8140:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8140:3:9"
																		},
																		"nativeSrc": "8140:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8140:18:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "8160:7:9",
																		"nodeType": "YulLiteral",
																		"src": "8160:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8133:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8133:6:9"
																},
																"nativeSrc": "8133:35:9",
																"nodeType": "YulFunctionCall",
																"src": "8133:35:9"
															},
															"nativeSrc": "8133:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "8133:35:9"
														},
														{
															"nativeSrc": "8177:27:9",
															"nodeType": "YulAssignment",
															"src": "8177:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8189:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8189:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8200:3:9",
																		"nodeType": "YulLiteral",
																		"src": "8200:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8185:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8185:3:9"
																},
																"nativeSrc": "8185:19:9",
																"nodeType": "YulFunctionCall",
																"src": "8185:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8177:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8177:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7809:401:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7960:9:9",
														"nodeType": "YulTypedName",
														"src": "7960:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7974:4:9",
														"nodeType": "YulTypedName",
														"src": "7974:4:9",
														"type": ""
													}
												],
												"src": "7809:401:9"
											},
											{
												"body": {
													"nativeSrc": "8389:225:9",
													"nodeType": "YulBlock",
													"src": "8389:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8406:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8406:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8417:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8417:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8399:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8399:6:9"
																},
																"nativeSrc": "8399:21:9",
																"nodeType": "YulFunctionCall",
																"src": "8399:21:9"
															},
															"nativeSrc": "8399:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "8399:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8440:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8440:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8451:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8451:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8436:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8436:3:9"
																		},
																		"nativeSrc": "8436:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8436:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8456:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8456:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8429:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8429:6:9"
																},
																"nativeSrc": "8429:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8429:30:9"
															},
															"nativeSrc": "8429:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "8429:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8479:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8479:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8490:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8490:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8475:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8475:3:9"
																		},
																		"nativeSrc": "8475:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8475:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "8495:34:9",
																		"nodeType": "YulLiteral",
																		"src": "8495:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8468:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8468:6:9"
																},
																"nativeSrc": "8468:62:9",
																"nodeType": "YulFunctionCall",
																"src": "8468:62:9"
															},
															"nativeSrc": "8468:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "8468:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8550:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8550:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8561:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8561:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8546:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8546:3:9"
																		},
																		"nativeSrc": "8546:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8546:18:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "8566:5:9",
																		"nodeType": "YulLiteral",
																		"src": "8566:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8539:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8539:6:9"
																},
																"nativeSrc": "8539:33:9",
																"nodeType": "YulFunctionCall",
																"src": "8539:33:9"
															},
															"nativeSrc": "8539:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "8539:33:9"
														},
														{
															"nativeSrc": "8581:27:9",
															"nodeType": "YulAssignment",
															"src": "8581:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8593:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8593:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8604:3:9",
																		"nodeType": "YulLiteral",
																		"src": "8604:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8589:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8589:3:9"
																},
																"nativeSrc": "8589:19:9",
																"nodeType": "YulFunctionCall",
																"src": "8589:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8581:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8581:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8215:399:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8366:9:9",
														"nodeType": "YulTypedName",
														"src": "8366:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8380:4:9",
														"nodeType": "YulTypedName",
														"src": "8380:4:9",
														"type": ""
													}
												],
												"src": "8215:399:9"
											},
											{
												"body": {
													"nativeSrc": "8793:228:9",
													"nodeType": "YulBlock",
													"src": "8793:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8810:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8810:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8821:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8821:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8803:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8803:6:9"
																},
																"nativeSrc": "8803:21:9",
																"nodeType": "YulFunctionCall",
																"src": "8803:21:9"
															},
															"nativeSrc": "8803:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "8803:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8844:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8844:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8855:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8855:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8840:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8840:3:9"
																		},
																		"nativeSrc": "8840:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8840:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8860:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8860:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8833:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8833:6:9"
																},
																"nativeSrc": "8833:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8833:30:9"
															},
															"nativeSrc": "8833:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "8833:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8883:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8883:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8894:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8894:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8879:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8879:3:9"
																		},
																		"nativeSrc": "8879:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8879:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "8899:34:9",
																		"nodeType": "YulLiteral",
																		"src": "8899:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8872:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8872:6:9"
																},
																"nativeSrc": "8872:62:9",
																"nodeType": "YulFunctionCall",
																"src": "8872:62:9"
															},
															"nativeSrc": "8872:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "8872:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8954:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8954:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8965:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8965:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8950:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8950:3:9"
																		},
																		"nativeSrc": "8950:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8950:18:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8970:8:9",
																		"nodeType": "YulLiteral",
																		"src": "8970:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8943:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8943:6:9"
																},
																"nativeSrc": "8943:36:9",
																"nodeType": "YulFunctionCall",
																"src": "8943:36:9"
															},
															"nativeSrc": "8943:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "8943:36:9"
														},
														{
															"nativeSrc": "8988:27:9",
															"nodeType": "YulAssignment",
															"src": "8988:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9000:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9000:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9011:3:9",
																		"nodeType": "YulLiteral",
																		"src": "9011:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8996:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8996:3:9"
																},
																"nativeSrc": "8996:19:9",
																"nodeType": "YulFunctionCall",
																"src": "8996:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8988:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8988:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8619:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8770:9:9",
														"nodeType": "YulTypedName",
														"src": "8770:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8784:4:9",
														"nodeType": "YulTypedName",
														"src": "8784:4:9",
														"type": ""
													}
												],
												"src": "8619:402:9"
											},
											{
												"body": {
													"nativeSrc": "9200:181:9",
													"nodeType": "YulBlock",
													"src": "9200:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9217:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9217:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9228:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9228:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9210:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9210:6:9"
																},
																"nativeSrc": "9210:21:9",
																"nodeType": "YulFunctionCall",
																"src": "9210:21:9"
															},
															"nativeSrc": "9210:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "9210:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9251:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9251:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9262:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9262:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9247:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9247:3:9"
																		},
																		"nativeSrc": "9247:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9247:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9267:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9267:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9240:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9240:6:9"
																},
																"nativeSrc": "9240:30:9",
																"nodeType": "YulFunctionCall",
																"src": "9240:30:9"
															},
															"nativeSrc": "9240:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "9240:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9290:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9290:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9301:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9301:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9286:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9286:3:9"
																		},
																		"nativeSrc": "9286:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9286:18:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "9306:33:9",
																		"nodeType": "YulLiteral",
																		"src": "9306:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9279:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9279:6:9"
																},
																"nativeSrc": "9279:61:9",
																"nodeType": "YulFunctionCall",
																"src": "9279:61:9"
															},
															"nativeSrc": "9279:61:9",
															"nodeType": "YulExpressionStatement",
															"src": "9279:61:9"
														},
														{
															"nativeSrc": "9349:26:9",
															"nodeType": "YulAssignment",
															"src": "9349:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9361:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9361:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9372:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9372:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9357:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9357:3:9"
																},
																"nativeSrc": "9357:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9357:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9349:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9349:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9026:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9177:9:9",
														"nodeType": "YulTypedName",
														"src": "9177:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9191:4:9",
														"nodeType": "YulTypedName",
														"src": "9191:4:9",
														"type": ""
													}
												],
												"src": "9026:355:9"
											},
											{
												"body": {
													"nativeSrc": "9560:223:9",
													"nodeType": "YulBlock",
													"src": "9560:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9577:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9577:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9588:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9588:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9570:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9570:6:9"
																},
																"nativeSrc": "9570:21:9",
																"nodeType": "YulFunctionCall",
																"src": "9570:21:9"
															},
															"nativeSrc": "9570:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "9570:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9611:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9611:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9622:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9622:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9607:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:9"
																		},
																		"nativeSrc": "9607:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9607:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9627:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9627:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9600:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:9"
																},
																"nativeSrc": "9600:30:9",
																"nodeType": "YulFunctionCall",
																"src": "9600:30:9"
															},
															"nativeSrc": "9600:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "9600:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9650:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9650:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9661:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9661:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9646:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9646:3:9"
																		},
																		"nativeSrc": "9646:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9646:18:9"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "9666:34:9",
																		"nodeType": "YulLiteral",
																		"src": "9666:34:9",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9639:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9639:6:9"
																},
																"nativeSrc": "9639:62:9",
																"nodeType": "YulFunctionCall",
																"src": "9639:62:9"
															},
															"nativeSrc": "9639:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "9639:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9721:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9721:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9732:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9732:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9717:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9717:3:9"
																		},
																		"nativeSrc": "9717:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9717:18:9"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "9737:3:9",
																		"nodeType": "YulLiteral",
																		"src": "9737:3:9",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9710:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9710:6:9"
																},
																"nativeSrc": "9710:31:9",
																"nodeType": "YulFunctionCall",
																"src": "9710:31:9"
															},
															"nativeSrc": "9710:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "9710:31:9"
														},
														{
															"nativeSrc": "9750:27:9",
															"nodeType": "YulAssignment",
															"src": "9750:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9762:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9762:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9773:3:9",
																		"nodeType": "YulLiteral",
																		"src": "9773:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9758:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9758:3:9"
																},
																"nativeSrc": "9758:19:9",
																"nodeType": "YulFunctionCall",
																"src": "9758:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9750:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9750:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9386:397:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9537:9:9",
														"nodeType": "YulTypedName",
														"src": "9537:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9551:4:9",
														"nodeType": "YulTypedName",
														"src": "9551:4:9",
														"type": ""
													}
												],
												"src": "9386:397:9"
											},
											{
												"body": {
													"nativeSrc": "9962:224:9",
													"nodeType": "YulBlock",
													"src": "9962:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9979:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9979:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9990:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9990:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9972:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9972:6:9"
																},
																"nativeSrc": "9972:21:9",
																"nodeType": "YulFunctionCall",
																"src": "9972:21:9"
															},
															"nativeSrc": "9972:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "9972:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10013:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10013:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10024:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10024:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10009:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10009:3:9"
																		},
																		"nativeSrc": "10009:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10009:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10029:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10029:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10002:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:9"
																},
																"nativeSrc": "10002:30:9",
																"nodeType": "YulFunctionCall",
																"src": "10002:30:9"
															},
															"nativeSrc": "10002:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "10002:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10052:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10052:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10063:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10063:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10048:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10048:3:9"
																		},
																		"nativeSrc": "10048:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10048:18:9"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nativeSrc": "10068:34:9",
																		"nodeType": "YulLiteral",
																		"src": "10068:34:9",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10041:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10041:6:9"
																},
																"nativeSrc": "10041:62:9",
																"nodeType": "YulFunctionCall",
																"src": "10041:62:9"
															},
															"nativeSrc": "10041:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "10041:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10123:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10134:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10134:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10119:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10119:3:9"
																		},
																		"nativeSrc": "10119:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10119:18:9"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nativeSrc": "10139:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10139:4:9",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10112:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10112:6:9"
																},
																"nativeSrc": "10112:32:9",
																"nodeType": "YulFunctionCall",
																"src": "10112:32:9"
															},
															"nativeSrc": "10112:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "10112:32:9"
														},
														{
															"nativeSrc": "10153:27:9",
															"nodeType": "YulAssignment",
															"src": "10153:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10165:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10165:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10176:3:9",
																		"nodeType": "YulLiteral",
																		"src": "10176:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10161:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10161:3:9"
																},
																"nativeSrc": "10161:19:9",
																"nodeType": "YulFunctionCall",
																"src": "10161:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10153:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10153:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9788:398:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9939:9:9",
														"nodeType": "YulTypedName",
														"src": "9939:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9953:4:9",
														"nodeType": "YulTypedName",
														"src": "9953:4:9",
														"type": ""
													}
												],
												"src": "9788:398:9"
											},
											{
												"body": {
													"nativeSrc": "10348:214:9",
													"nodeType": "YulBlock",
													"src": "10348:214:9",
													"statements": [
														{
															"nativeSrc": "10358:26:9",
															"nodeType": "YulAssignment",
															"src": "10358:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10370:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10370:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10381:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10381:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10366:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10366:3:9"
																},
																"nativeSrc": "10366:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10366:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10358:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10358:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10400:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10400:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10415:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10415:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10431:3:9",
																								"nodeType": "YulLiteral",
																								"src": "10431:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10436:1:9",
																								"nodeType": "YulLiteral",
																								"src": "10436:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10427:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10427:3:9"
																						},
																						"nativeSrc": "10427:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "10427:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10440:1:9",
																						"nodeType": "YulLiteral",
																						"src": "10440:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10423:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10423:3:9"
																				},
																				"nativeSrc": "10423:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10423:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10411:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10411:3:9"
																		},
																		"nativeSrc": "10411:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10411:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10393:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10393:6:9"
																},
																"nativeSrc": "10393:51:9",
																"nodeType": "YulFunctionCall",
																"src": "10393:51:9"
															},
															"nativeSrc": "10393:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "10393:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10464:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10464:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10475:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10475:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10460:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10460:3:9"
																		},
																		"nativeSrc": "10460:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10460:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10484:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10484:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10500:3:9",
																								"nodeType": "YulLiteral",
																								"src": "10500:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10505:1:9",
																								"nodeType": "YulLiteral",
																								"src": "10505:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10496:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10496:3:9"
																						},
																						"nativeSrc": "10496:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "10496:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10509:1:9",
																						"nodeType": "YulLiteral",
																						"src": "10509:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10492:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10492:3:9"
																				},
																				"nativeSrc": "10492:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10492:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10480:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10480:3:9"
																		},
																		"nativeSrc": "10480:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10480:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10453:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10453:6:9"
																},
																"nativeSrc": "10453:60:9",
																"nodeType": "YulFunctionCall",
																"src": "10453:60:9"
															},
															"nativeSrc": "10453:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "10453:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10533:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10533:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10544:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10544:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10529:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10529:3:9"
																		},
																		"nativeSrc": "10529:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10529:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10549:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10549:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10522:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10522:6:9"
																},
																"nativeSrc": "10522:34:9",
																"nodeType": "YulFunctionCall",
																"src": "10522:34:9"
															},
															"nativeSrc": "10522:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "10522:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10191:371:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10301:9:9",
														"nodeType": "YulTypedName",
														"src": "10301:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10312:6:9",
														"nodeType": "YulTypedName",
														"src": "10312:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10320:6:9",
														"nodeType": "YulTypedName",
														"src": "10320:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10328:6:9",
														"nodeType": "YulTypedName",
														"src": "10328:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10339:4:9",
														"nodeType": "YulTypedName",
														"src": "10339:4:9",
														"type": ""
													}
												],
												"src": "10191:371:9"
											},
											{
												"body": {
													"nativeSrc": "10696:145:9",
													"nodeType": "YulBlock",
													"src": "10696:145:9",
													"statements": [
														{
															"nativeSrc": "10706:26:9",
															"nodeType": "YulAssignment",
															"src": "10706:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10718:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10718:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10729:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10729:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10714:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10714:3:9"
																},
																"nativeSrc": "10714:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10714:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10706:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10706:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10748:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10748:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10763:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10763:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10779:3:9",
																								"nodeType": "YulLiteral",
																								"src": "10779:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10784:1:9",
																								"nodeType": "YulLiteral",
																								"src": "10784:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10775:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10775:3:9"
																						},
																						"nativeSrc": "10775:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "10775:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10788:1:9",
																						"nodeType": "YulLiteral",
																						"src": "10788:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10771:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10771:3:9"
																				},
																				"nativeSrc": "10771:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10771:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10759:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10759:3:9"
																		},
																		"nativeSrc": "10759:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10759:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10741:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10741:6:9"
																},
																"nativeSrc": "10741:51:9",
																"nodeType": "YulFunctionCall",
																"src": "10741:51:9"
															},
															"nativeSrc": "10741:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "10741:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10812:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10812:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10823:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10823:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10808:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10808:3:9"
																		},
																		"nativeSrc": "10808:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10808:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10828:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10828:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10801:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10801:6:9"
																},
																"nativeSrc": "10801:34:9",
																"nodeType": "YulFunctionCall",
																"src": "10801:34:9"
															},
															"nativeSrc": "10801:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "10801:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10567:274:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10657:9:9",
														"nodeType": "YulTypedName",
														"src": "10657:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10668:6:9",
														"nodeType": "YulTypedName",
														"src": "10668:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10676:6:9",
														"nodeType": "YulTypedName",
														"src": "10676:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10687:4:9",
														"nodeType": "YulTypedName",
														"src": "10687:4:9",
														"type": ""
													}
												],
												"src": "10567:274:9"
											},
											{
												"body": {
													"nativeSrc": "11020:181:9",
													"nodeType": "YulBlock",
													"src": "11020:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11037:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11037:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11048:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11048:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11030:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11030:6:9"
																},
																"nativeSrc": "11030:21:9",
																"nodeType": "YulFunctionCall",
																"src": "11030:21:9"
															},
															"nativeSrc": "11030:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "11030:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11071:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11071:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11082:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11082:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11067:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11067:3:9"
																		},
																		"nativeSrc": "11067:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11067:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11087:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11087:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11060:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11060:6:9"
																},
																"nativeSrc": "11060:30:9",
																"nodeType": "YulFunctionCall",
																"src": "11060:30:9"
															},
															"nativeSrc": "11060:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "11060:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11110:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11110:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11121:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11121:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11106:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11106:3:9"
																		},
																		"nativeSrc": "11106:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11106:18:9"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "11126:33:9",
																		"nodeType": "YulLiteral",
																		"src": "11126:33:9",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11099:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11099:6:9"
																},
																"nativeSrc": "11099:61:9",
																"nodeType": "YulFunctionCall",
																"src": "11099:61:9"
															},
															"nativeSrc": "11099:61:9",
															"nodeType": "YulExpressionStatement",
															"src": "11099:61:9"
														},
														{
															"nativeSrc": "11169:26:9",
															"nodeType": "YulAssignment",
															"src": "11169:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11181:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11181:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11192:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11192:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11177:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11177:3:9"
																},
																"nativeSrc": "11177:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11177:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11169:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11169:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10846:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10997:9:9",
														"nodeType": "YulTypedName",
														"src": "10997:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11011:4:9",
														"nodeType": "YulTypedName",
														"src": "11011:4:9",
														"type": ""
													}
												],
												"src": "10846:355:9"
											},
											{
												"body": {
													"nativeSrc": "11284:167:9",
													"nodeType": "YulBlock",
													"src": "11284:167:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "11330:16:9",
																"nodeType": "YulBlock",
																"src": "11330:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11339:1:9",
																					"nodeType": "YulLiteral",
																					"src": "11339:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11342:1:9",
																					"nodeType": "YulLiteral",
																					"src": "11342:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11332:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11332:6:9"
																			},
																			"nativeSrc": "11332:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11332:12:9"
																		},
																		"nativeSrc": "11332:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11332:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11305:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "11305:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11314:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11314:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11301:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11301:3:9"
																		},
																		"nativeSrc": "11301:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11301:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11326:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11326:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11297:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11297:3:9"
																},
																"nativeSrc": "11297:32:9",
																"nodeType": "YulFunctionCall",
																"src": "11297:32:9"
															},
															"nativeSrc": "11294:52:9",
															"nodeType": "YulIf",
															"src": "11294:52:9"
														},
														{
															"nativeSrc": "11355:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "11355:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11374:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11374:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11368:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11368:5:9"
																},
																"nativeSrc": "11368:16:9",
																"nodeType": "YulFunctionCall",
																"src": "11368:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11359:5:9",
																	"nodeType": "YulTypedName",
																	"src": "11359:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11415:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11415:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "11393:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "11393:21:9"
																},
																"nativeSrc": "11393:28:9",
																"nodeType": "YulFunctionCall",
																"src": "11393:28:9"
															},
															"nativeSrc": "11393:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "11393:28:9"
														},
														{
															"nativeSrc": "11430:15:9",
															"nodeType": "YulAssignment",
															"src": "11430:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "11440:5:9",
																"nodeType": "YulIdentifier",
																"src": "11440:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11430:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11430:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11206:245:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11250:9:9",
														"nodeType": "YulTypedName",
														"src": "11250:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11261:7:9",
														"nodeType": "YulTypedName",
														"src": "11261:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11273:6:9",
														"nodeType": "YulTypedName",
														"src": "11273:6:9",
														"type": ""
													}
												],
												"src": "11206:245:9"
											},
											{
												"body": {
													"nativeSrc": "11630:232:9",
													"nodeType": "YulBlock",
													"src": "11630:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11647:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11647:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11658:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11658:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11640:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11640:6:9"
																},
																"nativeSrc": "11640:21:9",
																"nodeType": "YulFunctionCall",
																"src": "11640:21:9"
															},
															"nativeSrc": "11640:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "11640:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11681:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11681:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11692:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11692:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11677:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11677:3:9"
																		},
																		"nativeSrc": "11677:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11677:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11697:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11697:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11670:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11670:6:9"
																},
																"nativeSrc": "11670:30:9",
																"nodeType": "YulFunctionCall",
																"src": "11670:30:9"
															},
															"nativeSrc": "11670:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "11670:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11720:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11720:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11731:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11731:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11716:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11716:3:9"
																		},
																		"nativeSrc": "11716:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11716:18:9"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nativeSrc": "11736:34:9",
																		"nodeType": "YulLiteral",
																		"src": "11736:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11709:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11709:6:9"
																},
																"nativeSrc": "11709:62:9",
																"nodeType": "YulFunctionCall",
																"src": "11709:62:9"
															},
															"nativeSrc": "11709:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "11709:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11791:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11791:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11802:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11802:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11787:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11787:3:9"
																		},
																		"nativeSrc": "11787:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11787:18:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nativeSrc": "11807:12:9",
																		"nodeType": "YulLiteral",
																		"src": "11807:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11780:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11780:6:9"
																},
																"nativeSrc": "11780:40:9",
																"nodeType": "YulFunctionCall",
																"src": "11780:40:9"
															},
															"nativeSrc": "11780:40:9",
															"nodeType": "YulExpressionStatement",
															"src": "11780:40:9"
														},
														{
															"nativeSrc": "11829:27:9",
															"nodeType": "YulAssignment",
															"src": "11829:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11841:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11841:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11852:3:9",
																		"nodeType": "YulLiteral",
																		"src": "11852:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11837:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11837:3:9"
																},
																"nativeSrc": "11837:19:9",
																"nodeType": "YulFunctionCall",
																"src": "11837:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11829:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11829:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11456:406:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11607:9:9",
														"nodeType": "YulTypedName",
														"src": "11607:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11621:4:9",
														"nodeType": "YulTypedName",
														"src": "11621:4:9",
														"type": ""
													}
												],
												"src": "11456:406:9"
											},
											{
												"body": {
													"nativeSrc": "12041:228:9",
													"nodeType": "YulBlock",
													"src": "12041:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12058:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12058:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12069:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12069:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12051:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12051:6:9"
																},
																"nativeSrc": "12051:21:9",
																"nodeType": "YulFunctionCall",
																"src": "12051:21:9"
															},
															"nativeSrc": "12051:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "12051:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12092:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12092:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12103:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12103:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12088:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12088:3:9"
																		},
																		"nativeSrc": "12088:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12088:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12108:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12108:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12081:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12081:6:9"
																},
																"nativeSrc": "12081:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12081:30:9"
															},
															"nativeSrc": "12081:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "12081:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12131:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12131:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12142:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12142:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12127:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12127:3:9"
																		},
																		"nativeSrc": "12127:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12127:18:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nativeSrc": "12147:34:9",
																		"nodeType": "YulLiteral",
																		"src": "12147:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12120:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12120:6:9"
																},
																"nativeSrc": "12120:62:9",
																"nodeType": "YulFunctionCall",
																"src": "12120:62:9"
															},
															"nativeSrc": "12120:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "12120:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12202:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12202:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12213:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12213:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12198:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12198:3:9"
																		},
																		"nativeSrc": "12198:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12198:18:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nativeSrc": "12218:8:9",
																		"nodeType": "YulLiteral",
																		"src": "12218:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12191:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12191:6:9"
																},
																"nativeSrc": "12191:36:9",
																"nodeType": "YulFunctionCall",
																"src": "12191:36:9"
															},
															"nativeSrc": "12191:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "12191:36:9"
														},
														{
															"nativeSrc": "12236:27:9",
															"nodeType": "YulAssignment",
															"src": "12236:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12248:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12248:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12259:3:9",
																		"nodeType": "YulLiteral",
																		"src": "12259:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12244:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12244:3:9"
																},
																"nativeSrc": "12244:19:9",
																"nodeType": "YulFunctionCall",
																"src": "12244:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12236:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12236:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11867:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12018:9:9",
														"nodeType": "YulTypedName",
														"src": "12018:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12032:4:9",
														"nodeType": "YulTypedName",
														"src": "12032:4:9",
														"type": ""
													}
												],
												"src": "11867:402:9"
											},
											{
												"body": {
													"nativeSrc": "12411:164:9",
													"nodeType": "YulBlock",
													"src": "12411:164:9",
													"statements": [
														{
															"nativeSrc": "12421:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "12421:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12441:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12441:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12435:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12435:5:9"
																},
																"nativeSrc": "12435:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12435:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12425:6:9",
																	"nodeType": "YulTypedName",
																	"src": "12425:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12463:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12463:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12472:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12472:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12480:4:9",
																				"nodeType": "YulLiteral",
																				"src": "12480:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12468:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12468:3:9"
																		},
																		"nativeSrc": "12468:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12468:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12487:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12487:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "12457:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12457:5:9"
																},
																"nativeSrc": "12457:37:9",
																"nodeType": "YulFunctionCall",
																"src": "12457:37:9"
															},
															"nativeSrc": "12457:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "12457:37:9"
														},
														{
															"nativeSrc": "12503:26:9",
															"nodeType": "YulVariableDeclaration",
															"src": "12503:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12517:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12517:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12522:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12522:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12513:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12513:3:9"
																},
																"nativeSrc": "12513:16:9",
																"nodeType": "YulFunctionCall",
																"src": "12513:16:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12507:2:9",
																	"nodeType": "YulTypedName",
																	"src": "12507:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "12545:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "12545:2:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12549:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12549:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12538:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12538:6:9"
																},
																"nativeSrc": "12538:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12538:13:9"
															},
															"nativeSrc": "12538:13:9",
															"nodeType": "YulExpressionStatement",
															"src": "12538:13:9"
														},
														{
															"nativeSrc": "12560:9:9",
															"nodeType": "YulAssignment",
															"src": "12560:9:9",
															"value": {
																"name": "_1",
																"nativeSrc": "12567:2:9",
																"nodeType": "YulIdentifier",
																"src": "12567:2:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12560:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12560:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12274:301:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12387:3:9",
														"nodeType": "YulTypedName",
														"src": "12387:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12392:6:9",
														"nodeType": "YulTypedName",
														"src": "12392:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12403:3:9",
														"nodeType": "YulTypedName",
														"src": "12403:3:9",
														"type": ""
													}
												],
												"src": "12274:301:9"
											},
											{
												"body": {
													"nativeSrc": "12754:179:9",
													"nodeType": "YulBlock",
													"src": "12754:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12771:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12771:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12782:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12782:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12764:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12764:6:9"
																},
																"nativeSrc": "12764:21:9",
																"nodeType": "YulFunctionCall",
																"src": "12764:21:9"
															},
															"nativeSrc": "12764:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "12764:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12805:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12805:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12816:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12816:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12801:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12801:3:9"
																		},
																		"nativeSrc": "12801:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12801:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12821:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12821:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12794:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12794:6:9"
																},
																"nativeSrc": "12794:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12794:30:9"
															},
															"nativeSrc": "12794:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "12794:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12844:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12844:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12855:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12855:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12840:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12840:3:9"
																		},
																		"nativeSrc": "12840:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12840:18:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "12860:31:9",
																		"nodeType": "YulLiteral",
																		"src": "12860:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12833:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12833:6:9"
																},
																"nativeSrc": "12833:59:9",
																"nodeType": "YulFunctionCall",
																"src": "12833:59:9"
															},
															"nativeSrc": "12833:59:9",
															"nodeType": "YulExpressionStatement",
															"src": "12833:59:9"
														},
														{
															"nativeSrc": "12901:26:9",
															"nodeType": "YulAssignment",
															"src": "12901:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12913:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12913:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12924:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12924:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12909:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12909:3:9"
																},
																"nativeSrc": "12909:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12909:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12901:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12901:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12580:353:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12731:9:9",
														"nodeType": "YulTypedName",
														"src": "12731:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12745:4:9",
														"nodeType": "YulTypedName",
														"src": "12745:4:9",
														"type": ""
													}
												],
												"src": "12580:353:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1004__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not an admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0fbe0c6dac5daba7d11827572748ff332b3c7549f0bb6797ad4591095f3ac528__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Portfolio value must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Shares must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Insufficient shares\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"16": [
									{
										"length": 32,
										"start": 480
									},
									{
										"length": 32,
										"start": 1905
									},
									{
										"length": 32,
										"start": 1958
									}
								],
								"18": [
									{
										"length": 32,
										"start": 699
									},
									{
										"length": 32,
										"start": 1992
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610127575f3560e01c80634b0bddd2116100a9578063a457c2d71161006e578063a457c2d714610290578063a9059cbb146102a3578063aa4d1655146102b6578063b6b55f25146102dd578063dd62ed3e146102f0575f5ffd5b80634b0bddd21461023c57806370a082311461024f57806373acb5901461027757806395d89b411461028057806399530b0614610288575f5ffd5b80632e1a7d4d116100ef5780632e1a7d4d146101a6578063313ce567146101b957806339509351146101c85780633fc8cef3146101db578063429b62e51461021a575f5ffd5b806306fdde031461012b57806308867db614610149578063095ea7b31461015e57806318160ddd1461018157806323b872dd14610193575b5f5ffd5b610133610303565b60405161014091906110e0565b60405180910390f35b61015c610157366004611115565b610393565b005b61017161016c366004611147565b610439565b6040519015158152602001610140565b6002545b604051908152602001610140565b6101716101a136600461116f565b610452565b61015c6101b4366004611115565b610475565b60405160128152602001610140565b6101716101d6366004611147565b610596565b6102027f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610140565b6101716102283660046111a9565b60066020525f908152604090205460ff1681565b61015c61024a3660046111d6565b6105b7565b61018561025d3660046111a9565b6001600160a01b03165f9081526020819052604090205490565b61018560075481565b61013361062e565b61018561063d565b61017161029e366004611147565b610686565b6101716102b1366004611147565b610700565b6102027f000000000000000000000000000000000000000000000000000000000000000081565b61015c6102eb366004611115565b61070d565b6101856102fe36600461120b565b610841565b6060600380546103129061123c565b80601f016020809104026020016040519081016040528092919081815260200182805461033e9061123c565b80156103895780601f1061036057610100808354040283529160200191610389565b820191905f5260205f20905b81548152906001019060200180831161036c57829003601f168201915b5050505050905090565b335f9081526006602052604090205460ff166103e55760405162461bcd60e51b815260206004820152600c60248201526b2737ba1030b71030b236b4b760a11b60448201526064015b60405180910390fd5b5f81116104345760405162461bcd60e51b815260206004820181905260248201527f506f7274666f6c696f2076616c7565206d75737420626520706f73697469766560448201526064016103dc565b600755565b5f3361044681858561086b565b60019150505b92915050565b5f3361045f85828561098f565b61046a858585610a07565b506001949350505050565b61047d610ba9565b5f81116104cc5760405162461bcd60e51b815260206004820181905260248201527f536861726573206d7573742062652067726561746572207468616e207a65726f60448201526064016103dc565b335f908152602081905260409020548111156105205760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742073686172657360681b60448201526064016103dc565b5f61052a60025490565b90505f816007548461053c9190611288565b610546919061129f565b90506105523384610c02565b60405181815233907f9345a8a944c0bca27038313dd8066210a495ba6374e523065a2e7adcc020ff2b9060200160405180910390a250506105936001600555565b50565b5f336104468185856105a88383610841565b6105b291906112be565b61086b565b335f9081526006602052604090205460ff166106045760405162461bcd60e51b815260206004820152600c60248201526b2737ba1030b71030b236b4b760a11b60448201526064016103dc565b6001600160a01b03919091165f908152600660205260409020805460ff1916911515919091179055565b6060600480546103129061123c565b5f5f61064860025490565b905080156106765780600754670de0b6b3a76400006106679190611288565b610671919061129f565b610680565b670de0b6b3a76400005b91505090565b5f33816106938286610841565b9050838110156106f35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103dc565b61046a828686840361086b565b5f33610446818585610a07565b610715610ba9565b5f81116107645760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016103dc565b6107996001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610d2f565b6107ed6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610d9a565b5f6107f760025490565b90505f8115806108075750600754155b610827576007546108188385611288565b610822919061129f565b610829565b825b90506108353382610dca565b50506105936001600555565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166108cd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103dc565b6001600160a01b03821661092e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dc565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b5f61099a8484610841565b90505f198114610a0157818110156109f45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103dc565b610a01848484840361086b565b50505050565b6001600160a01b038316610a6b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dc565b6001600160a01b038216610acd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dc565b6001600160a01b0383165f9081526020819052604090205481811015610b445760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103dc565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a01565b600260055403610bfb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103dc565b6002600555565b6001600160a01b038216610c625760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103dc565b6001600160a01b0382165f9081526020819052604090205481811015610cd55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103dc565b6001600160a01b0383165f818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610982565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610a019085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e87565b6040516001600160a01b038316602482015260448101829052610d2a90849063a9059cbb60e01b90606401610d63565b6001600160a01b038216610e205760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103dc565b8060025f828254610e3191906112be565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f610edb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f5a9092919063ffffffff16565b905080515f1480610efb575080806020019051810190610efb91906112d1565b610d2a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103dc565b6060610f6884845f85610f70565b949350505050565b606082471015610fd15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103dc565b5f5f866001600160a01b03168587604051610fec91906112ec565b5f6040518083038185875af1925050503d805f8114611026576040519150601f19603f3d011682016040523d82523d5f602084013e61102b565b606091505b509150915061103c87838387611047565b979650505050505050565b606083156110b55782515f036110ae576001600160a01b0385163b6110ae5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103dc565b5081610f68565b610f6883838151156110ca5781518083602001fd5b8060405162461bcd60e51b81526004016103dc91905b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215611125575f5ffd5b5035919050565b80356001600160a01b0381168114611142575f5ffd5b919050565b5f5f60408385031215611158575f5ffd5b6111618361112c565b946020939093013593505050565b5f5f5f60608486031215611181575f5ffd5b61118a8461112c565b92506111986020850161112c565b929592945050506040919091013590565b5f602082840312156111b9575f5ffd5b6111c28261112c565b9392505050565b8015158114610593575f5ffd5b5f5f604083850312156111e7575f5ffd5b6111f08361112c565b91506020830135611200816111c9565b809150509250929050565b5f5f6040838503121561121c575f5ffd5b6112258361112c565b91506112336020840161112c565b90509250929050565b600181811c9082168061125057607f821691505b60208210810361126e57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761044c5761044c611274565b5f826112b957634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561044c5761044c611274565b5f602082840312156112e1575f5ffd5b81516111c2816111c9565b5f82518060208501845e5f92019182525091905056fea264697066735822122006e586570c1c06a9fe2011c94ab30d4de4ce6e3b579667b95f1a270f0e93ea8d64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B0BDDD2 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xAA4D1655 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x4B0BDDD2 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x73ACB590 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x99530B06 EQ PUSH2 0x288 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x21A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8867DB6 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x193 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH2 0x202 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x185 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x185 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x171 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x700 JUMP JUMPDEST PUSH2 0x202 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST PUSH2 0x185 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x312 SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33E SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x360 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x389 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA1030B71030B236B4B7 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F7274666F6C696F2076616C7565206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x446 DUP2 DUP6 DUP6 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x45F DUP6 DUP3 DUP6 PUSH2 0x98F JUMP JUMPDEST PUSH2 0x46A DUP6 DUP6 DUP6 PUSH2 0xA07 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x47D PUSH2 0xBA9 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536861726573206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420736861726573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH0 PUSH2 0x52A PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x7 SLOAD DUP5 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x129F JUMP JUMPDEST SWAP1 POP PUSH2 0x552 CALLER DUP5 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x9345A8A944C0BCA27038313DD8066210A495BA6374E523065A2E7ADCC020FF2B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x593 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x446 DUP2 DUP6 DUP6 PUSH2 0x5A8 DUP4 DUP4 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA1030B71030B236B4B7 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x312 SWAP1 PUSH2 0x123C JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x648 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x676 JUMPI DUP1 PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x129F JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x693 DUP3 DUP7 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x46A DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x86B JUMP JUMPDEST PUSH0 CALLER PUSH2 0x446 DUP2 DUP6 DUP6 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x715 PUSH2 0xBA9 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x799 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x7ED PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP4 PUSH2 0xD9A JUMP JUMPDEST PUSH0 PUSH2 0x7F7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 ISZERO DUP1 PUSH2 0x807 JUMPI POP PUSH1 0x7 SLOAD ISZERO JUMPDEST PUSH2 0x827 JUMPI PUSH1 0x7 SLOAD PUSH2 0x818 DUP4 DUP6 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x129F JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH2 0x835 CALLER DUP3 PUSH2 0xDCA JUMP JUMPDEST POP POP PUSH2 0x593 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x99A DUP5 DUP5 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xA01 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH2 0xA01 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x86B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xACD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xBFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x982 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xA01 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xD2A SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x12BE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEDB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF5A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ DUP1 PUSH2 0xEFB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEFB SWAP2 SWAP1 PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0xD2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF68 DUP5 DUP5 PUSH0 DUP6 PUSH2 0xF70 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xFD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DC JUMP JUMPDEST PUSH0 PUSH0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x12EC JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1026 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x102B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x103C DUP8 DUP4 DUP4 DUP8 PUSH2 0x1047 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x10B5 JUMPI DUP3 MLOAD PUSH0 SUB PUSH2 0x10AE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x10AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DC JUMP JUMPDEST POP DUP2 PUSH2 0xF68 JUMP JUMPDEST PUSH2 0xF68 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x10CA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP2 SWAP1 JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1125 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1142 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1158 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1161 DUP4 PUSH2 0x112C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1181 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x118A DUP5 PUSH2 0x112C JUMP JUMPDEST SWAP3 POP PUSH2 0x1198 PUSH1 0x20 DUP6 ADD PUSH2 0x112C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11C2 DUP3 PUSH2 0x112C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x593 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11F0 DUP4 PUSH2 0x112C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1200 DUP2 PUSH2 0x11C9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x121C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1225 DUP4 PUSH2 0x112C JUMP JUMPDEST SWAP2 POP PUSH2 0x1233 PUSH1 0x20 DUP5 ADD PUSH2 0x112C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1250 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x126E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x1274 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x12B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x1274 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11C2 DUP2 PUSH2 0x11C9 JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xE5 DUP7 JUMPI 0xC SHR MOD 0xA9 INVALID KECCAK256 GT 0xC9 BLOBBASEFEE 0xB3 0xD 0x4D 0xE4 0xCE PUSH15 0x3B579667B95F1A270F0E93EA8D6473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "737:3216:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1739:223:0;;;;;;:::i;:::-;;:::i;:::-;;4444:197:2;;;;;;:::i;:::-;;:::i;:::-;;;1316:14:9;;1309:22;1291:41;;1279:2;1264:18;4444:197:2;1151:187:9;3255:106:2;3342:12;;3255:106;;;1489:25:9;;;1477:2;1462:18;3255:106:2;1343:177:9;5203:256:2;;;;;;:::i;:::-;;:::i;2921:512:0:-;;;;;;:::i;:::-;;:::i;3104:91:2:-;;;3186:2;2046:36:9;;2034:2;2019:18;3104:91:2;1904:184:9;5854:234:2;;;;;;:::i;:::-;;:::i;824:28:0:-;;;;;;;;-1:-1:-1;;;;;2272:32:9;;;2254:51;;2242:2;2227:18;824:28:0;2093:218:9;904:38:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3800:150;;;;;;:::i;:::-;;:::i;3419:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;990:29:0;;;;;;2369:102:2;;;:::i;3550:177:0:-;;;:::i;6575:427:2:-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;859:38:0:-;;;;;2131:652;;;;;;:::i;:::-;;:::i;3987:149:2:-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;1739:223:0:-;1820:10;1813:18;;;;:6;:18;;;;;;;;1805:43;;;;-1:-1:-1;;;1805:43:0;;4010:2:9;1805:43:0;;;3992:21:9;4049:2;4029:18;;;4022:30;-1:-1:-1;;;4068:18:9;;;4061:42;4120:18;;1805:43:0;;;;;;;;;1879:1;1867:9;:13;1859:58;;;;-1:-1:-1;;;1859:58:0;;4351:2:9;1859:58:0;;;4333:21:9;;;4370:18;;;4363:30;4429:34;4409:18;;;4402:62;4481:18;;1859:58:0;4149:356:9;1859:58:0;1928:14;:26;1739:223::o;4444:197:2:-;4527:4;719:10:8;4581:32:2;719:10:8;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:8;5356:38:2;5372:4;719:10:8;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;2921:512:0:-;2261:21:1;:19;:21::i;:::-;3005:1:0::1;2996:6;:10;2988:55;;;::::0;-1:-1:-1;;;2988:55:0;;4712:2:9;2988:55:0::1;::::0;::::1;4694:21:9::0;;;4731:18;;;4724:30;4790:34;4770:18;;;4763:62;4842:18;;2988:55:0::1;4510:356:9::0;2988:55:0::1;3072:10;3493:7:2::0;3519:18;;;;;;;;;;;3087:6:0;-1:-1:-1;3062:31:0::1;3054:63;;;::::0;-1:-1:-1;;;3054:63:0;;5073:2:9;3054:63:0::1;::::0;::::1;5055:21:9::0;5112:2;5092:18;;;5085:30;-1:-1:-1;;;5131:18:9;;;5124:49;5190:18;;3054:63:0::1;4871:343:9::0;3054:63:0::1;3130:14;3147:13;3342:12:2::0;;;3255:106;3147:13:0::1;3130:30;;3171:14;3216:6;3198:14;;3189:6;:23;;;;:::i;:::-;3188:34;;;;:::i;:::-;3171:51;;3262:25;3268:10;3280:6;3262:5;:25::i;:::-;3388:37;::::0;1489:25:9;;;3406:10:0::1;::::0;3388:37:::1;::::0;1477:2:9;1462:18;3388:37:0::1;;;;;;;2977:456;;2303:20:1::0;1716:1;2809:7;:22;2629:209;2303:20;2921:512:0;:::o;5854:234:2:-;5942:4;719:10:8;5996:64:2;719:10:8;6012:7:2;6049:10;6021:25;719:10:8;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;3800:150:0:-;3881:10;3874:18;;;;:6;:18;;;;;;;;3866:43;;;;-1:-1:-1;;;3866:43:0;;4010:2:9;3866:43:0;;;3992:21:9;4049:2;4029:18;;;4022:30;-1:-1:-1;;;4068:18:9;;;4061:42;4120:18;;3866:43:0;3808:336:9;3866:43:0;-1:-1:-1;;;;;3920:13:0;;;;;;;;:6;:13;;;;;:22;;-1:-1:-1;;3920:22:0;;;;;;;;;;3800:150::o;2369:102:2:-;2425:13;2457:7;2450:14;;;;;:::i;3550:177:0:-;3598:7;3618:14;3635:13;3342:12:2;;;3255:106;3635:13:0;3618:30;-1:-1:-1;3666:11:0;;:53;;3713:6;3688:14;;3705:4;3688:21;;;;:::i;:::-;3687:32;;;;:::i;:::-;3666:53;;;3680:4;3666:53;3659:60;;;3550:177;:::o;6575:427:2:-;6668:4;719:10:8;6668:4:2;6749:25;719:10:8;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;6078:2:9;6784:85:2;;;6060:21:9;6117:2;6097:18;;;6090:30;6156:34;6136:18;;;6129:62;-1:-1:-1;;;6207:18:9;;;6200:35;6252:19;;6784:85:2;5876:401:9;6784:85:2;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:8;3873:28:2;719:10:8;3890:2:2;3894:6;3873:9;:28::i;2131:652:0:-;2261:21:1;:19;:21::i;:::-;2214:1:0::1;2205:6;:10;2197:55;;;::::0;-1:-1:-1;;;2197:55:0;;6484:2:9;2197:55:0::1;::::0;::::1;6466:21:9::0;;;6503:18;;;6496:30;6562:34;6542:18;;;6535:62;6614:18;;2197:55:0::1;6282:356:9::0;2197:55:0::1;2326:56;-1:-1:-1::0;;;;;2326:4:0::1;:21;2348:10;2368:4;2375:6:::0;2326:21:::1;:56::i;:::-;2460:40;-1:-1:-1::0;;;;;2460:4:0::1;:17;2478:13;2493:6:::0;2460:17:::1;:40::i;:::-;2589:14;2606:13;3342:12:2::0;;;3255:106;2606:13:0::1;2589:30:::0;-1:-1:-1;2630:14:0::1;2648:11:::0;;;:34:::1;;-1:-1:-1::0;2663:14:0::1;::::0;:19;2648:34:::1;2647:82;;2715:14;::::0;2696:15:::1;2705:6:::0;2696;:15:::1;:::i;:::-;2695:34;;;;:::i;:::-;2647:82;;;2686:6;2647:82;2630:99;;2750:25;2756:10;2768:6;2750:5;:25::i;:::-;2186:597;;2303:20:1::0;1716:1;2809:7;:22;2629:209;3987:149:2;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;6845:2:9;10550:68:2;;;6827:21:9;6884:2;6864:18;;;6857:30;6923:34;6903:18;;;6896:62;-1:-1:-1;;;6974:18:9;;;6967:34;7018:19;;10550:68:2;6643:400:9;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;7250:2:9;10628:68:2;;;7232:21:9;7289:2;7269:18;;;7262:30;7328:34;7308:18;;;7301:62;-1:-1:-1;;;7379:18:9;;;7372:32;7421:19;;10628:68:2;7048:398:9;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1489:25:9;;;10758:32:2;;1462:18:9;10758:32:2;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;7653:2:9;11297:68:2;;;7635:21:9;7692:2;7672:18;;;7665:30;7731:31;7711:18;;;7704:59;7780:18;;11297:68:2;7451:353:9;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;8011:2:9;7544:68:2;;;7993:21:9;8050:2;8030:18;;;8023:30;8089:34;8069:18;;;8062:62;-1:-1:-1;;;8140:18:9;;;8133:35;8185:19;;7544:68:2;7809:401:9;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;8417:2:9;7622:64:2;;;8399:21:9;8456:2;8436:18;;;8429:30;8495:34;8475:18;;;8468:62;-1:-1:-1;;;8546:18:9;;;8539:33;8589:19;;7622:64:2;8215:399:9;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;8821:2:9;7793:72:2;;;8803:21:9;8860:2;8840:18;;;8833:30;8899:34;8879:18;;;8872:62;-1:-1:-1;;;8950:18:9;;;8943:36;8996:19;;7793:72:2;8619:402:9;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1489:25:9;;;8114:13:2;;8163:26;;1462:18:9;8163:26:2;;;;;;;8200:37;9375:659;2336:287:1;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;9228:2:9;2460:63:1;;;9210:21:9;9267:2;9247:18;;;9240:30;9306:33;9286:18;;;9279:61;9357:18;;2460:63:1;9026:355:9;2460:63:1;1759:1;2598:7;:18;2336:287::o;9375:659:2:-;-1:-1:-1;;;;;9458:21:2;;9450:67;;;;-1:-1:-1;;;9450:67:2;;9588:2:9;9450:67:2;;;9570:21:9;9627:2;9607:18;;;9600:30;9666:34;9646:18;;;9639:62;-1:-1:-1;;;9717:18:9;;;9710:31;9758:19;;9450:67:2;9386:397:9;9450:67:2;-1:-1:-1;;;;;9613:18:2;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:2;;9990:2:9;9641:71:2;;;9972:21:9;10029:2;10009:18;;;10002:30;10068:34;10048:18;;;10041:62;-1:-1:-1;;;10119:18:9;;;10112:32;10161:19;;9641:71:2;9788:398:9;9641:71:2;-1:-1:-1;;;;;9746:18:2;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1489:25:9;;;9746:9:2;;:18;9931:37;;1462:18:9;9931:37:2;1343:177:9;9979:48:2;9440:594;9375:659;;:::o;1355:203:6:-;1482:68;;-1:-1:-1;;;;;10411:32:9;;;1482:68:6;;;10393:51:9;10480:32;;10460:18;;;10453:60;10529:18;;;10522:34;;;1455:96:6;;1475:5;;-1:-1:-1;;;1505:27:6;10366:18:9;;1482:68:6;;;;-1:-1:-1;;1482:68:6;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:6;-1:-1:-1;;;;;;1482:68:6;;;;;;;;;;1455:19;:96::i;941:175::-;1050:58;;-1:-1:-1;;;;;10759:32:9;;1050:58:6;;;10741:51:9;10808:18;;;10801:34;;;1023:86:6;;1043:5;;-1:-1:-1;;;1073:23:6;10714:18:9;;1050:58:6;10567:274:9;8520:535:2;-1:-1:-1;;;;;8603:21:2;;8595:65;;;;-1:-1:-1;;;8595:65:2;;11048:2:9;8595:65:2;;;11030:21:9;11087:2;11067:18;;;11060:30;11126:33;11106:18;;;11099:61;11177:18;;8595:65:2;10846:355:9;8595:65:2;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1489:25:9;;;8952:37:2;;1462:18:9;8952:37:2;;;;;;;8520:535;;:::o;5196:642:6:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:6;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:6;;11658:2:9;5720:111:6;;;11640:21:9;11697:2;11677:18;;;11670:30;11736:34;11716:18;;;11709:62;-1:-1:-1;;;11787:18:9;;;11780:40;11837:19;;5720:111:6;11456:406:9;4108:223:7;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:7:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:7;;12069:2:9;5354:81:7;;;12051:21:9;12108:2;12088:18;;;12081:30;12147:34;12127:18;;;12120:62;-1:-1:-1;;;12198:18:9;;;12191:36;12244:19;;5354:81:7;11867:402:9;5354:81:7;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:7;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:7:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:7;;;8113:60;;;;-1:-1:-1;;;8113:60:7;;12782:2:9;8113:60:7;;;12764:21:9;12821:2;12801:18;;;12794:30;12860:31;12840:18;;;12833:59;12909:18;;8113:60:7;12580:353:9;8113:60:7;-1:-1:-1;8208:10:7;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:7;;;;;;;14:418:9;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:226::-;496:6;549:2;537:9;528:7;524:23;520:32;517:52;;;565:1;562;555:12;517:52;-1:-1:-1;610:23:9;;437:226;-1:-1:-1;437:226:9:o;668:173::-;736:20;;-1:-1:-1;;;;;785:31:9;;775:42;;765:70;;831:1;828;821:12;765:70;668:173;;;:::o;846:300::-;914:6;922;975:2;963:9;954:7;950:23;946:32;943:52;;;991:1;988;981:12;943:52;1014:29;1033:9;1014:29;:::i;:::-;1004:39;1112:2;1097:18;;;;1084:32;;-1:-1:-1;;;846:300:9:o;1525:374::-;1602:6;1610;1618;1671:2;1659:9;1650:7;1646:23;1642:32;1639:52;;;1687:1;1684;1677:12;1639:52;1710:29;1729:9;1710:29;:::i;:::-;1700:39;;1758:38;1792:2;1781:9;1777:18;1758:38;:::i;:::-;1525:374;;1748:48;;-1:-1:-1;;;1865:2:9;1850:18;;;;1837:32;;1525:374::o;2316:186::-;2375:6;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;2316:186;-1:-1:-1;;;2316:186:9:o;2507:118::-;2593:5;2586:13;2579:21;2572:5;2569:32;2559:60;;2615:1;2612;2605:12;2630:315;2695:6;2703;2756:2;2744:9;2735:7;2731:23;2727:32;2724:52;;;2772:1;2769;2762:12;2724:52;2795:29;2814:9;2795:29;:::i;:::-;2785:39;;2874:2;2863:9;2859:18;2846:32;2887:28;2909:5;2887:28;:::i;:::-;2934:5;2924:15;;;2630:315;;;;;:::o;3158:260::-;3226:6;3234;3287:2;3275:9;3266:7;3262:23;3258:32;3255:52;;;3303:1;3300;3293:12;3255:52;3326:29;3345:9;3326:29;:::i;:::-;3316:39;;3374:38;3408:2;3397:9;3393:18;3374:38;:::i;:::-;3364:48;;3158:260;;;;;:::o;3423:380::-;3502:1;3498:12;;;;3545;;;3566:61;;3620:4;3612:6;3608:17;3598:27;;3566:61;3673:2;3665:6;3662:14;3642:18;3639:38;3636:161;;3719:10;3714:3;3710:20;3707:1;3700:31;3754:4;3751:1;3744:15;3782:4;3779:1;3772:15;3636:161;;3423:380;;;:::o;5219:127::-;5280:10;5275:3;5271:20;5268:1;5261:31;5311:4;5308:1;5301:15;5335:4;5332:1;5325:15;5351:168;5424:9;;;5455;;5472:15;;;5466:22;;5452:37;5442:71;;5493:18;;:::i;5524:217::-;5564:1;5590;5580:132;;5634:10;5629:3;5625:20;5622:1;5615:31;5669:4;5666:1;5659:15;5697:4;5694:1;5687:15;5580:132;-1:-1:-1;5726:9:9;;5524:217::o;5746:125::-;5811:9;;;5832:10;;;5829:36;;;5845:18;;:::i;11206:245::-;11273:6;11326:2;11314:9;11305:7;11301:23;11297:32;11294:52;;;11342:1;11339;11332:12;11294:52;11374:9;11368:16;11393:28;11415:5;11393:28;:::i;12274:301::-;12403:3;12441:6;12435:13;12487:6;12480:4;12472:6;12468:17;12463:3;12457:37;12549:1;12513:16;;12538:13;;;-1:-1:-1;12513:16:9;12274:301;-1:-1:-1;12274:301:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "984000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"admins(address)": "2639",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24669",
								"balanceOf(address)": "2582",
								"decimals()": "221",
								"decreaseAllowance(address,uint256)": "26967",
								"deposit(uint256)": "infinite",
								"fundPortfolio()": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"portfolioValue()": "2361",
								"pricePerShare()": "4738",
								"setAdmin(address,bool)": "26932",
								"setPortfolioValue(uint256)": "24580",
								"symbol()": "infinite",
								"totalSupply()": "2370",
								"transfer(address,uint256)": "51088",
								"transferFrom(address,address,uint256)": "infinite",
								"weth()": "infinite",
								"withdraw(uint256)": "105194"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1137,
									"end": 1626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1137,
									"end": 1626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1288,
									"end": 1295,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1281,
									"end": 1286,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1316,
									"end": 1335,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1316,
									"end": 1335,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1308,
									"end": 1367,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1367,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1367,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4500,
									"end": 4502,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1308,
									"end": 1367,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4482,
									"end": 4503,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4539,
									"end": 4541,
									"name": "PUSH",
									"source": 9,
									"value": "1B"
								},
								{
									"begin": 4519,
									"end": 4537,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4519,
									"end": 4537,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4519,
									"end": 4537,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4542,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4578,
									"end": 4607,
									"name": "PUSH",
									"source": 9,
									"value": "5745544820616464726573732063616E6E6F74206265207A65726F0000000000"
								},
								{
									"begin": 4558,
									"end": 4576,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4558,
									"end": 4576,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4558,
									"end": 4576,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4551,
									"end": 4608,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4625,
									"end": 4643,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4625,
									"end": 4643,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1308,
									"end": 1367,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1386,
									"end": 1414,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1386,
									"end": 1414,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1378,
									"end": 1456,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1378,
									"end": 1456,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1378,
									"end": 1456,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1378,
									"end": 1456,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 1456,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1378,
									"end": 1456,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4856,
									"end": 4858,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1378,
									"end": 1456,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1378,
									"end": 1456,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1378,
									"end": 1456,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4838,
									"end": 4859,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4895,
									"end": 4897,
									"name": "PUSH",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 4875,
									"end": 4893,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4875,
									"end": 4893,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4875,
									"end": 4893,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4868,
									"end": 4898,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4934,
									"end": 4968,
									"name": "PUSH",
									"source": 9,
									"value": "46756E6420706F7274666F6C696F20616464726573732063616E6E6F74206265"
								},
								{
									"begin": 4914,
									"end": 4932,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4914,
									"end": 4932,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4914,
									"end": 4932,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4907,
									"end": 4969,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "207A65726F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4985,
									"end": 5003,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4985,
									"end": 5003,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4985,
									"end": 5003,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4978,
									"end": 5013,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5030,
									"end": 5049,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 5030,
									"end": 5049,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1378,
									"end": 1456,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 4654,
									"end": 5055,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1378,
									"end": 1456,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1378,
									"end": 1456,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1477,
									"end": 1497,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1497,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1497,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1497,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1477,
									"end": 1497,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1538,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1538,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 1508,
									"end": 1538,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1556,
									"end": 1566,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1549,
									"end": 1567,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1549,
									"end": 1567,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1549,
									"end": 1567,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1549,
									"end": 1567,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1549,
									"end": 1555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1549,
									"end": 1567,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1549,
									"end": 1567,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1549,
									"end": 1567,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1549,
									"end": 1567,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1549,
									"end": 1567,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1549,
									"end": 1574,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1549,
									"end": 1574,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1549,
									"end": 1574,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1549,
									"end": 1574,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1549,
									"end": 1574,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1549,
									"end": 1574,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 328,
									"end": 1051,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 328,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 382,
									"end": 387,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 438,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 428,
									"end": 432,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 420,
									"end": 426,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 416,
									"end": 433,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 412,
									"end": 439,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 402,
									"end": 457,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 402,
									"end": 457,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 453,
									"end": 454,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 451,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 402,
									"end": 457,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 402,
									"end": 457,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 480,
									"end": 493,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 480,
									"end": 493,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 505,
									"end": 535,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 505,
									"end": 535,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 502,
									"end": 558,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 502,
									"end": 558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 502,
									"end": 558,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 538,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 538,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 538,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 538,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 538,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 587,
									"end": 589,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 581,
									"end": 590,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 679,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 641,
									"end": 658,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 641,
									"end": 658,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 637,
									"end": 668,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 637,
									"end": 668,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 670,
									"end": 672,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 633,
									"end": 673,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 629,
									"end": 683,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 617,
									"end": 684,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 617,
									"end": 684,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 699,
									"end": 733,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 699,
									"end": 733,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 735,
									"end": 757,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 696,
									"end": 758,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 693,
									"end": 781,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 693,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 693,
									"end": 781,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 761,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 761,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 761,
									"end": 779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 761,
									"end": 779,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 761,
									"end": 779,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 797,
									"end": 799,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 790,
									"end": 812,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 821,
									"end": 843,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 821,
									"end": 843,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 821,
									"end": 843,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 862,
									"end": 881,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 862,
									"end": 881,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 862,
									"end": 881,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 858,
									"end": 888,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 855,
									"end": 894,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 852,
									"end": 911,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 852,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 852,
									"end": 911,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 907,
									"end": 908,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 905,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 909,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 852,
									"end": 911,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 852,
									"end": 911,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 957,
									"end": 961,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 945,
									"end": 962,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 938,
									"end": 942,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 930,
									"end": 936,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 926,
									"end": 943,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 920,
									"end": 971,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 1019,
									"end": 1020,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 991,
									"end": 1010,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1010,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1010,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1012,
									"end": 1016,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 987,
									"end": 1017,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 980,
									"end": 1021,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 980,
									"end": 1021,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 980,
									"end": 1021,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 980,
									"end": 1021,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1001,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 328,
									"end": 1051,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 328,
									"end": 1051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1784,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1056,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1173,
									"end": 1179,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1187,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1189,
									"end": 1195,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1197,
									"end": 1203,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1250,
									"end": 1253,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1238,
									"end": 1247,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1229,
									"end": 1236,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1225,
									"end": 1248,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1221,
									"end": 1254,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1218,
									"end": 1271,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1218,
									"end": 1271,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1218,
									"end": 1271,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1267,
									"end": 1268,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1264,
									"end": 1265,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1257,
									"end": 1269,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1218,
									"end": 1271,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1218,
									"end": 1271,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1290,
									"end": 1330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1320,
									"end": 1329,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1290,
									"end": 1330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1290,
									"end": 1330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1290,
									"end": 1330,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1290,
									"end": 1330,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1280,
									"end": 1330,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1280,
									"end": 1330,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1349,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1394,
									"end": 1396,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1383,
									"end": 1392,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1379,
									"end": 1397,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1349,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1349,
									"end": 1398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1349,
									"end": 1398,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1349,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1442,
									"end": 1444,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1445,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1427,
									"end": 1445,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1421,
									"end": 1446,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1398,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1398,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1458,
									"end": 1488,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1488,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1505,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1455,
									"end": 1505,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 1502,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1498,
									"end": 1499,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1491,
									"end": 1503,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1505,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1455,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1524,
									"end": 1585,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1577,
									"end": 1584,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1574,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1566,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1553,
									"end": 1575,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1524,
									"end": 1585,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1524,
									"end": 1585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1524,
									"end": 1585,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1524,
									"end": 1585,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1631,
									"end": 1633,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1616,
									"end": 1634,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1616,
									"end": 1634,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1635,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1585,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1585,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1610,
									"end": 1635,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1647,
									"end": 1679,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1647,
									"end": 1679,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1644,
									"end": 1696,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1644,
									"end": 1696,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1644,
									"end": 1696,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1689,
									"end": 1690,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1682,
									"end": 1694,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1644,
									"end": 1696,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1644,
									"end": 1696,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1770,
									"end": 1777,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1767,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1748,
									"end": 1757,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1744,
									"end": 1768,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1715,
									"end": 1778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1705,
									"end": 1778,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1705,
									"end": 1778,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1705,
									"end": 1778,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1784,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1784,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1784,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1784,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1784,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1784,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1784,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1784,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1789,
									"end": 2169,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1789,
									"end": 2169,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1869,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1864,
									"end": 1876,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1864,
									"end": 1876,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1864,
									"end": 1876,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1864,
									"end": 1876,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1911,
									"end": 1923,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1911,
									"end": 1923,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1911,
									"end": 1923,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1932,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1932,
									"end": 1993,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1986,
									"end": 1990,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1978,
									"end": 1984,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1974,
									"end": 1991,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 1991,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 1991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1932,
									"end": 1993,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1932,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2039,
									"end": 2041,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2031,
									"end": 2037,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2028,
									"end": 2042,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2008,
									"end": 2026,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2043,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2002,
									"end": 2163,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2002,
									"end": 2163,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2085,
									"end": 2095,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 2080,
									"end": 2083,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 2076,
									"end": 2096,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2073,
									"end": 2074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2066,
									"end": 2097,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2120,
									"end": 2124,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2117,
									"end": 2118,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2110,
									"end": 2125,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2152,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2145,
									"end": 2146,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2138,
									"end": 2153,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2002,
									"end": 2163,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2002,
									"end": 2163,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2002,
									"end": 2163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1789,
									"end": 2169,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1789,
									"end": 2169,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1789,
									"end": 2169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1789,
									"end": 2169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2818,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2300,
									"end": 2818,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2402,
									"end": 2404,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2397,
									"end": 2400,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2394,
									"end": 2405,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2812,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2391,
									"end": 2812,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2438,
									"end": 2443,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2435,
									"end": 2436,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2428,
									"end": 2444,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2482,
									"end": 2486,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2479,
									"end": 2480,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2469,
									"end": 2487,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2552,
									"end": 2554,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2540,
									"end": 2550,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2536,
									"end": 2555,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2533,
									"end": 2534,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2529,
									"end": 2556,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2523,
									"end": 2527,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2519,
									"end": 2557,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2592,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2576,
									"end": 2586,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2573,
									"end": 2593,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2617,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2570,
									"end": 2617,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2611,
									"end": 2615,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2617,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2570,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2666,
									"end": 2668,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2657,
									"end": 2669,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2654,
									"end": 2655,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2650,
									"end": 2670,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2644,
									"end": 2648,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2640,
									"end": 2671,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2630,
									"end": 2671,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2630,
									"end": 2671,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2802,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2721,
									"end": 2802,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2741,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2732,
									"end": 2737,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2729,
									"end": 2742,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2802,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2802,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2721,
									"end": 2802,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2798,
									"end": 2799,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2800,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2784,
									"end": 2800,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2754,
									"end": 2767,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2802,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2721,
									"end": 2802,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2802,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2721,
									"end": 2802,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 2728,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 2728,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2812,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2391,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2818,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2818,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2818,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2994,
									"end": 4293,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2994,
									"end": 4293,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3114,
									"end": 3124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3114,
									"end": 3124,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3136,
									"end": 3166,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3136,
									"end": 3166,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3189,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3189,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3133,
									"end": 3189,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3169,
									"end": 3187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3169,
									"end": 3187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 3169,
									"end": 3187,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3169,
									"end": 3187,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3169,
									"end": 3187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3198,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3288,
									"end": 3294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3286,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3280,
									"end": 3284,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3274,
									"end": 3285,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3286,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 3248,
									"end": 3286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3286,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3248,
									"end": 3286,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3242,
									"end": 3246,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3198,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 3198,
									"end": 3295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3198,
									"end": 3295,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3198,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3344,
									"end": 3348,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3375,
									"end": 3377,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3364,
									"end": 3378,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3364,
									"end": 3378,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3392,
									"end": 3393,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3387,
									"end": 4036,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3387,
									"end": 4036,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3387,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3387,
									"end": 4036,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4080,
									"end": 4081,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4097,
									"end": 4103,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4183,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4094,
									"end": 4183,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4149,
									"end": 4168,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4168,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4168,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4143,
									"end": 4169,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4183,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4094,
									"end": 4183,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2951,
									"end": 2952,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2947,
									"end": 2958,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2947,
									"end": 2958,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2947,
									"end": 2958,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2943,
									"end": 2967,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2939,
									"end": 2968,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2929,
									"end": 2969,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2975,
									"end": 2976,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2971,
									"end": 2982,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2971,
									"end": 2982,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2971,
									"end": 2982,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 2983,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4196,
									"end": 4277,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4196,
									"end": 4277,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3357,
									"end": 4287,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3357,
									"end": 4287,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3387,
									"end": 4036,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3387,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2248,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2240,
									"end": 2254,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2240,
									"end": 2254,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2240,
									"end": 2254,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2284,
									"end": 2288,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2271,
									"end": 2289,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2271,
									"end": 2289,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3423,
									"end": 3443,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3423,
									"end": 3443,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3423,
									"end": 3443,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3541,
									"end": 3763,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 3541,
									"end": 3763,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3555,
									"end": 3562,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3552,
									"end": 3553,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3549,
									"end": 3563,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3541,
									"end": 3763,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3541,
									"end": 3763,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 3541,
									"end": 3763,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3637,
									"end": 3656,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3637,
									"end": 3656,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3637,
									"end": 3656,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3631,
									"end": 3657,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3616,
									"end": 3658,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3616,
									"end": 3658,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3744,
									"end": 3748,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3729,
									"end": 3749,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3729,
									"end": 3749,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3729,
									"end": 3749,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3729,
									"end": 3749,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3697,
									"end": 3698,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3685,
									"end": 3699,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3685,
									"end": 3699,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3685,
									"end": 3699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3685,
									"end": 3699,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3571,
									"end": 3583,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3541,
									"end": 3763,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 3541,
									"end": 3763,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3541,
									"end": 3763,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 3541,
									"end": 3763,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3545,
									"end": 3548,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3791,
									"end": 3797,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3782,
									"end": 3789,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3779,
									"end": 3798,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3776,
									"end": 3977,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3776,
									"end": 3977,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 3776,
									"end": 3977,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3852,
									"end": 3871,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3852,
									"end": 3871,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3852,
									"end": 3871,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3846,
									"end": 3872,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3935,
									"end": 3936,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3931,
									"end": 3945,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3931,
									"end": 3945,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3931,
									"end": 3945,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3947,
									"end": 3950,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 3927,
									"end": 3951,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3923,
									"end": 3960,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3919,
									"end": 3961,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3904,
									"end": 3962,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3889,
									"end": 3963,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3889,
									"end": 3963,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3776,
									"end": 3977,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 3776,
									"end": 3977,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4023,
									"end": 4024,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4007,
									"end": 4021,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4021,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4021,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4003,
									"end": 4025,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3990,
									"end": 4026,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3990,
									"end": 4026,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2994,
									"end": 4293,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4654,
									"end": 5055,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 4654,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 3953,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006e586570c1c06a9fe2011c94ab30d4de4ce6e3b579667b95f1a270f0e93ea8d64736f6c634300081c0033",
									".code": [
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "4B0BDDD2"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "AA4D1655"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "B6B55F25"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "4B0BDDD2"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "73ACB590"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "99530B06"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "3FC8CEF3"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "429B62E5"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "8867DB6"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 3953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1739,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1739,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1330,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1330,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1291,
											"end": 1332,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1291,
											"end": 1332,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1151,
											"end": 1338,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1343,
											"end": 1520,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2921,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2921,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1904,
											"end": 2088,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 824,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 824,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 824,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 824,
											"end": 852,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 824,
											"end": 852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 824,
											"end": 852,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 824,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 824,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2272,
											"end": 2304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2272,
											"end": 2304,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2305,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2305,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 824,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2093,
											"end": 2311,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 904,
											"end": 942,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 904,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3800,
											"end": 3950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3800,
											"end": 3950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3550,
											"end": 3727,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3550,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3550,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 859,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 859,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 859,
											"end": 897,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 859,
											"end": 897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 859,
											"end": 897,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2131,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2131,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1830,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4013,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4051,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 4029,
											"end": 4047,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4029,
											"end": 4047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4022,
											"end": 4052,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030B71030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4068,
											"end": 4086,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4068,
											"end": 4086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1805,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1880,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4463,
											"name": "PUSH",
											"source": 9,
											"value": "506F7274666F6C696F2076616C7565206D75737420626520706F736974697665"
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4499,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4481,
											"end": 4499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4149,
											"end": 4505,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1859,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1942,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1928,
											"end": 1954,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3006,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3043,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2988,
											"end": 3043,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2988,
											"end": 3043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4714,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 3043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 4715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4754,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4824,
											"name": "PUSH",
											"source": 9,
											"value": "536861726573206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4763,
											"end": 4825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3043,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4510,
											"end": 4866,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3043,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2988,
											"end": 3043,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3082,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3062,
											"end": 3093,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3054,
											"end": 3117,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3054,
											"end": 3117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5073,
											"end": 5075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3054,
											"end": 3117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3117,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5076,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5114,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5085,
											"end": 5115,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E7420736861726573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5208,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5190,
											"end": 5208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4871,
											"end": 5214,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3054,
											"end": 3117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3147,
											"end": 3160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3160,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3198,
											"end": 3212,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3195,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3189,
											"end": 3212,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3212,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3189,
											"end": 3212,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3212,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3189,
											"end": 3212,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3188,
											"end": 3222,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3188,
											"end": 3222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3188,
											"end": 3222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3268,
											"end": 3278,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3286,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3262,
											"end": 3287,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3287,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3262,
											"end": 3287,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3388,
											"end": 3425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3416,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9345A8A944C0BCA27038313DD8066210A495BA6374E523065A2E7ADCC020FF2B"
										},
										{
											"begin": 3388,
											"end": 3425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3388,
											"end": 3425,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3425,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3425,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3425,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3425,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3800,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3881,
											"end": 3891,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4013,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4051,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 4029,
											"end": 4047,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4029,
											"end": 4047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4022,
											"end": 4052,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030B71030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4068,
											"end": 4086,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4068,
											"end": 4086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3808,
											"end": 4144,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3866,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3550,
											"end": 3727,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3550,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3648,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3635,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3666,
											"end": 3677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3677,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3705,
											"end": 3709,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3688,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3688,
											"end": 3709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3688,
											"end": 3709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3709,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3688,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3687,
											"end": 3719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3687,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3719,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3687,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6080,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6060,
											"end": 6081,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6119,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6090,
											"end": 6120,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6190,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6136,
											"end": 6154,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6136,
											"end": 6154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6136,
											"end": 6154,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6129,
											"end": 6191,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6207,
											"end": 6225,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6207,
											"end": 6225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6207,
											"end": 6225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6252,
											"end": 6271,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6252,
											"end": 6271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5876,
											"end": 6277,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2131,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2215,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2197,
											"end": 2252,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2197,
											"end": 2252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2197,
											"end": 2252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2252,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6487,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6466,
											"end": 6487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6466,
											"end": 6487,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6496,
											"end": 6526,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6596,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6535,
											"end": 6597,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6282,
											"end": 6638,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2252,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2197,
											"end": 2252,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2326,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2326,
											"end": 2347,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2358,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2372,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2326,
											"end": 2382,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2382,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2326,
											"end": 2382,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2460,
											"end": 2477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2493,
											"end": 2499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2460,
											"end": 2500,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2460,
											"end": 2500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2606,
											"end": 2619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2630,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2648,
											"end": 2682,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2663,
											"end": 2677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2663,
											"end": 2677,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2682,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2648,
											"end": 2682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2647,
											"end": 2729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2715,
											"end": 2729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2705,
											"end": 2711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2702,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2696,
											"end": 2711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2696,
											"end": 2711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2695,
											"end": 2729,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2695,
											"end": 2729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2695,
											"end": 2729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2647,
											"end": 2729,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2647,
											"end": 2729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2692,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2647,
											"end": 2729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2756,
											"end": 2766,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2768,
											"end": 2774,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2750,
											"end": 2775,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2750,
											"end": 2775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6845,
											"end": 6847,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6827,
											"end": 6848,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6886,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6864,
											"end": 6882,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6864,
											"end": 6882,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6864,
											"end": 6882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6857,
											"end": 6887,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6923,
											"end": 6957,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 6903,
											"end": 6921,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6903,
											"end": 6921,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6896,
											"end": 6958,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 7001,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7037,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7018,
											"end": 7037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 6643,
											"end": 7043,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7250,
											"end": 7252,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7253,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7289,
											"end": 7291,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7262,
											"end": 7292,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7362,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 7308,
											"end": 7326,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7308,
											"end": 7326,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7326,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7301,
											"end": 7363,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 7397,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7379,
											"end": 7397,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7379,
											"end": 7397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7372,
											"end": 7404,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7440,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7421,
											"end": 7440,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7048,
											"end": 7446,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7656,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7694,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7695,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7731,
											"end": 7762,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 7711,
											"end": 7729,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7711,
											"end": 7729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7711,
											"end": 7729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7798,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7780,
											"end": 7798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7451,
											"end": 7804,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8011,
											"end": 8013,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7993,
											"end": 8014,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8052,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 8030,
											"end": 8048,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8030,
											"end": 8048,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8030,
											"end": 8048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8023,
											"end": 8053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8089,
											"end": 8123,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 8069,
											"end": 8087,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8069,
											"end": 8087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8069,
											"end": 8087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8062,
											"end": 8124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8140,
											"end": 8158,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8140,
											"end": 8158,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8158,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8168,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8204,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8185,
											"end": 8204,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7809,
											"end": 8210,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8417,
											"end": 8419,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8420,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8456,
											"end": 8458,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 8436,
											"end": 8454,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8436,
											"end": 8454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8436,
											"end": 8454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8429,
											"end": 8459,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8495,
											"end": 8529,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8530,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8546,
											"end": 8564,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8546,
											"end": 8564,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 8564,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8539,
											"end": 8572,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8589,
											"end": 8608,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8589,
											"end": 8608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 8215,
											"end": 8614,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8860,
											"end": 8862,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8863,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8899,
											"end": 8933,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 8879,
											"end": 8897,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8879,
											"end": 8897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8879,
											"end": 8897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8872,
											"end": 8934,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8943,
											"end": 8979,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8996,
											"end": 9015,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8996,
											"end": 9015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 8619,
											"end": 9021,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9210,
											"end": 9231,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9267,
											"end": 9269,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9270,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9306,
											"end": 9339,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9340,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9375,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9357,
											"end": 9375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 9026,
											"end": 9381,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9588,
											"end": 9590,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9570,
											"end": 9591,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9627,
											"end": 9629,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9700,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 9646,
											"end": 9664,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9646,
											"end": 9664,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9646,
											"end": 9664,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9639,
											"end": 9701,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9710,
											"end": 9741,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9758,
											"end": 9777,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9758,
											"end": 9777,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 9386,
											"end": 9783,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9588,
											"end": 9610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9990,
											"end": 9992,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9972,
											"end": 9993,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10002,
											"end": 10032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10068,
											"end": 10102,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10161,
											"end": 10180,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10161,
											"end": 10180,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 9788,
											"end": 10186,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1343,
											"end": 1520,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10027,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9979,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9440,
											"end": 10034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 10034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10411,
											"end": 10443,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10411,
											"end": 10443,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10411,
											"end": 10443,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10393,
											"end": 10444,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10480,
											"end": 10512,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10480,
											"end": 10512,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10478,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10460,
											"end": 10478,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10478,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 10513,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10547,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10529,
											"end": 10547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10522,
											"end": 10556,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10522,
											"end": 10556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10522,
											"end": 10556,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1480,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1455,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10759,
											"end": 10791,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10759,
											"end": 10791,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10741,
											"end": 10792,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10801,
											"end": 10835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10801,
											"end": 10835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10801,
											"end": 10835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 10567,
											"end": 10841,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11048,
											"end": 11050,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11030,
											"end": 11051,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11087,
											"end": 11089,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11067,
											"end": 11085,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11067,
											"end": 11085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11067,
											"end": 11085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11060,
											"end": 11090,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11126,
											"end": 11159,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11099,
											"end": 11160,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10846,
											"end": 11201,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 8731,
											"end": 8753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8520,
											"end": 9055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5745,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 5754,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11658,
											"end": 11660,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11640,
											"end": 11661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11697,
											"end": 11699,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 11700,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11736,
											"end": 11770,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 11716,
											"end": 11734,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11716,
											"end": 11734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 11734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11709,
											"end": 11771,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11787,
											"end": 11805,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11787,
											"end": 11805,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11787,
											"end": 11805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11780,
											"end": 11820,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11837,
											"end": 11856,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11837,
											"end": 11856,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 11456,
											"end": 11862,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12069,
											"end": 12071,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12051,
											"end": 12072,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12108,
											"end": 12110,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 12088,
											"end": 12106,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12088,
											"end": 12106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12088,
											"end": 12106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12081,
											"end": 12111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12147,
											"end": 12181,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12127,
											"end": 12145,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12127,
											"end": 12145,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12127,
											"end": 12145,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12120,
											"end": 12182,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12198,
											"end": 12216,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12198,
											"end": 12216,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12191,
											"end": 12227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12244,
											"end": 12263,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12244,
											"end": 12263,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 11867,
											"end": 12269,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12782,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12785,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12821,
											"end": 12823,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 12801,
											"end": 12819,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12801,
											"end": 12819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12801,
											"end": 12819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12794,
											"end": 12824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12860,
											"end": 12891,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 12840,
											"end": 12858,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12840,
											"end": 12858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12840,
											"end": 12858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12833,
											"end": 12892,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12909,
											"end": 12927,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12909,
											"end": 12927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 12580,
											"end": 12933,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 437,
											"end": 663,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 437,
											"end": 663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 496,
											"end": 502,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 551,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 528,
											"end": 535,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 524,
											"end": 547,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 520,
											"end": 552,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 517,
											"end": 569,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 517,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 517,
											"end": 569,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 565,
											"end": 566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 567,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 517,
											"end": 569,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 517,
											"end": 569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 610,
											"end": 633,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 610,
											"end": 633,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 437,
											"end": 663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 437,
											"end": 663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 668,
											"end": 841,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 668,
											"end": 841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 736,
											"end": 756,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 756,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 785,
											"end": 816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 785,
											"end": 816,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 775,
											"end": 817,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 775,
											"end": 817,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 765,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 765,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 831,
											"end": 832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 829,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 833,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 765,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 765,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 668,
											"end": 841,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 668,
											"end": 841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 668,
											"end": 841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 668,
											"end": 841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 846,
											"end": 1146,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 846,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 914,
											"end": 920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 928,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 972,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 954,
											"end": 961,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 950,
											"end": 973,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 946,
											"end": 978,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 943,
											"end": 995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 943,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 943,
											"end": 995,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1014,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1043,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 846,
											"end": 1146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1899,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1525,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1602,
											"end": 1608,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1624,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1673,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1669,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1642,
											"end": 1674,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 1691,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1639,
											"end": 1691,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 1691,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1639,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1710,
											"end": 1739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1758,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1899,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1899,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1865,
											"end": 1867,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1837,
											"end": 1869,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1837,
											"end": 1869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2502,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2316,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 2467,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2502,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2316,
											"end": 2502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2625,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 2507,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2593,
											"end": 2598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 2600,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2577,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2559,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2559,
											"end": 2619,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2615,
											"end": 2616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2945,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2630,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2758,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2742,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 2754,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2727,
											"end": 2759,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2776,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 2724,
											"end": 2776,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2774,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2776,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 2724,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 2814,
											"end": 2823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 2795,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2824,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 2795,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2876,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2859,
											"end": 2877,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2878,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 2909,
											"end": 2914,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 2887,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2915,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 2887,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2939,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2939,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2945,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2945,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3418,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 3158,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3226,
											"end": 3232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3284,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3266,
											"end": 3273,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3262,
											"end": 3285,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3290,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3326,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3326,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 3326,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3326,
											"end": 3355,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 3326,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3355,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 3408,
											"end": 3410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3397,
											"end": 3406,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 3374,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3412,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 3374,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3364,
											"end": 3412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3364,
											"end": 3412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3418,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3418,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3803,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 3423,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3503,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3498,
											"end": 3510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3510,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3566,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 3566,
											"end": 3627,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3620,
											"end": 3624,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 3612,
											"end": 3618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3625,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3598,
											"end": 3625,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3598,
											"end": 3625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3566,
											"end": 3627,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 3566,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3673,
											"end": 3675,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3676,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3677,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 3636,
											"end": 3797,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3719,
											"end": 3729,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3714,
											"end": 3717,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3710,
											"end": 3730,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3731,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3754,
											"end": 3758,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3786,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3797,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 3636,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5219,
											"end": 5346,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5219,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5290,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 5275,
											"end": 5278,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5271,
											"end": 5291,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5311,
											"end": 5315,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 5308,
											"end": 5309,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5301,
											"end": 5316,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5339,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5340,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5351,
											"end": 5519,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 5351,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5433,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5472,
											"end": 5487,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5472,
											"end": 5487,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5472,
											"end": 5487,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5488,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5488,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5452,
											"end": 5489,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5442,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 5442,
											"end": 5513,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5493,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 5493,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5493,
											"end": 5511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5741,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 5524,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5591,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5580,
											"end": 5712,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5634,
											"end": 5644,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 5629,
											"end": 5632,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5625,
											"end": 5645,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5622,
											"end": 5623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 5666,
											"end": 5667,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5659,
											"end": 5674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5702,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5712,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5580,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5726,
											"end": 5735,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5726,
											"end": 5735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5746,
											"end": 5871,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 5746,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5842,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5842,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5842,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5829,
											"end": 5865,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5829,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 5829,
											"end": 5865,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5845,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 5845,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5845,
											"end": 5863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11206,
											"end": 11451,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 11206,
											"end": 11451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11273,
											"end": 11279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11326,
											"end": 11328,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11323,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11305,
											"end": 11312,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11301,
											"end": 11324,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11329,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 11294,
											"end": 11346,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11294,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 11294,
											"end": 11346,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11342,
											"end": 11343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11339,
											"end": 11340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11332,
											"end": 11344,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11294,
											"end": 11346,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 11294,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11374,
											"end": 11383,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11368,
											"end": 11384,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11393,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 11415,
											"end": 11420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11393,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 11393,
											"end": 11421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12274,
											"end": 12575,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 12274,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12403,
											"end": 12406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12441,
											"end": 12447,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12435,
											"end": 12448,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12493,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12480,
											"end": 12484,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12472,
											"end": 12478,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12468,
											"end": 12485,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12463,
											"end": 12466,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12457,
											"end": 12494,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12550,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12513,
											"end": 12529,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12513,
											"end": 12529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12551,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12513,
											"end": 12529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12274,
											"end": 12575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12274,
											"end": 12575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"fund_shares.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admins(address)": "429b62e5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"deposit(uint256)": "b6b55f25",
							"fundPortfolio()": "aa4d1655",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"portfolioValue()": "73acb590",
							"pricePerShare()": "99530b06",
							"setAdmin(address,bool)": "4b0bddd2",
							"setPortfolioValue(uint256)": "08867db6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"weth()": "3fc8cef3",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fundPortfolio\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalRequest\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundPortfolio\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"portfolioValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newValue\",\"type\":\"uint256\"}],\"name\":\"setPortfolioValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract allows users to deposit WETH, mint proportional fund shares,      and send WETH to a designated fund portfolio while relying on an external      portfolio value update for tracking share value.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256)\":{\"details\":\"Deposit WETH, mint proportional shares, and send WETH to the fund portfolio.\",\"params\":{\"amount\":\"The amount of WETH to deposit.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pricePerShare()\":{\"details\":\"Returns the value of a single share based on fundPortfolio's total valuation.\"},\"setAdmin(address,bool)\":{\"details\":\"Adds or removes admin privileges.\"},\"setPortfolioValue(uint256)\":{\"details\":\"Allows an admin to update the total portfolio value (tracked externally).\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"withdraw(uint256)\":{\"details\":\"Withdraw WETH by burning vault shares.\",\"params\":{\"shares\":\"The number of vault shares to redeem.\"}}},\"title\":\"WETH ERC-4626 Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fund_shares.sol\":\"WETHVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"fund_shares.sol\":{\"keccak256\":\"0x3b02e40e8e27ebec7e70adc233004ed24bd95cf81487195deabbea6d325058d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c26e8463b6f4a8f2a460d85dc72c73a31a67f4de9750c3343878fd6fd265b79\",\"dweb:/ipfs/QmR7AgMrfLiWB1Q38WMvfXWLM3XC2A5ZM68zBGLYBynuah\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 355,
								"contract": "fund_shares.sol:WETHVault",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 361,
								"contract": "fund_shares.sol:WETHVault",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 363,
								"contract": "fund_shares.sol:WETHVault",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 365,
								"contract": "fund_shares.sol:WETHVault",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 367,
								"contract": "fund_shares.sol:WETHVault",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 285,
								"contract": "fund_shares.sol:WETHVault",
								"label": "_status",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": "fund_shares.sol:WETHVault",
								"label": "admins",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 24,
								"contract": "fund_shares.sol:WETHVault",
								"label": "portfolioValue",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 285,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  0x00\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  0x00\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_24:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1431   */\ntag_3:\n    /* \"#utility.yul\":973:979   */\n  0x00\n    /* \"#utility.yul\":981:987   */\n  0x00\n    /* \"#utility.yul\":1034:1036   */\n  0x40\n    /* \"#utility.yul\":1022:1031   */\n  dup4\n    /* \"#utility.yul\":1013:1020   */\n  dup6\n    /* \"#utility.yul\":1009:1032   */\n  sub\n    /* \"#utility.yul\":1005:1037   */\n  slt\n    /* \"#utility.yul\":1002:1054   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1050:1051   */\n  0x00\n    /* \"#utility.yul\":1047:1048   */\n  0x00\n    /* \"#utility.yul\":1040:1052   */\n  revert\n    /* \"#utility.yul\":1002:1054   */\ntag_26:\n    /* \"#utility.yul\":1077:1093   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1105:1135   */\n  dup2\n  gt\n    /* \"#utility.yul\":1102:1152   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1148:1149   */\n  0x00\n    /* \"#utility.yul\":1145:1146   */\n  0x00\n    /* \"#utility.yul\":1138:1150   */\n  revert\n    /* \"#utility.yul\":1102:1152   */\ntag_27:\n    /* \"#utility.yul\":1171:1232   */\n  tag_28\n    /* \"#utility.yul\":1224:1231   */\n  dup6\n    /* \"#utility.yul\":1215:1221   */\n  dup3\n    /* \"#utility.yul\":1204:1213   */\n  dup7\n    /* \"#utility.yul\":1200:1222   */\n  add\n    /* \"#utility.yul\":1171:1232   */\n  tag_11\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1278:1280   */\n  0x20\n    /* \"#utility.yul\":1263:1281   */\n  dup6\n  add\n    /* \"#utility.yul\":1257:1282   */\n  mload\n    /* \"#utility.yul\":1161:1232   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1257:1282   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1294:1326   */\n  dup2\n  gt\n    /* \"#utility.yul\":1291:1343   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1339:1340   */\n  0x00\n    /* \"#utility.yul\":1336:1337   */\n  0x00\n    /* \"#utility.yul\":1329:1341   */\n  revert\n    /* \"#utility.yul\":1291:1343   */\ntag_29:\n    /* \"#utility.yul\":1362:1425   */\n  tag_30\n    /* \"#utility.yul\":1417:1424   */\n  dup6\n    /* \"#utility.yul\":1406:1414   */\n  dup3\n    /* \"#utility.yul\":1395:1404   */\n  dup7\n    /* \"#utility.yul\":1391:1415   */\n  add\n    /* \"#utility.yul\":1362:1425   */\n  tag_11\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1352:1425   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":874:1431   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1436:1816   */\ntag_12:\n    /* \"#utility.yul\":1515:1516   */\n  0x01\n    /* \"#utility.yul\":1511:1523   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1558:1570   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1579:1640   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1633:1637   */\n  0x7f\n    /* \"#utility.yul\":1625:1631   */\n  dup3\n    /* \"#utility.yul\":1621:1638   */\n  and\n    /* \"#utility.yul\":1611:1638   */\n  swap2\n  pop\n    /* \"#utility.yul\":1579:1640   */\ntag_32:\n    /* \"#utility.yul\":1686:1688   */\n  0x20\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1675:1689   */\n  lt\n    /* \"#utility.yul\":1655:1673   */\n  dup2\n    /* \"#utility.yul\":1652:1690   */\n  sub\n    /* \"#utility.yul\":1649:1810   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1732:1742   */\n  0x4e487b71\n    /* \"#utility.yul\":1727:1730   */\n  0xe0\n    /* \"#utility.yul\":1723:1743   */\n  shl\n    /* \"#utility.yul\":1720:1721   */\n  0x00\n    /* \"#utility.yul\":1713:1744   */\n  mstore\n    /* \"#utility.yul\":1767:1771   */\n  0x22\n    /* \"#utility.yul\":1764:1765   */\n  0x04\n    /* \"#utility.yul\":1757:1772   */\n  mstore\n    /* \"#utility.yul\":1795:1799   */\n  0x24\n    /* \"#utility.yul\":1792:1793   */\n  0x00\n    /* \"#utility.yul\":1785:1800   */\n  revert\n    /* \"#utility.yul\":1649:1810   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1436:1816   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1947:2465   */\ntag_14:\n    /* \"#utility.yul\":2049:2051   */\n  0x1f\n    /* \"#utility.yul\":2044:2047   */\n  dup3\n    /* \"#utility.yul\":2041:2052   */\n  gt\n    /* \"#utility.yul\":2038:2459   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":2085:2090   */\n  dup1\n    /* \"#utility.yul\":2082:2083   */\n  0x00\n    /* \"#utility.yul\":2075:2091   */\n  mstore\n    /* \"#utility.yul\":2129:2133   */\n  0x20\n    /* \"#utility.yul\":2126:2127   */\n  0x00\n    /* \"#utility.yul\":2116:2134   */\n  keccak256\n    /* \"#utility.yul\":2199:2201   */\n  0x1f\n    /* \"#utility.yul\":2187:2197   */\n  dup5\n    /* \"#utility.yul\":2183:2202   */\n  add\n    /* \"#utility.yul\":2180:2181   */\n  0x05\n    /* \"#utility.yul\":2176:2203   */\n  shr\n    /* \"#utility.yul\":2170:2174   */\n  dup2\n    /* \"#utility.yul\":2166:2204   */\n  add\n    /* \"#utility.yul\":2235:2239   */\n  0x20\n    /* \"#utility.yul\":2223:2233   */\n  dup6\n    /* \"#utility.yul\":2220:2240   */\n  lt\n    /* \"#utility.yul\":2217:2264   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2258:2262   */\n  dup1\n    /* \"#utility.yul\":2217:2264   */\ntag_37:\n    /* \"#utility.yul\":2313:2315   */\n  0x1f\n    /* \"#utility.yul\":2308:2311   */\n  dup5\n    /* \"#utility.yul\":2304:2316   */\n  add\n    /* \"#utility.yul\":2301:2302   */\n  0x05\n    /* \"#utility.yul\":2297:2317   */\n  shr\n    /* \"#utility.yul\":2291:2295   */\n  dup3\n    /* \"#utility.yul\":2287:2318   */\n  add\n    /* \"#utility.yul\":2277:2318   */\n  swap2\n  pop\n    /* \"#utility.yul\":2368:2449   */\ntag_38:\n    /* \"#utility.yul\":2386:2388   */\n  dup2\n    /* \"#utility.yul\":2379:2384   */\n  dup2\n    /* \"#utility.yul\":2376:2389   */\n  lt\n    /* \"#utility.yul\":2368:2449   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2445:2446   */\n  0x00\n    /* \"#utility.yul\":2431:2447   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2412:2413   */\n  0x01\n    /* \"#utility.yul\":2401:2414   */\n  add\n    /* \"#utility.yul\":2368:2449   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":2372:2375   */\n  pop\n  pop\n    /* \"#utility.yul\":2038:2459   */\ntag_36:\n    /* \"#utility.yul\":1947:2465   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2641:3940   */\ntag_7:\n    /* \"#utility.yul\":2761:2771   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2783:2813   */\n  dup2\n  gt\n    /* \"#utility.yul\":2780:2836   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2816:2834   */\n  tag_44\n  tag_10\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2845:2942   */\n  tag_45\n    /* \"#utility.yul\":2935:2941   */\n  dup2\n    /* \"#utility.yul\":2895:2933   */\n  tag_46\n    /* \"#utility.yul\":2927:2931   */\n  dup5\n    /* \"#utility.yul\":2921:2932   */\n  sload\n    /* \"#utility.yul\":2895:2933   */\n  tag_12\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2889:2893   */\n  dup5\n    /* \"#utility.yul\":2845:2942   */\n  tag_14\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2991:2995   */\n  0x20\n    /* \"#utility.yul\":3022:3024   */\n  0x1f\n    /* \"#utility.yul\":3011:3025   */\n  dup3\n  gt\n    /* \"#utility.yul\":3039:3040   */\n  0x01\n    /* \"#utility.yul\":3034:3683   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3727:3728   */\n  0x00\n    /* \"#utility.yul\":3744:3750   */\n  dup4\n    /* \"#utility.yul\":3741:3830   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":3796:3815   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3790:3816   */\n  mload\n    /* \"#utility.yul\":3741:3830   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":2598:2599   */\n  0x03\n    /* \"#utility.yul\":2594:2605   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2590:2614   */\n  shr\n    /* \"#utility.yul\":2586:2615   */\n  not\n    /* \"#utility.yul\":2576:2616   */\n  and\n    /* \"#utility.yul\":2622:2623   */\n  0x01\n    /* \"#utility.yul\":2618:2629   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2573:2630   */\n  or\n    /* \"#utility.yul\":3843:3924   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3004:3934   */\n  jump(tag_40)\n    /* \"#utility.yul\":3034:3683   */\ntag_48:\n    /* \"#utility.yul\":1894:1895   */\n  0x00\n    /* \"#utility.yul\":1887:1901   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1931:1935   */\n  0x20\n    /* \"#utility.yul\":1918:1936   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3070:3090   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3188:3410   */\ntag_52:\n    /* \"#utility.yul\":3202:3209   */\n  dup3\n    /* \"#utility.yul\":3199:3200   */\n  dup2\n    /* \"#utility.yul\":3196:3210   */\n  lt\n    /* \"#utility.yul\":3188:3410   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3284:3303   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3278:3304   */\n  mload\n    /* \"#utility.yul\":3263:3305   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3391:3395   */\n  0x20\n    /* \"#utility.yul\":3376:3396   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3344:3345   */\n  0x01\n    /* \"#utility.yul\":3332:3346   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3218:3230   */\n  add\n    /* \"#utility.yul\":3188:3410   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3192:3195   */\n  pop\n    /* \"#utility.yul\":3438:3444   */\n  dup5\n    /* \"#utility.yul\":3429:3436   */\n  dup3\n    /* \"#utility.yul\":3426:3445   */\n  lt\n    /* \"#utility.yul\":3423:3624   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3499:3518   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3493:3519   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3582:3583   */\n  0x03\n    /* \"#utility.yul\":3578:3592   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3594:3597   */\n  0xf8\n    /* \"#utility.yul\":3574:3598   */\n  and\n    /* \"#utility.yul\":3570:3607   */\n  shr\n    /* \"#utility.yul\":3566:3608   */\n  not\n    /* \"#utility.yul\":3551:3609   */\n  and\n    /* \"#utility.yul\":3536:3610   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3423:3624   */\ntag_55:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3670:3671   */\n  0x01\n    /* \"#utility.yul\":3654:3668   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3650:3672   */\n  add\n    /* \"#utility.yul\":3637:3673   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2641:3940   */\n  jump\t// out\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3132:3134   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3114:3135   */\n      mstore\n        /* \"#utility.yul\":3171:3173   */\n      0x25\n        /* \"#utility.yul\":3151:3169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3144:3174   */\n      mstore\n        /* \"#utility.yul\":3210:3244   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3190:3208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3183:3245   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3261:3279   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3254:3289   */\n      mstore\n        /* \"#utility.yul\":3306:3325   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3538:3540   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3520:3541   */\n      mstore\n        /* \"#utility.yul\":3577:3579   */\n      0x24\n        /* \"#utility.yul\":3557:3575   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3550:3580   */\n      mstore\n        /* \"#utility.yul\":3616:3650   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3596:3614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3589:3651   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3667:3685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3660:3694   */\n      mstore\n        /* \"#utility.yul\":3711:3730   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3336:3736   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3925:3946   */\n      mstore\n        /* \"#utility.yul\":3982:3984   */\n      0x22\n        /* \"#utility.yul\":3962:3980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3955:3985   */\n      mstore\n        /* \"#utility.yul\":4021:4055   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4001:4019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3994:4056   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4072:4090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4065:4097   */\n      mstore\n        /* \"#utility.yul\":4114:4133   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3741:4139   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4328:4349   */\n      mstore\n        /* \"#utility.yul\":4385:4387   */\n      0x1d\n        /* \"#utility.yul\":4365:4383   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4358:4388   */\n      mstore\n        /* \"#utility.yul\":4424:4455   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4404:4422   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4397:4456   */\n      mstore\n        /* \"#utility.yul\":4473:4491   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4144:4497   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4686:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4745   */\n      0x25\n        /* \"#utility.yul\":4723:4741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4716:4746   */\n      mstore\n        /* \"#utility.yul\":4782:4816   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4762:4780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4755:4817   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4833:4851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4826:4861   */\n      mstore\n        /* \"#utility.yul\":4878:4897   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4502:4903   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5110:5112   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5092:5113   */\n      mstore\n        /* \"#utility.yul\":5149:5151   */\n      0x23\n        /* \"#utility.yul\":5129:5147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5122:5152   */\n      mstore\n        /* \"#utility.yul\":5188:5222   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5168:5186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5161:5223   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5239:5257   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5232:5265   */\n      mstore\n        /* \"#utility.yul\":5282:5301   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4908:5307   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5514:5516   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5496:5517   */\n      mstore\n        /* \"#utility.yul\":5553:5555   */\n      0x26\n        /* \"#utility.yul\":5533:5551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5526:5556   */\n      mstore\n        /* \"#utility.yul\":5592:5626   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5572:5590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5565:5627   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5643:5661   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5636:5672   */\n      mstore\n        /* \"#utility.yul\":5689:5708   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5312:5714   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_18:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_140:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_144:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_21:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_146:\n        /* \"#utility.yul\":783:812   */\n      tag_147\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_140\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_31:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      0x00\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_151:\n        /* \"#utility.yul\":1479:1508   */\n      tag_152\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_153\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_44:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_156:\n        /* \"#utility.yul\":2013:2042   */\n      tag_157\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2053:2313   */\n    tag_60:\n        /* \"#utility.yul\":2121:2127   */\n      0x00\n        /* \"#utility.yul\":2129:2135   */\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x40\n        /* \"#utility.yul\":2170:2179   */\n      dup4\n        /* \"#utility.yul\":2161:2168   */\n      dup6\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      0x00\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_159:\n        /* \"#utility.yul\":2221:2250   */\n      tag_160\n        /* \"#utility.yul\":2240:2249   */\n      dup4\n        /* \"#utility.yul\":2221:2250   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2211:2250   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2307   */\n      tag_161\n        /* \"#utility.yul\":2303:2305   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup5\n        /* \"#utility.yul\":2288:2306   */\n      add\n        /* \"#utility.yul\":2269:2307   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2259:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2318:2698   */\n    tag_65:\n        /* \"#utility.yul\":2397:2398   */\n      0x01\n        /* \"#utility.yul\":2393:2405   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2440:2452   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2461:2522   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2515:2519   */\n      0x7f\n        /* \"#utility.yul\":2507:2513   */\n      dup3\n        /* \"#utility.yul\":2503:2520   */\n      and\n        /* \"#utility.yul\":2493:2520   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2522   */\n    tag_163:\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2560:2566   */\n      dup3\n        /* \"#utility.yul\":2557:2571   */\n      lt\n        /* \"#utility.yul\":2537:2555   */\n      dup2\n        /* \"#utility.yul\":2534:2572   */\n      sub\n        /* \"#utility.yul\":2531:2692   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2614:2624   */\n      0x4e487b71\n        /* \"#utility.yul\":2609:2612   */\n      0xe0\n        /* \"#utility.yul\":2605:2625   */\n      shl\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2595:2626   */\n      mstore\n        /* \"#utility.yul\":2649:2653   */\n      0x22\n        /* \"#utility.yul\":2646:2647   */\n      0x04\n        /* \"#utility.yul\":2639:2654   */\n      mstore\n        /* \"#utility.yul\":2677:2681   */\n      0x24\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2667:2682   */\n      revert\n        /* \"#utility.yul\":2531:2692   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2318:2698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2703:2925   */\n    tag_88:\n        /* \"#utility.yul\":2768:2777   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2789:2799   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2786:2919   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2841:2851   */\n      0x4e487b71\n        /* \"#utility.yul\":2836:2839   */\n      0xe0\n        /* \"#utility.yul\":2832:2852   */\n      shl\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2822:2853   */\n      mstore\n        /* \"#utility.yul\":2876:2880   */\n      0x11\n        /* \"#utility.yul\":2873:2874   */\n      0x04\n        /* \"#utility.yul\":2866:2881   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n\n    auxdata: 0xa2646970667358221220fb984a3ba8d1f4637996889a03c2281225f0dcca42513e601f0d8ec3bf3f137964736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_384": {
									"entryPoint": null,
									"id": 384,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 79,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3942:9",
										"nodeType": "YulBlock",
										"src": "0:3942:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:9",
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:9",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:9",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:9",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nativeSrc": "66:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nativeSrc": "56:31:9",
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nativeSrc": "56:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:9",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:9",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nativeSrc": "96:15:9",
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nativeSrc": "96:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:9",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:9",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nativeSrc": "120:15:9",
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nativeSrc": "120:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nativeSrc": "210:659:9",
													"nodeType": "YulBlock",
													"src": "210:659:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:9",
																"nodeType": "YulBlock",
																"src": "259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:9",
																					"nodeType": "YulLiteral",
																					"src": "268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:9",
																					"nodeType": "YulLiteral",
																					"src": "271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:9"
																			},
																			"nativeSrc": "261:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:9"
																		},
																		"nativeSrc": "261:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:9",
																						"nodeType": "YulLiteral",
																						"src": "246:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:9"
																				},
																				"nativeSrc": "234:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:9"
																		},
																		"nativeSrc": "230:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:9"
																},
																"nativeSrc": "223:35:9",
																"nodeType": "YulFunctionCall",
																"src": "223:35:9"
															},
															"nativeSrc": "220:55:9",
															"nodeType": "YulIf",
															"src": "220:55:9"
														},
														{
															"nativeSrc": "284:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:9"
																},
																"nativeSrc": "298:13:9",
																"nodeType": "YulFunctionCall",
																"src": "298:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:9",
																	"nodeType": "YulTypedName",
																	"src": "288:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:9",
																"nodeType": "YulBlock",
																"src": "354:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:9"
																			},
																			"nativeSrc": "356:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:9"
																		},
																		"nativeSrc": "356:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:9",
																						"nodeType": "YulLiteral",
																						"src": "342:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:9",
																						"nodeType": "YulLiteral",
																						"src": "346:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:9"
																				},
																				"nativeSrc": "338:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:9",
																				"nodeType": "YulLiteral",
																				"src": "350:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:9"
																		},
																		"nativeSrc": "334:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:9"
																},
																"nativeSrc": "323:30:9",
																"nodeType": "YulFunctionCall",
																"src": "323:30:9"
															},
															"nativeSrc": "320:56:9",
															"nodeType": "YulIf",
															"src": "320:56:9"
														},
														{
															"nativeSrc": "385:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:9",
																		"nodeType": "YulLiteral",
																		"src": "405:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:9"
																},
																"nativeSrc": "399:9:9",
																"nodeType": "YulFunctionCall",
																"src": "399:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:9",
																	"nodeType": "YulTypedName",
																	"src": "389:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:9",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:9",
																										"nodeType": "YulLiteral",
																										"src": "471:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:9"
																								},
																								"nativeSrc": "459:17:9",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:9",
																										"nodeType": "YulLiteral",
																										"src": "482:2:9",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:9"
																								},
																								"nativeSrc": "478:7:9",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:9"
																						},
																						"nativeSrc": "455:31:9",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:9",
																						"nodeType": "YulLiteral",
																						"src": "488:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:9"
																				},
																				"nativeSrc": "451:40:9",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:9",
																						"nodeType": "YulLiteral",
																						"src": "497:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:9"
																				},
																				"nativeSrc": "493:7:9",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:9"
																		},
																		"nativeSrc": "447:54:9",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:9"
																},
																"nativeSrc": "435:67:9",
																"nodeType": "YulFunctionCall",
																"src": "435:67:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:9",
																	"nodeType": "YulTypedName",
																	"src": "421:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:9",
																"nodeType": "YulBlock",
																"src": "577:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:9"
																			},
																			"nativeSrc": "579:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:9"
																		},
																		"nativeSrc": "579:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:9",
																								"nodeType": "YulLiteral",
																								"src": "540:2:9",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:9",
																								"nodeType": "YulLiteral",
																								"src": "544:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:9"
																						},
																						"nativeSrc": "536:10:9",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:9",
																						"nodeType": "YulLiteral",
																						"src": "548:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:9"
																				},
																				"nativeSrc": "532:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:9"
																		},
																		"nativeSrc": "517:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:9"
																		},
																		"nativeSrc": "553:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:9"
																},
																"nativeSrc": "514:62:9",
																"nodeType": "YulFunctionCall",
																"src": "514:62:9"
															},
															"nativeSrc": "511:88:9",
															"nodeType": "YulIf",
															"src": "511:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:9",
																		"nodeType": "YulLiteral",
																		"src": "615:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:9"
																},
																"nativeSrc": "608:22:9",
																"nodeType": "YulFunctionCall",
																"src": "608:22:9"
															},
															"nativeSrc": "608:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:9"
																},
																"nativeSrc": "639:22:9",
																"nodeType": "YulFunctionCall",
																"src": "639:22:9"
															},
															"nativeSrc": "639:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:9"
														},
														{
															"body": {
																"nativeSrc": "713:16:9",
																"nodeType": "YulBlock",
																"src": "713:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:9",
																					"nodeType": "YulLiteral",
																					"src": "722:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:9",
																					"nodeType": "YulLiteral",
																					"src": "725:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:9"
																			},
																			"nativeSrc": "715:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:9"
																		},
																		"nativeSrc": "715:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:9"
																				},
																				"nativeSrc": "680:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:9",
																				"nodeType": "YulLiteral",
																				"src": "701:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:9"
																		},
																		"nativeSrc": "676:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:9"
																},
																"nativeSrc": "673:39:9",
																"nodeType": "YulFunctionCall",
																"src": "673:39:9"
															},
															"nativeSrc": "670:59:9",
															"nodeType": "YulIf",
															"src": "670:59:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:9",
																				"nodeType": "YulLiteral",
																				"src": "756:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:9"
																		},
																		"nativeSrc": "744:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:9",
																				"nodeType": "YulLiteral",
																				"src": "775:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:9"
																		},
																		"nativeSrc": "763:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:9"
																},
																"nativeSrc": "738:51:9",
																"nodeType": "YulFunctionCall",
																"src": "738:51:9"
															},
															"nativeSrc": "738:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:9"
																				},
																				"nativeSrc": "809:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:9",
																				"nodeType": "YulLiteral",
																				"src": "830:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:9"
																		},
																		"nativeSrc": "805:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:9",
																		"nodeType": "YulLiteral",
																		"src": "837:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:9"
																},
																"nativeSrc": "798:41:9",
																"nodeType": "YulFunctionCall",
																"src": "798:41:9"
															},
															"nativeSrc": "798:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:9"
														},
														{
															"nativeSrc": "848:15:9",
															"nodeType": "YulAssignment",
															"src": "848:15:9",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:9",
																"nodeType": "YulIdentifier",
																"src": "857:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:9",
														"nodeType": "YulTypedName",
														"src": "184:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:9",
														"nodeType": "YulTypedName",
														"src": "192:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:9",
														"nodeType": "YulTypedName",
														"src": "200:5:9",
														"type": ""
													}
												],
												"src": "146:723:9"
											},
											{
												"body": {
													"nativeSrc": "992:439:9",
													"nodeType": "YulBlock",
													"src": "992:439:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1038:16:9",
																"nodeType": "YulBlock",
																"src": "1038:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1047:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1047:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1050:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1050:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1040:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1040:6:9"
																			},
																			"nativeSrc": "1040:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1040:12:9"
																		},
																		"nativeSrc": "1040:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1040:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1013:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1013:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1022:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1022:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1009:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1009:3:9"
																		},
																		"nativeSrc": "1009:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1009:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1034:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1034:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1005:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1005:3:9"
																},
																"nativeSrc": "1005:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1005:32:9"
															},
															"nativeSrc": "1002:52:9",
															"nodeType": "YulIf",
															"src": "1002:52:9"
														},
														{
															"nativeSrc": "1063:30:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1063:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1083:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1083:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1077:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1077:5:9"
																},
																"nativeSrc": "1077:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1077:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1067:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1067:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1136:16:9",
																"nodeType": "YulBlock",
																"src": "1136:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1145:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1145:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1148:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1148:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1138:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1138:6:9"
																			},
																			"nativeSrc": "1138:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1138:12:9"
																		},
																		"nativeSrc": "1138:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1138:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1108:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1108:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1124:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1124:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1128:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1128:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1120:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1120:3:9"
																				},
																				"nativeSrc": "1120:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1120:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1132:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1132:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1116:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1116:3:9"
																		},
																		"nativeSrc": "1116:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1116:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1105:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1105:2:9"
																},
																"nativeSrc": "1105:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1105:30:9"
															},
															"nativeSrc": "1102:50:9",
															"nodeType": "YulIf",
															"src": "1102:50:9"
														},
														{
															"nativeSrc": "1161:71:9",
															"nodeType": "YulAssignment",
															"src": "1161:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1204:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1204:9:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1215:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1215:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1200:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1200:3:9"
																		},
																		"nativeSrc": "1200:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1200:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1224:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "1224:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1171:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "1171:28:9"
																},
																"nativeSrc": "1171:61:9",
																"nodeType": "YulFunctionCall",
																"src": "1171:61:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1161:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1161:6:9"
																}
															]
														},
														{
															"nativeSrc": "1241:41:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1241:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1267:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1267:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1278:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1278:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1263:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:9"
																		},
																		"nativeSrc": "1263:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1257:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1257:5:9"
																},
																"nativeSrc": "1257:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1257:25:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1245:8:9",
																	"nodeType": "YulTypedName",
																	"src": "1245:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1327:16:9",
																"nodeType": "YulBlock",
																"src": "1327:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1336:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1339:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1329:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:9"
																			},
																			"nativeSrc": "1329:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:9"
																		},
																		"nativeSrc": "1329:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1297:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1297:8:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1315:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1315:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1319:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1319:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1311:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:9"
																				},
																				"nativeSrc": "1311:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1311:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1323:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1323:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1307:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1307:3:9"
																		},
																		"nativeSrc": "1307:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1307:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1294:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1294:2:9"
																},
																"nativeSrc": "1294:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1294:32:9"
															},
															"nativeSrc": "1291:52:9",
															"nodeType": "YulIf",
															"src": "1291:52:9"
														},
														{
															"nativeSrc": "1352:73:9",
															"nodeType": "YulAssignment",
															"src": "1352:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1395:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1395:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1406:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "1406:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1391:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1391:3:9"
																		},
																		"nativeSrc": "1391:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1391:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1417:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "1417:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1362:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "1362:28:9"
																},
																"nativeSrc": "1362:63:9",
																"nodeType": "YulFunctionCall",
																"src": "1362:63:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1352:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "874:557:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "950:9:9",
														"nodeType": "YulTypedName",
														"src": "950:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "961:7:9",
														"nodeType": "YulTypedName",
														"src": "961:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "973:6:9",
														"nodeType": "YulTypedName",
														"src": "973:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "981:6:9",
														"nodeType": "YulTypedName",
														"src": "981:6:9",
														"type": ""
													}
												],
												"src": "874:557:9"
											},
											{
												"body": {
													"nativeSrc": "1491:325:9",
													"nodeType": "YulBlock",
													"src": "1491:325:9",
													"statements": [
														{
															"nativeSrc": "1501:22:9",
															"nodeType": "YulAssignment",
															"src": "1501:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1515:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1515:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1518:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1518:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1511:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:9"
																},
																"nativeSrc": "1511:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1511:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1501:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:9"
																}
															]
														},
														{
															"nativeSrc": "1532:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1532:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1562:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1562:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1568:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1568:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1558:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1558:3:9"
																},
																"nativeSrc": "1558:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1558:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1536:18:9",
																	"nodeType": "YulTypedName",
																	"src": "1536:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1609:31:9",
																"nodeType": "YulBlock",
																"src": "1609:31:9",
																"statements": [
																	{
																		"nativeSrc": "1611:27:9",
																		"nodeType": "YulAssignment",
																		"src": "1611:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1625:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1625:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1633:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1633:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1621:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1621:3:9"
																			},
																			"nativeSrc": "1621:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1621:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1611:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1611:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1589:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1589:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1582:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1582:6:9"
																},
																"nativeSrc": "1582:26:9",
																"nodeType": "YulFunctionCall",
																"src": "1582:26:9"
															},
															"nativeSrc": "1579:61:9",
															"nodeType": "YulIf",
															"src": "1579:61:9"
														},
														{
															"body": {
																"nativeSrc": "1699:111:9",
																"nodeType": "YulBlock",
																"src": "1699:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1727:3:9",
																							"nodeType": "YulLiteral",
																							"src": "1727:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1732:10:9",
																							"nodeType": "YulLiteral",
																							"src": "1732:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1723:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1723:3:9"
																					},
																					"nativeSrc": "1723:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1723:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1713:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:9"
																			},
																			"nativeSrc": "1713:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:31:9"
																		},
																		"nativeSrc": "1713:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1764:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1764:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1767:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1767:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1757:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1757:6:9"
																			},
																			"nativeSrc": "1757:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1757:15:9"
																		},
																		"nativeSrc": "1757:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1757:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1792:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1792:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1795:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1795:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1785:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1785:6:9"
																			},
																			"nativeSrc": "1785:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1785:15:9"
																		},
																		"nativeSrc": "1785:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1785:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1655:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1655:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1678:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1678:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1686:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1686:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1675:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1675:2:9"
																		},
																		"nativeSrc": "1675:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1675:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1652:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1652:2:9"
																},
																"nativeSrc": "1652:38:9",
																"nodeType": "YulFunctionCall",
																"src": "1652:38:9"
															},
															"nativeSrc": "1649:161:9",
															"nodeType": "YulIf",
															"src": "1649:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1436:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1471:4:9",
														"nodeType": "YulTypedName",
														"src": "1471:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1480:6:9",
														"nodeType": "YulTypedName",
														"src": "1480:6:9",
														"type": ""
													}
												],
												"src": "1436:380:9"
											},
											{
												"body": {
													"nativeSrc": "1877:65:9",
													"nodeType": "YulBlock",
													"src": "1877:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1894:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1894:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1897:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1897:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1887:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:9"
																},
																"nativeSrc": "1887:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1887:14:9"
															},
															"nativeSrc": "1887:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "1887:14:9"
														},
														{
															"nativeSrc": "1910:26:9",
															"nodeType": "YulAssignment",
															"src": "1910:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1931:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1931:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1918:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1918:9:9"
																},
																"nativeSrc": "1918:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1918:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1910:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1910:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1821:121:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1860:3:9",
														"nodeType": "YulTypedName",
														"src": "1860:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1868:4:9",
														"nodeType": "YulTypedName",
														"src": "1868:4:9",
														"type": ""
													}
												],
												"src": "1821:121:9"
											},
											{
												"body": {
													"nativeSrc": "2028:437:9",
													"nodeType": "YulBlock",
													"src": "2028:437:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2061:398:9",
																"nodeType": "YulBlock",
																"src": "2061:398:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2082:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2082:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2085:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2085:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2075:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2075:6:9"
																			},
																			"nativeSrc": "2075:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2075:16:9"
																		},
																		"nativeSrc": "2075:16:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2075:16:9"
																	},
																	{
																		"nativeSrc": "2104:30:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2104:30:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2126:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2126:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2129:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2129:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2116:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2116:9:9"
																			},
																			"nativeSrc": "2116:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2116:18:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2108:4:9",
																				"nodeType": "YulTypedName",
																				"src": "2108:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2147:57:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2147:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2170:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "2170:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2180:1:9",
																							"nodeType": "YulLiteral",
																							"src": "2180:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2187:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "2187:10:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2199:2:9",
																									"nodeType": "YulLiteral",
																									"src": "2199:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2183:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2183:3:9"
																							},
																							"nativeSrc": "2183:19:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2183:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2176:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2176:3:9"
																					},
																					"nativeSrc": "2176:27:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2176:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2166:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2166:3:9"
																			},
																			"nativeSrc": "2166:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2166:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2151:11:9",
																				"nodeType": "YulTypedName",
																				"src": "2151:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2241:23:9",
																			"nodeType": "YulBlock",
																			"src": "2241:23:9",
																			"statements": [
																				{
																					"nativeSrc": "2243:19:9",
																					"nodeType": "YulAssignment",
																					"src": "2243:19:9",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2258:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2258:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2243:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "2243:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2223:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "2223:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2235:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2235:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2220:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "2220:2:9"
																			},
																			"nativeSrc": "2220:20:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2220:20:9"
																		},
																		"nativeSrc": "2217:47:9",
																		"nodeType": "YulIf",
																		"src": "2217:47:9"
																	},
																	{
																		"nativeSrc": "2277:41:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2277:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2291:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "2291:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2301:1:9",
																							"nodeType": "YulLiteral",
																							"src": "2301:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2308:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2308:3:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2313:2:9",
																									"nodeType": "YulLiteral",
																									"src": "2313:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2304:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2304:3:9"
																							},
																							"nativeSrc": "2304:12:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2304:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2297:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2297:3:9"
																					},
																					"nativeSrc": "2297:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2297:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2287:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2287:3:9"
																			},
																			"nativeSrc": "2287:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2287:31:9"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2281:2:9",
																				"nodeType": "YulTypedName",
																				"src": "2281:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2331:24:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2331:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2344:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "2344:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2335:5:9",
																				"nodeType": "YulTypedName",
																				"src": "2335:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2429:20:9",
																			"nodeType": "YulBlock",
																			"src": "2429:20:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2438:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "2438:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2445:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2445:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2431:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2431:6:9"
																						},
																						"nativeSrc": "2431:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2431:16:9"
																					},
																					"nativeSrc": "2431:16:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "2431:16:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2379:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2379:5:9"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2386:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "2386:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2376:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "2376:2:9"
																			},
																			"nativeSrc": "2376:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2376:13:9"
																		},
																		"nativeSrc": "2368:81:9",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2390:26:9",
																			"nodeType": "YulBlock",
																			"src": "2390:26:9",
																			"statements": [
																				{
																					"nativeSrc": "2392:22:9",
																					"nodeType": "YulAssignment",
																					"src": "2392:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2405:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "2405:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2412:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2412:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2401:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2401:3:9"
																						},
																						"nativeSrc": "2401:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2401:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2392:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "2392:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2372:3:9",
																			"nodeType": "YulBlock",
																			"src": "2372:3:9",
																			"statements": []
																		},
																		"src": "2368:81:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2044:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2044:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2049:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2049:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2041:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2041:2:9"
																},
																"nativeSrc": "2041:11:9",
																"nodeType": "YulFunctionCall",
																"src": "2041:11:9"
															},
															"nativeSrc": "2038:421:9",
															"nodeType": "YulIf",
															"src": "2038:421:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1947:518:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2000:5:9",
														"nodeType": "YulTypedName",
														"src": "2000:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2007:3:9",
														"nodeType": "YulTypedName",
														"src": "2007:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2012:10:9",
														"nodeType": "YulTypedName",
														"src": "2012:10:9",
														"type": ""
													}
												],
												"src": "1947:518:9"
											},
											{
												"body": {
													"nativeSrc": "2555:81:9",
													"nodeType": "YulBlock",
													"src": "2555:81:9",
													"statements": [
														{
															"nativeSrc": "2565:65:9",
															"nodeType": "YulAssignment",
															"src": "2565:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2580:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2580:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2598:1:9",
																										"nodeType": "YulLiteral",
																										"src": "2598:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2601:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "2601:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2594:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2594:3:9"
																								},
																								"nativeSrc": "2594:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2594:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2611:1:9",
																										"nodeType": "YulLiteral",
																										"src": "2611:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2607:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2607:3:9"
																								},
																								"nativeSrc": "2607:6:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2607:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2590:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2590:3:9"
																						},
																						"nativeSrc": "2590:24:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2590:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2586:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2586:3:9"
																				},
																				"nativeSrc": "2586:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2586:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2576:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:9"
																		},
																		"nativeSrc": "2576:40:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2576:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2622:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2622:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2625:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2625:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2618:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2618:3:9"
																		},
																		"nativeSrc": "2618:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2618:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2573:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2573:2:9"
																},
																"nativeSrc": "2573:57:9",
																"nodeType": "YulFunctionCall",
																"src": "2573:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2565:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2565:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2470:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2532:4:9",
														"nodeType": "YulTypedName",
														"src": "2532:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2538:3:9",
														"nodeType": "YulTypedName",
														"src": "2538:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2546:4:9",
														"nodeType": "YulTypedName",
														"src": "2546:4:9",
														"type": ""
													}
												],
												"src": "2470:166:9"
											},
											{
												"body": {
													"nativeSrc": "2737:1203:9",
													"nodeType": "YulBlock",
													"src": "2737:1203:9",
													"statements": [
														{
															"nativeSrc": "2747:24:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2747:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2767:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2767:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2761:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2761:5:9"
																},
																"nativeSrc": "2761:10:9",
																"nodeType": "YulFunctionCall",
																"src": "2761:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2751:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2751:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2814:22:9",
																"nodeType": "YulBlock",
																"src": "2814:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2816:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2816:16:9"
																			},
																			"nativeSrc": "2816:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2816:18:9"
																		},
																		"nativeSrc": "2816:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2816:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2786:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2786:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2802:2:9",
																						"nodeType": "YulLiteral",
																						"src": "2802:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2806:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2806:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2798:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2798:3:9"
																				},
																				"nativeSrc": "2798:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2798:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2810:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2810:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2794:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2794:3:9"
																		},
																		"nativeSrc": "2794:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2794:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2783:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2783:2:9"
																},
																"nativeSrc": "2783:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2783:30:9"
															},
															"nativeSrc": "2780:56:9",
															"nodeType": "YulIf",
															"src": "2780:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2889:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2889:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2927:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2927:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2921:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2921:5:9"
																				},
																				"nativeSrc": "2921:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2921:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2895:25:9",
																			"nodeType": "YulIdentifier",
																			"src": "2895:25:9"
																		},
																		"nativeSrc": "2895:38:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:38:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2935:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2845:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2845:43:9"
																},
																"nativeSrc": "2845:97:9",
																"nodeType": "YulFunctionCall",
																"src": "2845:97:9"
															},
															"nativeSrc": "2845:97:9",
															"nodeType": "YulExpressionStatement",
															"src": "2845:97:9"
														},
														{
															"nativeSrc": "2951:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2951:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2968:1:9",
																"nodeType": "YulLiteral",
																"src": "2968:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2955:9:9",
																	"nodeType": "YulTypedName",
																	"src": "2955:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2978:17:9",
															"nodeType": "YulAssignment",
															"src": "2978:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2991:4:9",
																"nodeType": "YulLiteral",
																"src": "2991:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2978:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2978:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3041:642:9",
																		"nodeType": "YulBlock",
																		"src": "3041:642:9",
																		"statements": [
																			{
																				"nativeSrc": "3055:35:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3055:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3074:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "3074:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3086:2:9",
																									"nodeType": "YulLiteral",
																									"src": "3086:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3082:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "3082:3:9"
																							},
																							"nativeSrc": "3082:7:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3082:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3070:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3070:3:9"
																					},
																					"nativeSrc": "3070:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3070:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3059:7:9",
																						"nodeType": "YulTypedName",
																						"src": "3059:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3103:49:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3103:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3147:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "3147:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3117:29:9",
																						"nodeType": "YulIdentifier",
																						"src": "3117:29:9"
																					},
																					"nativeSrc": "3117:35:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3117:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3107:6:9",
																						"nodeType": "YulTypedName",
																						"src": "3107:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3165:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3165:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3174:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3169:1:9",
																						"nodeType": "YulTypedName",
																						"src": "3169:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3245:165:9",
																					"nodeType": "YulBlock",
																					"src": "3245:165:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3270:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "3270:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3288:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "3288:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3293:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "3293:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3284:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "3284:3:9"
																												},
																												"nativeSrc": "3284:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "3284:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3278:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "3278:5:9"
																										},
																										"nativeSrc": "3278:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "3278:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3263:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "3263:6:9"
																								},
																								"nativeSrc": "3263:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3263:42:9"
																							},
																							"nativeSrc": "3263:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "3263:42:9"
																						},
																						{
																							"nativeSrc": "3322:24:9",
																							"nodeType": "YulAssignment",
																							"src": "3322:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3336:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "3336:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3344:1:9",
																										"nodeType": "YulLiteral",
																										"src": "3344:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3332:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3332:3:9"
																								},
																								"nativeSrc": "3332:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3332:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3322:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "3322:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3363:33:9",
																							"nodeType": "YulAssignment",
																							"src": "3363:33:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3380:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "3380:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3391:4:9",
																										"nodeType": "YulLiteral",
																										"src": "3391:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3376:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3376:3:9"
																								},
																								"nativeSrc": "3376:20:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3376:20:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3363:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "3363:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3199:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "3199:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3202:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "3202:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3196:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "3196:2:9"
																					},
																					"nativeSrc": "3196:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3196:14:9"
																				},
																				"nativeSrc": "3188:222:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3211:21:9",
																					"nodeType": "YulBlock",
																					"src": "3211:21:9",
																					"statements": [
																						{
																							"nativeSrc": "3213:17:9",
																							"nodeType": "YulAssignment",
																							"src": "3213:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3222:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "3222:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3225:4:9",
																										"nodeType": "YulLiteral",
																										"src": "3225:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3218:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3218:3:9"
																								},
																								"nativeSrc": "3218:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3218:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3213:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "3213:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3192:3:9",
																					"nodeType": "YulBlock",
																					"src": "3192:3:9",
																					"statements": []
																				},
																				"src": "3188:222:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "3458:166:9",
																					"nodeType": "YulBlock",
																					"src": "3458:166:9",
																					"statements": [
																						{
																							"nativeSrc": "3476:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3476:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3503:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "3503:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3508:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "3508:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3499:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "3499:3:9"
																										},
																										"nativeSrc": "3499:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "3499:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3493:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "3493:5:9"
																								},
																								"nativeSrc": "3493:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3493:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3480:9:9",
																									"nodeType": "YulTypedName",
																									"src": "3480:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3543:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "3543:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3555:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "3555:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3582:1:9",
																																				"nodeType": "YulLiteral",
																																				"src": "3582:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3585:6:9",
																																				"nodeType": "YulIdentifier",
																																				"src": "3585:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3578:3:9",
																																			"nodeType": "YulIdentifier",
																																			"src": "3578:3:9"
																																		},
																																		"nativeSrc": "3578:14:9",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3578:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3594:3:9",
																																		"nodeType": "YulLiteral",
																																		"src": "3594:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3574:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "3574:3:9"
																																},
																																"nativeSrc": "3574:24:9",
																																"nodeType": "YulFunctionCall",
																																"src": "3574:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3604:1:9",
																																		"nodeType": "YulLiteral",
																																		"src": "3604:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3600:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "3600:3:9"
																																},
																																"nativeSrc": "3600:6:9",
																																"nodeType": "YulFunctionCall",
																																"src": "3600:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3570:3:9",
																															"nodeType": "YulIdentifier",
																															"src": "3570:3:9"
																														},
																														"nativeSrc": "3570:37:9",
																														"nodeType": "YulFunctionCall",
																														"src": "3570:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3566:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "3566:3:9"
																												},
																												"nativeSrc": "3566:42:9",
																												"nodeType": "YulFunctionCall",
																												"src": "3566:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3551:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "3551:3:9"
																										},
																										"nativeSrc": "3551:58:9",
																										"nodeType": "YulFunctionCall",
																										"src": "3551:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3536:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "3536:6:9"
																								},
																								"nativeSrc": "3536:74:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3536:74:9"
																							},
																							"nativeSrc": "3536:74:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "3536:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3429:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "3429:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3438:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "3438:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3426:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "3426:2:9"
																					},
																					"nativeSrc": "3426:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3426:19:9"
																				},
																				"nativeSrc": "3423:201:9",
																				"nodeType": "YulIf",
																				"src": "3423:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3644:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "3644:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3658:1:9",
																											"nodeType": "YulLiteral",
																											"src": "3658:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3661:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "3661:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3654:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "3654:3:9"
																									},
																									"nativeSrc": "3654:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "3654:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3670:1:9",
																									"nodeType": "YulLiteral",
																									"src": "3670:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3650:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "3650:3:9"
																							},
																							"nativeSrc": "3650:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3650:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3637:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3637:6:9"
																					},
																					"nativeSrc": "3637:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3637:36:9"
																				},
																				"nativeSrc": "3637:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3637:36:9"
																			}
																		]
																	},
																	"nativeSrc": "3034:649:9",
																	"nodeType": "YulCase",
																	"src": "3034:649:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3039:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3039:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3700:234:9",
																		"nodeType": "YulBlock",
																		"src": "3700:234:9",
																		"statements": [
																			{
																				"nativeSrc": "3714:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3714:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3727:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3727:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3718:5:9",
																						"nodeType": "YulTypedName",
																						"src": "3718:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3763:67:9",
																					"nodeType": "YulBlock",
																					"src": "3763:67:9",
																					"statements": [
																						{
																							"nativeSrc": "3781:35:9",
																							"nodeType": "YulAssignment",
																							"src": "3781:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3800:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "3800:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3805:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "3805:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3796:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "3796:3:9"
																										},
																										"nativeSrc": "3796:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "3796:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3790:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "3790:5:9"
																								},
																								"nativeSrc": "3790:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3790:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3781:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "3781:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3744:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3744:6:9"
																				},
																				"nativeSrc": "3741:89:9",
																				"nodeType": "YulIf",
																				"src": "3741:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3850:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "3850:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3909:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "3909:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3916:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "3916:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3856:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "3856:52:9"
																							},
																							"nativeSrc": "3856:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3856:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3843:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:9"
																					},
																					"nativeSrc": "3843:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3843:81:9"
																				},
																				"nativeSrc": "3843:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3843:81:9"
																			}
																		]
																	},
																	"nativeSrc": "3692:242:9",
																	"nodeType": "YulCase",
																	"src": "3692:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3014:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3014:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3022:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3022:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3011:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3011:2:9"
																},
																"nativeSrc": "3011:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3011:14:9"
															},
															"nativeSrc": "3004:930:9",
															"nodeType": "YulSwitch",
															"src": "3004:930:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2641:1299:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2722:4:9",
														"nodeType": "YulTypedName",
														"src": "2722:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2728:3:9",
														"nodeType": "YulTypedName",
														"src": "2728:3:9",
														"type": ""
													}
												],
												"src": "2641:1299:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051610ab6380380610ab683398101604081905261002e916100ec565b600361003a83826101d5565b50600461004782826101d5565b50505061028f565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610072575f5ffd5b81516001600160401b0381111561008b5761008b61004f565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100b9576100b961004f565b6040528181528382016020018510156100d0575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f604083850312156100fd575f5ffd5b82516001600160401b03811115610112575f5ffd5b61011e85828601610063565b602085015190935090506001600160401b0381111561013b575f5ffd5b61014785828601610063565b9150509250929050565b600181811c9082168061016557607f821691505b60208210810361018357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101d057805f5260205f20601f840160051c810160208510156101ae5750805b601f840160051c820191505b818110156101cd575f81556001016101ba565b50505b505050565b81516001600160401b038111156101ee576101ee61004f565b610202816101fc8454610151565b84610189565b6020601f821160018114610234575f831561021d5750848201515b5f19600385901b1c1916600184901b1784556101cd565b5f84815260208120601f198516915b828110156102635787850151825560209485019460019092019101610243565b508482101561028057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b61081a8061029c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106da565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610702565b610244565b604051601281526020016100bf565b6100db61012d3660046106da565b610267565b6100ef61014036600461073c565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106da565b610297565b6100db6101833660046106da565b610316565b6100ef61019636600461075c565b610323565b6060600380546101aa9061078d565b80601f01602080910402602001604051908101604052809291908181526020018280546101d69061078d565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107c5565b61034d565b6060600480546101aa9061078d565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106d5575f5ffd5b919050565b5f5f604083850312156106eb575f5ffd5b6106f4836106bf565b946020939093013593505050565b5f5f5f60608486031215610714575f5ffd5b61071d846106bf565b925061072b602085016106bf565b929592945050506040919091013590565b5f6020828403121561074c575f5ffd5b610755826106bf565b9392505050565b5f5f6040838503121561076d575f5ffd5b610776836106bf565b9150610784602084016106bf565b90509250929050565b600181811c908216806107a157607f821691505b6020821081036107bf57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220fb984a3ba8d1f4637996889a03c2281225f0dcca42513e601f0d8ec3bf3f137964736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAB6 CODESIZE SUB DUP1 PUSH2 0xAB6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEC JUMP JUMPDEST PUSH1 0x3 PUSH2 0x3A DUP4 DUP3 PUSH2 0x1D5 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x47 DUP3 DUP3 PUSH2 0x1D5 JUMP JUMPDEST POP POP POP PUSH2 0x28F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x72 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8B JUMPI PUSH2 0x8B PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB9 JUMPI PUSH2 0xB9 PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xD0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x112 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11E DUP6 DUP3 DUP7 ADD PUSH2 0x63 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x147 DUP6 DUP3 DUP7 ADD PUSH2 0x63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x165 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x183 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D0 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1AE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH2 0x1EE PUSH2 0x4F JUMP JUMPDEST PUSH2 0x202 DUP2 PUSH2 0x1FC DUP5 SLOAD PUSH2 0x151 JUMP JUMPDEST DUP5 PUSH2 0x189 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x234 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x21D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1CD JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x263 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x243 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x280 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x81A DUP1 PUSH2 0x29C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x71D DUP5 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP PUSH2 0x72B PUSH1 0x20 DUP6 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x755 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x776 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH2 0x784 PUSH1 0x20 DUP5 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB SWAP9 BLOBBASEFEE EXTCODESIZE 0xA8 0xD1 DELEGATECALL PUSH4 0x7996889A SUB 0xC2 0x28 SLT 0x25 CREATE 0xDC 0xCA TIMESTAMP MLOAD RETURNDATACOPY PUSH1 0x1F 0xD DUP15 0xC3 0xBF EXTCODEHASH SGT PUSH26 0x64736F6C634300081C0033000000000000000000000000000000 ",
							"sourceMap": "1532:11312:2:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:9;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:9;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:9;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:9;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:9;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:9:o;874:557::-;973:6;981;1034:2;1022:9;1013:7;1009:23;1005:32;1002:52;;;1050:1;1047;1040:12;1002:52;1077:16;;-1:-1:-1;;;;;1105:30:9;;1102:50;;;1148:1;1145;1138:12;1102:50;1171:61;1224:7;1215:6;1204:9;1200:22;1171:61;:::i;:::-;1278:2;1263:18;;1257:25;1161:71;;-1:-1:-1;1257:25:9;-1:-1:-1;;;;;;1294:32:9;;1291:52;;;1339:1;1336;1329:12;1291:52;1362:63;1417:7;1406:8;1395:9;1391:24;1362:63;:::i;:::-;1352:73;;;874:557;;;;;:::o;1436:380::-;1515:1;1511:12;;;;1558;;;1579:61;;1633:4;1625:6;1621:17;1611:27;;1579:61;1686:2;1678:6;1675:14;1655:18;1652:38;1649:161;;1732:10;1727:3;1723:20;1720:1;1713:31;1767:4;1764:1;1757:15;1795:4;1792:1;1785:15;1649:161;;1436:380;;;:::o;1947:518::-;2049:2;2044:3;2041:11;2038:421;;;2085:5;2082:1;2075:16;2129:4;2126:1;2116:18;2199:2;2187:10;2183:19;2180:1;2176:27;2170:4;2166:38;2235:4;2223:10;2220:20;2217:47;;;-1:-1:-1;2258:4:9;2217:47;2313:2;2308:3;2304:12;2301:1;2297:20;2291:4;2287:31;2277:41;;2368:81;2386:2;2379:5;2376:13;2368:81;;;2445:1;2431:16;;2412:1;2401:13;2368:81;;;2372:3;;2038:421;1947:518;;;:::o;2641:1299::-;2761:10;;-1:-1:-1;;;;;2783:30:9;;2780:56;;;2816:18;;:::i;:::-;2845:97;2935:6;2895:38;2927:4;2921:11;2895:38;:::i;:::-;2889:4;2845:97;:::i;:::-;2991:4;3022:2;3011:14;;3039:1;3034:649;;;;3727:1;3744:6;3741:89;;;-1:-1:-1;3796:19:9;;;3790:26;3741:89;-1:-1:-1;;2598:1:9;2594:11;;;2590:24;2586:29;2576:40;2622:1;2618:11;;;2573:57;3843:81;;3004:930;;3034:649;1894:1;1887:14;;;1931:4;1918:18;;-1:-1:-1;;3070:20:9;;;3188:222;3202:7;3199:1;3196:14;3188:222;;;3284:19;;;3278:26;3263:42;;3391:4;3376:20;;;;3344:1;3332:14;;;;3218:12;3188:222;;;3192:3;3438:6;3429:7;3426:19;3423:201;;;3499:19;;;3493:26;-1:-1:-1;;3582:1:9;3578:14;;;3594:3;3574:24;3570:37;3566:42;3551:58;3536:74;;3423:201;-1:-1:-1;;;;3670:1:9;3654:14;;;3650:22;3637:36;;-1:-1:-1;2641:1299:9:o;:::-;1532:11312:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_925": {
									"entryPoint": null,
									"id": 925,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_860": {
									"entryPoint": 845,
									"id": 860,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_914": {
									"entryPoint": null,
									"id": 914,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1783": {
									"entryPoint": null,
									"id": 1783,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_903": {
									"entryPoint": 1136,
									"id": 903,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_686": {
									"entryPoint": 1256,
									"id": 686,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_481": {
									"entryPoint": 803,
									"id": 481,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_506": {
									"entryPoint": 555,
									"id": 506,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_414": {
									"entryPoint": null,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_609": {
									"entryPoint": 663,
									"id": 609,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_568": {
									"entryPoint": 615,
									"id": 568,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_394": {
									"entryPoint": 411,
									"id": 394,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_404": {
									"entryPoint": 648,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_424": {
									"entryPoint": null,
									"id": 424,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_539": {
									"entryPoint": 580,
									"id": 539,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_463": {
									"entryPoint": 790,
									"id": 463,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5716:9",
										"nodeType": "YulBlock",
										"src": "0:5716:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:9",
													"nodeType": "YulBlock",
													"src": "135:297:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:9",
																		"nodeType": "YulLiteral",
																		"src": "163:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:9"
																},
																"nativeSrc": "145:21:9",
																"nodeType": "YulFunctionCall",
																"src": "145:21:9"
															},
															"nativeSrc": "145:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:9"
														},
														{
															"nativeSrc": "175:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:9"
																},
																"nativeSrc": "189:13:9",
																"nodeType": "YulFunctionCall",
																"src": "189:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:9",
																	"nodeType": "YulTypedName",
																	"src": "179:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:9",
																				"nodeType": "YulLiteral",
																				"src": "233:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:9"
																		},
																		"nativeSrc": "218:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:9"
																},
																"nativeSrc": "211:34:9",
																"nodeType": "YulFunctionCall",
																"src": "211:34:9"
															},
															"nativeSrc": "211:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:9",
																				"nodeType": "YulLiteral",
																				"src": "275:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:9"
																		},
																		"nativeSrc": "260:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:9",
																				"nodeType": "YulLiteral",
																				"src": "292:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:9"
																		},
																		"nativeSrc": "280:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:9"
																},
																"nativeSrc": "254:50:9",
																"nodeType": "YulFunctionCall",
																"src": "254:50:9"
															},
															"nativeSrc": "254:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:9"
																				},
																				"nativeSrc": "324:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:9",
																				"nodeType": "YulLiteral",
																				"src": "348:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:9"
																		},
																		"nativeSrc": "320:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:9",
																		"nodeType": "YulLiteral",
																		"src": "353:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:9"
																},
																"nativeSrc": "313:42:9",
																"nodeType": "YulFunctionCall",
																"src": "313:42:9"
															},
															"nativeSrc": "313:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:9"
														},
														{
															"nativeSrc": "364:62:9",
															"nodeType": "YulAssignment",
															"src": "364:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:9",
																								"nodeType": "YulLiteral",
																								"src": "407:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:9"
																						},
																						"nativeSrc": "395:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:9",
																								"nodeType": "YulLiteral",
																								"src": "416:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:9"
																						},
																						"nativeSrc": "412:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:9"
																				},
																				"nativeSrc": "391:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:9"
																		},
																		"nativeSrc": "376:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:9",
																		"nodeType": "YulLiteral",
																		"src": "423:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:9"
																},
																"nativeSrc": "372:54:9",
																"nodeType": "YulFunctionCall",
																"src": "372:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:9",
														"nodeType": "YulTypedName",
														"src": "104:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:9",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:9",
														"nodeType": "YulTypedName",
														"src": "126:4:9",
														"type": ""
													}
												],
												"src": "14:418:9"
											},
											{
												"body": {
													"nativeSrc": "486:124:9",
													"nodeType": "YulBlock",
													"src": "486:124:9",
													"statements": [
														{
															"nativeSrc": "496:29:9",
															"nodeType": "YulAssignment",
															"src": "496:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:9"
																},
																"nativeSrc": "505:20:9",
																"nodeType": "YulFunctionCall",
																"src": "505:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:9",
																"nodeType": "YulBlock",
																"src": "588:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:9",
																					"nodeType": "YulLiteral",
																					"src": "597:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:9",
																					"nodeType": "YulLiteral",
																					"src": "600:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:9"
																			},
																			"nativeSrc": "590:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:9"
																		},
																		"nativeSrc": "590:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:9",
																										"nodeType": "YulLiteral",
																										"src": "573:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:9",
																										"nodeType": "YulLiteral",
																										"src": "578:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:9"
																								},
																								"nativeSrc": "569:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:9",
																								"nodeType": "YulLiteral",
																								"src": "582:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:9"
																						},
																						"nativeSrc": "565:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:9"
																				},
																				"nativeSrc": "554:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:9"
																		},
																		"nativeSrc": "544:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:9"
																},
																"nativeSrc": "537:50:9",
																"nodeType": "YulFunctionCall",
																"src": "537:50:9"
															},
															"nativeSrc": "534:70:9",
															"nodeType": "YulIf",
															"src": "534:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:9",
														"nodeType": "YulTypedName",
														"src": "465:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:9",
														"nodeType": "YulTypedName",
														"src": "476:5:9",
														"type": ""
													}
												],
												"src": "437:173:9"
											},
											{
												"body": {
													"nativeSrc": "702:213:9",
													"nodeType": "YulBlock",
													"src": "702:213:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:9",
																"nodeType": "YulBlock",
																"src": "748:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:9",
																					"nodeType": "YulLiteral",
																					"src": "757:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:9",
																					"nodeType": "YulLiteral",
																					"src": "760:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:9"
																			},
																			"nativeSrc": "750:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:9"
																		},
																		"nativeSrc": "750:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:9"
																		},
																		"nativeSrc": "719:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:9",
																		"nodeType": "YulLiteral",
																		"src": "744:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:9"
																},
																"nativeSrc": "715:32:9",
																"nodeType": "YulFunctionCall",
																"src": "715:32:9"
															},
															"nativeSrc": "712:52:9",
															"nodeType": "YulIf",
															"src": "712:52:9"
														},
														{
															"nativeSrc": "773:39:9",
															"nodeType": "YulAssignment",
															"src": "773:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:9"
																},
																"nativeSrc": "783:29:9",
																"nodeType": "YulFunctionCall",
																"src": "783:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:9"
																}
															]
														},
														{
															"nativeSrc": "821:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:9",
																"nodeType": "YulLiteral",
																"src": "834:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:9",
																	"nodeType": "YulTypedName",
																	"src": "825:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:9",
															"nodeType": "YulAssignment",
															"src": "844:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:9",
																				"nodeType": "YulLiteral",
																				"src": "881:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:9"
																		},
																		"nativeSrc": "866:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:9"
																},
																"nativeSrc": "853:32:9",
																"nodeType": "YulFunctionCall",
																"src": "853:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:9"
																}
															]
														},
														{
															"nativeSrc": "894:15:9",
															"nodeType": "YulAssignment",
															"src": "894:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:9",
																"nodeType": "YulIdentifier",
																"src": "904:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:9",
														"nodeType": "YulTypedName",
														"src": "660:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:9",
														"nodeType": "YulTypedName",
														"src": "671:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:9",
														"nodeType": "YulTypedName",
														"src": "683:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:9",
														"nodeType": "YulTypedName",
														"src": "691:6:9",
														"type": ""
													}
												],
												"src": "615:300:9"
											},
											{
												"body": {
													"nativeSrc": "1015:92:9",
													"nodeType": "YulBlock",
													"src": "1015:92:9",
													"statements": [
														{
															"nativeSrc": "1025:26:9",
															"nodeType": "YulAssignment",
															"src": "1025:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:9"
																},
																"nativeSrc": "1033:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:9"
																				},
																				"nativeSrc": "1085:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:9"
																		},
																		"nativeSrc": "1078:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:9"
																},
																"nativeSrc": "1060:41:9",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:9"
															},
															"nativeSrc": "1060:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:9",
														"nodeType": "YulTypedName",
														"src": "984:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:9",
														"nodeType": "YulTypedName",
														"src": "995:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:9",
														"nodeType": "YulTypedName",
														"src": "1006:4:9",
														"type": ""
													}
												],
												"src": "920:187:9"
											},
											{
												"body": {
													"nativeSrc": "1213:76:9",
													"nodeType": "YulBlock",
													"src": "1213:76:9",
													"statements": [
														{
															"nativeSrc": "1223:26:9",
															"nodeType": "YulAssignment",
															"src": "1223:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:9"
																},
																"nativeSrc": "1231:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:9"
																},
																"nativeSrc": "1258:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:9"
															},
															"nativeSrc": "1258:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:9",
														"nodeType": "YulTypedName",
														"src": "1182:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:9",
														"nodeType": "YulTypedName",
														"src": "1193:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:9",
														"nodeType": "YulTypedName",
														"src": "1204:4:9",
														"type": ""
													}
												],
												"src": "1112:177:9"
											},
											{
												"body": {
													"nativeSrc": "1398:270:9",
													"nodeType": "YulBlock",
													"src": "1398:270:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:9",
																"nodeType": "YulBlock",
																"src": "1444:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:9"
																			},
																			"nativeSrc": "1446:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:9"
																		},
																		"nativeSrc": "1446:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:9"
																		},
																		"nativeSrc": "1415:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:9"
																},
																"nativeSrc": "1411:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:9"
															},
															"nativeSrc": "1408:52:9",
															"nodeType": "YulIf",
															"src": "1408:52:9"
														},
														{
															"nativeSrc": "1469:39:9",
															"nodeType": "YulAssignment",
															"src": "1469:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:9"
																},
																"nativeSrc": "1479:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:9"
																}
															]
														},
														{
															"nativeSrc": "1517:48:9",
															"nodeType": "YulAssignment",
															"src": "1517:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:9"
																		},
																		"nativeSrc": "1546:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:9"
																},
																"nativeSrc": "1527:38:9",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:9"
																}
															]
														},
														{
															"nativeSrc": "1574:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:9",
																"nodeType": "YulLiteral",
																"src": "1587:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:9",
															"nodeType": "YulAssignment",
															"src": "1597:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:9"
																		},
																		"nativeSrc": "1619:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:9"
																},
																"nativeSrc": "1606:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:9"
																}
															]
														},
														{
															"nativeSrc": "1647:15:9",
															"nodeType": "YulAssignment",
															"src": "1647:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:9",
																"nodeType": "YulIdentifier",
																"src": "1657:5:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:9",
														"nodeType": "YulTypedName",
														"src": "1348:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:9",
														"nodeType": "YulTypedName",
														"src": "1359:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:9",
														"nodeType": "YulTypedName",
														"src": "1371:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:9",
														"nodeType": "YulTypedName",
														"src": "1379:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:9",
														"nodeType": "YulTypedName",
														"src": "1387:6:9",
														"type": ""
													}
												],
												"src": "1294:374:9"
											},
											{
												"body": {
													"nativeSrc": "1770:87:9",
													"nodeType": "YulBlock",
													"src": "1770:87:9",
													"statements": [
														{
															"nativeSrc": "1780:26:9",
															"nodeType": "YulAssignment",
															"src": "1780:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:9"
																},
																"nativeSrc": "1788:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:9"
																		},
																		"nativeSrc": "1833:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:9"
																},
																"nativeSrc": "1815:36:9",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:9"
															},
															"nativeSrc": "1815:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:9",
														"nodeType": "YulTypedName",
														"src": "1739:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:9",
														"nodeType": "YulTypedName",
														"src": "1750:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:9",
														"nodeType": "YulTypedName",
														"src": "1761:4:9",
														"type": ""
													}
												],
												"src": "1673:184:9"
											},
											{
												"body": {
													"nativeSrc": "1932:116:9",
													"nodeType": "YulBlock",
													"src": "1932:116:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:9",
																"nodeType": "YulBlock",
																"src": "1978:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:9"
																			},
																			"nativeSrc": "1980:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:9"
																		},
																		"nativeSrc": "1980:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:9"
																		},
																		"nativeSrc": "1949:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:9"
																},
																"nativeSrc": "1945:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:9"
															},
															"nativeSrc": "1942:52:9",
															"nodeType": "YulIf",
															"src": "1942:52:9"
														},
														{
															"nativeSrc": "2003:39:9",
															"nodeType": "YulAssignment",
															"src": "2003:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:9"
																},
																"nativeSrc": "2013:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:9",
														"nodeType": "YulTypedName",
														"src": "1898:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:9",
														"nodeType": "YulTypedName",
														"src": "1909:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:9",
														"nodeType": "YulTypedName",
														"src": "1921:6:9",
														"type": ""
													}
												],
												"src": "1862:186:9"
											},
											{
												"body": {
													"nativeSrc": "2140:173:9",
													"nodeType": "YulBlock",
													"src": "2140:173:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:9",
																"nodeType": "YulBlock",
																"src": "2186:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:9"
																			},
																			"nativeSrc": "2188:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:9"
																		},
																		"nativeSrc": "2188:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:9"
																		},
																		"nativeSrc": "2157:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:9"
																},
																"nativeSrc": "2153:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:9"
															},
															"nativeSrc": "2150:52:9",
															"nodeType": "YulIf",
															"src": "2150:52:9"
														},
														{
															"nativeSrc": "2211:39:9",
															"nodeType": "YulAssignment",
															"src": "2211:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:9"
																},
																"nativeSrc": "2221:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:9"
																}
															]
														},
														{
															"nativeSrc": "2259:48:9",
															"nodeType": "YulAssignment",
															"src": "2259:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2303:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2303:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2288:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:9"
																		},
																		"nativeSrc": "2288:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2269:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2269:18:9"
																},
																"nativeSrc": "2269:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2269:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2259:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2053:260:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2098:9:9",
														"nodeType": "YulTypedName",
														"src": "2098:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2109:7:9",
														"nodeType": "YulTypedName",
														"src": "2109:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2121:6:9",
														"nodeType": "YulTypedName",
														"src": "2121:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2129:6:9",
														"nodeType": "YulTypedName",
														"src": "2129:6:9",
														"type": ""
													}
												],
												"src": "2053:260:9"
											},
											{
												"body": {
													"nativeSrc": "2373:325:9",
													"nodeType": "YulBlock",
													"src": "2373:325:9",
													"statements": [
														{
															"nativeSrc": "2383:22:9",
															"nodeType": "YulAssignment",
															"src": "2383:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2397:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2400:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2400:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2393:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:9"
																},
																"nativeSrc": "2393:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2393:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2383:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:9"
																}
															]
														},
														{
															"nativeSrc": "2414:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2414:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2444:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2444:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2440:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:9"
																},
																"nativeSrc": "2440:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2440:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2418:18:9",
																	"nodeType": "YulTypedName",
																	"src": "2418:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:31:9",
																"nodeType": "YulBlock",
																"src": "2491:31:9",
																"statements": [
																	{
																		"nativeSrc": "2493:27:9",
																		"nodeType": "YulAssignment",
																		"src": "2493:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2507:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2507:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2515:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2503:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:9"
																			},
																			"nativeSrc": "2503:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2493:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2471:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2471:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2464:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:9"
																},
																"nativeSrc": "2464:26:9",
																"nodeType": "YulFunctionCall",
																"src": "2464:26:9"
															},
															"nativeSrc": "2461:61:9",
															"nodeType": "YulIf",
															"src": "2461:61:9"
														},
														{
															"body": {
																"nativeSrc": "2581:111:9",
																"nodeType": "YulBlock",
																"src": "2581:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2602:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2609:3:9",
																							"nodeType": "YulLiteral",
																							"src": "2609:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2614:10:9",
																							"nodeType": "YulLiteral",
																							"src": "2614:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2605:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:9"
																					},
																					"nativeSrc": "2605:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2605:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2595:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2595:6:9"
																			},
																			"nativeSrc": "2595:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2595:31:9"
																		},
																		"nativeSrc": "2595:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2646:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2649:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2649:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2639:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:9"
																			},
																			"nativeSrc": "2639:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2639:15:9"
																		},
																		"nativeSrc": "2639:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2677:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2677:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2667:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:9"
																			},
																			"nativeSrc": "2667:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:15:9"
																		},
																		"nativeSrc": "2667:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2537:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2537:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2560:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2560:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2568:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2557:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:9"
																		},
																		"nativeSrc": "2557:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2534:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:9"
																},
																"nativeSrc": "2534:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2534:38:9"
															},
															"nativeSrc": "2531:161:9",
															"nodeType": "YulIf",
															"src": "2531:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2318:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2353:4:9",
														"nodeType": "YulTypedName",
														"src": "2353:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2362:6:9",
														"nodeType": "YulTypedName",
														"src": "2362:6:9",
														"type": ""
													}
												],
												"src": "2318:380:9"
											},
											{
												"body": {
													"nativeSrc": "2751:174:9",
													"nodeType": "YulBlock",
													"src": "2751:174:9",
													"statements": [
														{
															"nativeSrc": "2761:16:9",
															"nodeType": "YulAssignment",
															"src": "2761:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2772:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2772:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2775:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2775:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2768:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:9"
																},
																"nativeSrc": "2768:9:9",
																"nodeType": "YulFunctionCall",
																"src": "2768:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2761:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2808:111:9",
																"nodeType": "YulBlock",
																"src": "2808:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2829:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2836:3:9",
																							"nodeType": "YulLiteral",
																							"src": "2836:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2841:10:9",
																							"nodeType": "YulLiteral",
																							"src": "2841:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2832:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2832:3:9"
																					},
																					"nativeSrc": "2832:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2832:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2822:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2822:6:9"
																			},
																			"nativeSrc": "2822:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:31:9"
																		},
																		"nativeSrc": "2822:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2822:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2873:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2873:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2876:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2876:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2866:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2866:6:9"
																			},
																			"nativeSrc": "2866:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2866:15:9"
																		},
																		"nativeSrc": "2866:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2866:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2901:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2904:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2904:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2894:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:9"
																			},
																			"nativeSrc": "2894:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2894:15:9"
																		},
																		"nativeSrc": "2894:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2792:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2792:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2795:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2795:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2789:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2789:2:9"
																},
																"nativeSrc": "2789:10:9",
																"nodeType": "YulFunctionCall",
																"src": "2789:10:9"
															},
															"nativeSrc": "2786:133:9",
															"nodeType": "YulIf",
															"src": "2786:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2703:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2734:1:9",
														"nodeType": "YulTypedName",
														"src": "2734:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2737:1:9",
														"nodeType": "YulTypedName",
														"src": "2737:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2743:3:9",
														"nodeType": "YulTypedName",
														"src": "2743:3:9",
														"type": ""
													}
												],
												"src": "2703:222:9"
											},
											{
												"body": {
													"nativeSrc": "3104:227:9",
													"nodeType": "YulBlock",
													"src": "3104:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3121:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:9"
																},
																"nativeSrc": "3114:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3114:21:9"
															},
															"nativeSrc": "3114:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3114:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3155:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3155:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3166:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3166:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3151:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:9"
																		},
																		"nativeSrc": "3151:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3171:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3171:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3144:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:9"
																},
																"nativeSrc": "3144:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3144:30:9"
															},
															"nativeSrc": "3144:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3144:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3194:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3205:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3190:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:9"
																		},
																		"nativeSrc": "3190:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3190:18:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3210:34:9",
																		"nodeType": "YulLiteral",
																		"src": "3210:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3183:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:9"
																},
																"nativeSrc": "3183:62:9",
																"nodeType": "YulFunctionCall",
																"src": "3183:62:9"
															},
															"nativeSrc": "3183:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "3183:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3265:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3276:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3276:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3261:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:9"
																		},
																		"nativeSrc": "3261:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:18:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3281:7:9",
																		"nodeType": "YulLiteral",
																		"src": "3281:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3254:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:9"
																},
																"nativeSrc": "3254:35:9",
																"nodeType": "YulFunctionCall",
																"src": "3254:35:9"
															},
															"nativeSrc": "3254:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "3254:35:9"
														},
														{
															"nativeSrc": "3298:27:9",
															"nodeType": "YulAssignment",
															"src": "3298:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3310:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3310:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:3:9",
																		"nodeType": "YulLiteral",
																		"src": "3321:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3306:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3306:3:9"
																},
																"nativeSrc": "3306:19:9",
																"nodeType": "YulFunctionCall",
																"src": "3306:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3298:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3298:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2930:401:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3081:9:9",
														"nodeType": "YulTypedName",
														"src": "3081:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3095:4:9",
														"nodeType": "YulTypedName",
														"src": "3095:4:9",
														"type": ""
													}
												],
												"src": "2930:401:9"
											},
											{
												"body": {
													"nativeSrc": "3510:226:9",
													"nodeType": "YulBlock",
													"src": "3510:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3527:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3527:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3538:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3538:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3520:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:9"
																},
																"nativeSrc": "3520:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3520:21:9"
															},
															"nativeSrc": "3520:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3520:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3561:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3572:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3557:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:9"
																		},
																		"nativeSrc": "3557:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3550:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:9"
																},
																"nativeSrc": "3550:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3550:30:9"
															},
															"nativeSrc": "3550:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3550:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3600:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3600:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3611:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3611:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3596:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:9"
																		},
																		"nativeSrc": "3596:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3616:34:9",
																		"nodeType": "YulLiteral",
																		"src": "3616:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3589:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:9"
																},
																"nativeSrc": "3589:62:9",
																"nodeType": "YulFunctionCall",
																"src": "3589:62:9"
															},
															"nativeSrc": "3589:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "3589:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3671:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3682:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3682:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3667:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:9"
																		},
																		"nativeSrc": "3667:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3687:6:9",
																		"nodeType": "YulLiteral",
																		"src": "3687:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3660:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3660:6:9"
																},
																"nativeSrc": "3660:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3660:34:9"
															},
															"nativeSrc": "3660:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3660:34:9"
														},
														{
															"nativeSrc": "3703:27:9",
															"nodeType": "YulAssignment",
															"src": "3703:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3715:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3715:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3726:3:9",
																		"nodeType": "YulLiteral",
																		"src": "3726:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3711:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:9"
																},
																"nativeSrc": "3711:19:9",
																"nodeType": "YulFunctionCall",
																"src": "3711:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3703:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3703:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3336:400:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3487:9:9",
														"nodeType": "YulTypedName",
														"src": "3487:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3501:4:9",
														"nodeType": "YulTypedName",
														"src": "3501:4:9",
														"type": ""
													}
												],
												"src": "3336:400:9"
											},
											{
												"body": {
													"nativeSrc": "3915:224:9",
													"nodeType": "YulBlock",
													"src": "3915:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3932:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3925:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:9"
																},
																"nativeSrc": "3925:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3925:21:9"
															},
															"nativeSrc": "3925:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3925:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3966:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3966:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3977:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3977:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3962:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:9"
																		},
																		"nativeSrc": "3962:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3962:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3982:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3955:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:9"
																},
																"nativeSrc": "3955:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3955:30:9"
															},
															"nativeSrc": "3955:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3955:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4005:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4005:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4016:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4016:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4001:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:9"
																		},
																		"nativeSrc": "4001:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4021:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4021:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3994:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:9"
																},
																"nativeSrc": "3994:62:9",
																"nodeType": "YulFunctionCall",
																"src": "3994:62:9"
															},
															"nativeSrc": "3994:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "3994:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4076:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4076:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4087:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4087:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4072:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4072:3:9"
																		},
																		"nativeSrc": "4072:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4092:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4092:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4065:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:9"
																},
																"nativeSrc": "4065:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4065:32:9"
															},
															"nativeSrc": "4065:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "4065:32:9"
														},
														{
															"nativeSrc": "4106:27:9",
															"nodeType": "YulAssignment",
															"src": "4106:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4118:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4129:3:9",
																		"nodeType": "YulLiteral",
																		"src": "4129:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4114:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:9"
																},
																"nativeSrc": "4114:19:9",
																"nodeType": "YulFunctionCall",
																"src": "4114:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4106:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4106:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3741:398:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:9",
														"nodeType": "YulTypedName",
														"src": "3892:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3906:4:9",
														"nodeType": "YulTypedName",
														"src": "3906:4:9",
														"type": ""
													}
												],
												"src": "3741:398:9"
											},
											{
												"body": {
													"nativeSrc": "4318:179:9",
													"nodeType": "YulBlock",
													"src": "4318:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4335:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4335:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4328:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:9"
																},
																"nativeSrc": "4328:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4328:21:9"
															},
															"nativeSrc": "4328:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4328:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4369:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4369:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4380:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4380:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4365:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:9"
																		},
																		"nativeSrc": "4365:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4365:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4385:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4385:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4358:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:9"
																},
																"nativeSrc": "4358:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4358:30:9"
															},
															"nativeSrc": "4358:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4358:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4419:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4419:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4404:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:9"
																		},
																		"nativeSrc": "4404:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:18:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4424:31:9",
																		"nodeType": "YulLiteral",
																		"src": "4424:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4397:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:9"
																},
																"nativeSrc": "4397:59:9",
																"nodeType": "YulFunctionCall",
																"src": "4397:59:9"
															},
															"nativeSrc": "4397:59:9",
															"nodeType": "YulExpressionStatement",
															"src": "4397:59:9"
														},
														{
															"nativeSrc": "4465:26:9",
															"nodeType": "YulAssignment",
															"src": "4465:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4477:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4477:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4488:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4473:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:9"
																},
																"nativeSrc": "4473:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4473:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4465:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4144:353:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4295:9:9",
														"nodeType": "YulTypedName",
														"src": "4295:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4309:4:9",
														"nodeType": "YulTypedName",
														"src": "4309:4:9",
														"type": ""
													}
												],
												"src": "4144:353:9"
											},
											{
												"body": {
													"nativeSrc": "4676:227:9",
													"nodeType": "YulBlock",
													"src": "4676:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4693:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4704:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4686:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:9"
																},
																"nativeSrc": "4686:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4686:21:9"
															},
															"nativeSrc": "4686:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4686:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4727:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4723:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:9"
																		},
																		"nativeSrc": "4723:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4716:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:9"
																},
																"nativeSrc": "4716:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4716:30:9"
															},
															"nativeSrc": "4716:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4716:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4766:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4766:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4777:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4777:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4762:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:9"
																		},
																		"nativeSrc": "4762:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4782:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4782:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4755:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:9"
																},
																"nativeSrc": "4755:62:9",
																"nodeType": "YulFunctionCall",
																"src": "4755:62:9"
															},
															"nativeSrc": "4755:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "4755:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4837:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4837:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4848:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4848:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4833:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4833:3:9"
																		},
																		"nativeSrc": "4833:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4833:18:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4853:7:9",
																		"nodeType": "YulLiteral",
																		"src": "4853:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4826:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4826:6:9"
																},
																"nativeSrc": "4826:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4826:35:9"
															},
															"nativeSrc": "4826:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4826:35:9"
														},
														{
															"nativeSrc": "4870:27:9",
															"nodeType": "YulAssignment",
															"src": "4870:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4882:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4882:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4893:3:9",
																		"nodeType": "YulLiteral",
																		"src": "4893:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4878:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:9"
																},
																"nativeSrc": "4878:19:9",
																"nodeType": "YulFunctionCall",
																"src": "4878:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4870:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4870:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4502:401:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4653:9:9",
														"nodeType": "YulTypedName",
														"src": "4653:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4667:4:9",
														"nodeType": "YulTypedName",
														"src": "4667:4:9",
														"type": ""
													}
												],
												"src": "4502:401:9"
											},
											{
												"body": {
													"nativeSrc": "5082:225:9",
													"nodeType": "YulBlock",
													"src": "5082:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5099:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5099:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5110:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5092:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:9"
																},
																"nativeSrc": "5092:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5092:21:9"
															},
															"nativeSrc": "5092:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5092:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5133:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5144:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5144:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5129:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:9"
																		},
																		"nativeSrc": "5129:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5129:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5149:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5149:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5122:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:9"
																},
																"nativeSrc": "5122:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5122:30:9"
															},
															"nativeSrc": "5122:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5122:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5172:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5172:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5183:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5183:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5168:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:9"
																		},
																		"nativeSrc": "5168:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5188:34:9",
																		"nodeType": "YulLiteral",
																		"src": "5188:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5161:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:9"
																},
																"nativeSrc": "5161:62:9",
																"nodeType": "YulFunctionCall",
																"src": "5161:62:9"
															},
															"nativeSrc": "5161:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "5161:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5243:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5254:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5239:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:9"
																		},
																		"nativeSrc": "5239:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5239:18:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5259:5:9",
																		"nodeType": "YulLiteral",
																		"src": "5259:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5232:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:9"
																},
																"nativeSrc": "5232:33:9",
																"nodeType": "YulFunctionCall",
																"src": "5232:33:9"
															},
															"nativeSrc": "5232:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "5232:33:9"
														},
														{
															"nativeSrc": "5274:27:9",
															"nodeType": "YulAssignment",
															"src": "5274:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5286:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5286:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5297:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5297:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5282:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:9"
																},
																"nativeSrc": "5282:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5282:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5274:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5274:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4908:399:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5059:9:9",
														"nodeType": "YulTypedName",
														"src": "5059:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5073:4:9",
														"nodeType": "YulTypedName",
														"src": "5073:4:9",
														"type": ""
													}
												],
												"src": "4908:399:9"
											},
											{
												"body": {
													"nativeSrc": "5486:228:9",
													"nodeType": "YulBlock",
													"src": "5486:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5503:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5503:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5496:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:9"
																},
																"nativeSrc": "5496:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5496:21:9"
															},
															"nativeSrc": "5496:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5496:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5537:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5537:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5548:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5548:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5533:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:9"
																		},
																		"nativeSrc": "5533:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5553:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5553:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5526:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:9"
																},
																"nativeSrc": "5526:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5526:30:9"
															},
															"nativeSrc": "5526:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5526:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5576:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5576:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5587:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5587:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5572:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5572:3:9"
																		},
																		"nativeSrc": "5572:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5572:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5592:34:9",
																		"nodeType": "YulLiteral",
																		"src": "5592:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5565:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5565:6:9"
																},
																"nativeSrc": "5565:62:9",
																"nodeType": "YulFunctionCall",
																"src": "5565:62:9"
															},
															"nativeSrc": "5565:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "5565:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5647:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5658:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5658:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5643:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:9"
																		},
																		"nativeSrc": "5643:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:18:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5663:8:9",
																		"nodeType": "YulLiteral",
																		"src": "5663:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5636:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:9"
																},
																"nativeSrc": "5636:36:9",
																"nodeType": "YulFunctionCall",
																"src": "5636:36:9"
															},
															"nativeSrc": "5636:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "5636:36:9"
														},
														{
															"nativeSrc": "5681:27:9",
															"nodeType": "YulAssignment",
															"src": "5681:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5693:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5693:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5704:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5689:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:9"
																},
																"nativeSrc": "5689:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5689:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5681:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5681:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5312:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5463:9:9",
														"nodeType": "YulTypedName",
														"src": "5463:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5477:4:9",
														"nodeType": "YulTypedName",
														"src": "5477:4:9",
														"type": ""
													}
												],
												"src": "5312:402:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106da565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610702565b610244565b604051601281526020016100bf565b6100db61012d3660046106da565b610267565b6100ef61014036600461073c565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106da565b610297565b6100db6101833660046106da565b610316565b6100ef61019636600461075c565b610323565b6060600380546101aa9061078d565b80601f01602080910402602001604051908101604052809291908181526020018280546101d69061078d565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107c5565b61034d565b6060600480546101aa9061078d565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106d5575f5ffd5b919050565b5f5f604083850312156106eb575f5ffd5b6106f4836106bf565b946020939093013593505050565b5f5f5f60608486031215610714575f5ffd5b61071d846106bf565b925061072b602085016106bf565b929592945050506040919091013590565b5f6020828403121561074c575f5ffd5b610755826106bf565b9392505050565b5f5f6040838503121561076d575f5ffd5b610776836106bf565b9150610784602084016106bf565b90509250929050565b600181811c908216806107a157607f821691505b6020821081036107bf57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220fb984a3ba8d1f4637996889a03c2281225f0dcca42513e601f0d8ec3bf3f137964736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x71D DUP5 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP PUSH2 0x72B PUSH1 0x20 DUP6 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x755 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x776 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH2 0x784 PUSH1 0x20 DUP5 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB SWAP9 BLOBBASEFEE EXTCODESIZE 0xA8 0xD1 DELEGATECALL PUSH4 0x7996889A SUB 0xC2 0x28 SLT 0x25 CREATE 0xDC 0xCA TIMESTAMP MLOAD RETURNDATACOPY PUSH1 0x1F 0xD DUP15 0xC3 0xBF EXTCODEHASH SGT PUSH26 0x64736F6C634300081C0033000000000000000000000000000000 ",
							"sourceMap": "1532:11312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:9;;1078:22;1060:41;;1048:2;1033:18;4444:197:2;920:187:9;3255:106:2;3342:12;;3255:106;;;1258:25:9;;;1246:2;1231:18;3255:106:2;1112:177:9;5203:256:2;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1815:36:9;;1803:2;1788:18;3104:91:2;1673:184:9;5854:234:2;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:8;4581:32:2;719:10:8;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:8;5356:38:2;5372:4;719:10:8;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;5854:234::-;5942:4;719:10:8;5996:64:2;719:10:8;6012:7:2;6049:10;6021:25;719:10:8;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:8;6668:4:2;6749:25;719:10:8;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;3132:2:9;6784:85:2;;;3114:21:9;3171:2;3151:18;;;3144:30;3210:34;3190:18;;;3183:62;-1:-1:-1;;;3261:18:9;;;3254:35;3306:19;;6784:85:2;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:8;3873:28:2;719:10:8;3890:2:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;3538:2:9;10550:68:2;;;3520:21:9;3577:2;3557:18;;;3550:30;3616:34;3596:18;;;3589:62;-1:-1:-1;;;3667:18:9;;;3660:34;3711:19;;10550:68:2;3336:400:9;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;3943:2:9;10628:68:2;;;3925:21:9;3982:2;3962:18;;;3955:30;4021:34;4001:18;;;3994:62;-1:-1:-1;;;4072:18:9;;;4065:32;4114:19;;10628:68:2;3741:398:9;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1258:25:9;;;10758:32:2;;1231:18:9;10758:32:2;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;4346:2:9;11297:68:2;;;4328:21:9;4385:2;4365:18;;;4358:30;4424:31;4404:18;;;4397:59;4473:18;;11297:68:2;4144:353:9;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;4704:2:9;7544:68:2;;;4686:21:9;4743:2;4723:18;;;4716:30;4782:34;4762:18;;;4755:62;-1:-1:-1;;;4833:18:9;;;4826:35;4878:19;;7544:68:2;4502:401:9;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;5110:2:9;7622:64:2;;;5092:21:9;5149:2;5129:18;;;5122:30;5188:34;5168:18;;;5161:62;-1:-1:-1;;;5239:18:9;;;5232:33;5282:19;;7622:64:2;4908:399:9;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;5514:2:9;7793:72:2;;;5496:21:9;5553:2;5533:18;;;5526:30;5592:34;5572:18;;;5565:62;-1:-1:-1;;;5643:18:9;;;5636:36;5689:19;;7793:72:2;5312:402:9;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1258:25:9;;;8114:13:2;;8163:26;;1231:18:9;8163:26:2;;;;;;;8200:37;12073:91;14:418:9;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:9;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:9:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:9;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:9:o;2053:260::-;2121:6;2129;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;;2269:38;2303:2;2292:9;2288:18;2269:38;:::i;:::-;2259:48;;2053:260;;;;;:::o;2318:380::-;2397:1;2393:12;;;;2440;;;2461:61;;2515:4;2507:6;2503:17;2493:27;;2461:61;2568:2;2560:6;2557:14;2537:18;2534:38;2531:161;;2614:10;2609:3;2605:20;2602:1;2595:31;2649:4;2646:1;2639:15;2677:4;2674:1;2667:15;2531:161;;2318:380;;;:::o;2703:222::-;2768:9;;;2789:10;;;2786:133;;;2841:10;2836:3;2832:20;2829:1;2822:31;2876:4;2873:1;2866:15;2904:4;2901:1;2894:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "414800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24623",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27010",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51132",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 973,
									"end": 979,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 987,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1034,
									"end": 1036,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1022,
									"end": 1031,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1013,
									"end": 1020,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1009,
									"end": 1032,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1005,
									"end": 1037,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1048,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1093,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1093,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1105,
									"end": 1135,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1135,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1145,
									"end": 1146,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1138,
									"end": 1150,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1224,
									"end": 1231,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1221,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1213,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1200,
									"end": 1222,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1171,
									"end": 1232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1278,
									"end": 1280,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1263,
									"end": 1281,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1263,
									"end": 1281,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1257,
									"end": 1282,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1232,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1232,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1257,
									"end": 1282,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1294,
									"end": 1326,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1326,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1336,
									"end": 1337,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 1341,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1417,
									"end": 1424,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1406,
									"end": 1414,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1395,
									"end": 1404,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1391,
									"end": 1415,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1362,
									"end": 1425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1515,
									"end": 1516,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1637,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1621,
									"end": 1638,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1611,
									"end": 1638,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1611,
									"end": 1638,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1688,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1675,
									"end": 1689,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1655,
									"end": 1673,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1652,
									"end": 1690,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1732,
									"end": 1742,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1727,
									"end": 1730,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1723,
									"end": 1743,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1720,
									"end": 1721,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1713,
									"end": 1744,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1771,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1764,
									"end": 1765,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1757,
									"end": 1772,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1795,
									"end": 1799,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1792,
									"end": 1793,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1785,
									"end": 1800,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1436,
									"end": 1816,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2049,
									"end": 2051,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2044,
									"end": 2047,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2082,
									"end": 2083,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2075,
									"end": 2091,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2129,
									"end": 2133,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2126,
									"end": 2127,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2199,
									"end": 2201,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2187,
									"end": 2197,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2183,
									"end": 2202,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2181,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2176,
									"end": 2203,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2170,
									"end": 2174,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2204,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2235,
									"end": 2239,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2223,
									"end": 2233,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2220,
									"end": 2240,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2258,
									"end": 2262,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2313,
									"end": 2315,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2308,
									"end": 2311,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2304,
									"end": 2316,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2301,
									"end": 2302,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2297,
									"end": 2317,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2291,
									"end": 2295,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2287,
									"end": 2318,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2277,
									"end": 2318,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2277,
									"end": 2318,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2386,
									"end": 2388,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2379,
									"end": 2384,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2445,
									"end": 2446,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2431,
									"end": 2447,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2431,
									"end": 2447,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2771,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2771,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2783,
									"end": 2813,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2783,
									"end": 2813,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2816,
									"end": 2834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 2935,
									"end": 2941,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2927,
									"end": 2931,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2921,
									"end": 2932,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2895,
									"end": 2933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2889,
									"end": 2893,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2845,
									"end": 2942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2991,
									"end": 2995,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3022,
									"end": 3024,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3011,
									"end": 3025,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3011,
									"end": 3025,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3039,
									"end": 3040,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3727,
									"end": 3728,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3744,
									"end": 3750,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3790,
									"end": 3816,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2598,
									"end": 2599,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2614,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2586,
									"end": 2615,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2576,
									"end": 2616,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2622,
									"end": 2623,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2573,
									"end": 2630,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3843,
									"end": 3924,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3843,
									"end": 3924,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3004,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3934,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1894,
									"end": 1895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1931,
									"end": 1935,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1918,
									"end": 1936,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1918,
									"end": 1936,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3202,
									"end": 3209,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3199,
									"end": 3200,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3196,
									"end": 3210,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3278,
									"end": 3304,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3263,
									"end": 3305,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3263,
									"end": 3305,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3391,
									"end": 3395,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3344,
									"end": 3345,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3218,
									"end": 3230,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3192,
									"end": 3195,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3438,
									"end": 3444,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3436,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3426,
									"end": 3445,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3493,
									"end": 3519,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3582,
									"end": 3583,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3594,
									"end": 3597,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 3574,
									"end": 3598,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3570,
									"end": 3607,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3566,
									"end": 3608,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3551,
									"end": 3609,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3610,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3610,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3670,
									"end": 3671,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3650,
									"end": 3672,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3637,
									"end": 3673,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3637,
									"end": 3673,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2641,
									"end": 3940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb984a3ba8d1f4637996889a03c2281225f0dcca42513e601f0d8ec3bf3f137964736f6c634300081c0033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3174,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3244,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3289,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3580,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3650,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3336,
											"end": 3736,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3955,
											"end": 3985,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3994,
											"end": 4056,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4065,
											"end": 4097,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3741,
											"end": 4139,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4385,
											"end": 4387,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4358,
											"end": 4388,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4455,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4397,
											"end": 4456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4144,
											"end": 4497,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4716,
											"end": 4746,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 4816,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4755,
											"end": 4817,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4861,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4502,
											"end": 4903,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5092,
											"end": 5113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5122,
											"end": 5152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5222,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4908,
											"end": 5307,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5496,
											"end": 5517,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5556,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5565,
											"end": 5627,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5672,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5312,
											"end": 5714,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2305,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2269,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2520,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2571,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2534,
											"end": 2572,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2614,
											"end": 2624,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2605,
											"end": 2625,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2626,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"fund_shares.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 355,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 361,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 363,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 365,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 367,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122025203af6e6199a96ca68023bb58fb3f01f64c80f1fea1fbd74ddd5e6dc87a35864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122025203af6e6199a96ca68023bb58fb3f01f64c80f1fea1fbd74ddd5e6dc87a35864736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 KECCAK256 GASPRICE 0xF6 0xE6 NOT SWAP11 SWAP7 0xCA PUSH9 0x23BB58FB3F01F64C8 0xF 0x1F 0xEA 0x1F 0xBD PUSH21 0xDDD5E6DC87A35864736F6C634300081C0033000000 ",
							"sourceMap": "701:6234:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;701:6234:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122025203af6e6199a96ca68023bb58fb3f01f64c80f1fea1fbd74ddd5e6dc87a35864736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 KECCAK256 GASPRICE 0xF6 0xE6 NOT SWAP11 SWAP7 0xCA PUSH9 0x23BB58FB3F01F64C8 0xF 0x1F 0xEA 0x1F 0xBD PUSH21 0xDDD5E6DC87A35864736F6C634300081C0033000000 ",
							"sourceMap": "701:6234:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122025203af6e6199a96ca68023bb58fb3f01f64c80f1fea1fbd74ddd5e6dc87a35864736f6c634300081c0033",
									".code": [
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"fund_shares.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212203e13b0e5875b17e390131f4d32e733756b1451500078ec41f9c977e7bc51e46e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203e13b0e5875b17e390131f4d32e733756b1451500078ec41f9c977e7bc51e46e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY SGT 0xB0 0xE5 DUP8 JUMPDEST OR 0xE3 SWAP1 SGT 0x1F 0x4D ORIGIN 0xE7 CALLER PUSH22 0x6B1451500078EC41F9C977E7BC51E46E64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "194:9169:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203e13b0e5875b17e390131f4d32e733756b1451500078ec41f9c977e7bc51e46e64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY SGT 0xB0 0xE5 DUP8 JUMPDEST OR 0xE3 SWAP1 SGT 0x1F 0x4D ORIGIN 0xE7 CALLER PUSH22 0x6B1451500078EC41F9C977E7BC51E46E64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "194:9169:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e13b0e5875b17e390131f4d32e733756b1451500078ec41f9c977e7bc51e46e64736f6c634300081c0033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"fund_shares.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"fund_shares.sol": {
				"ast": {
					"absolutePath": "fund_shares.sol",
					"exportedSymbols": {
						"Address": [
							1771
						],
						"Context": [
							1793
						],
						"ERC20": [
							926
						],
						"IERC20": [
							1004
						],
						"IERC20Metadata": [
							1029
						],
						"IERC20Permit": [
							1065
						],
						"ReentrancyGuard": [
							339
						],
						"SafeERC20": [
							1441
						],
						"WETHVault": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 275,
							"sourceUnit": 927,
							"src": "122:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 275,
							"sourceUnit": 1442,
							"src": "232:118:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 275,
							"sourceUnit": 340,
							"src": "352:115:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "ERC20",
										"nameLocations": [
											"759:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 926,
										"src": "759:5:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "759:5:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"766:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 339,
										"src": "766:15:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "766:15:0"
								}
							],
							"canonicalName": "WETHVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "471:264:0",
								"text": " @title WETH ERC-4626 Vault\n @dev This contract allows users to deposit WETH, mint proportional fund shares,\n      and send WETH to a designated fund portfolio while relying on an external\n      portfolio value update for tracking share value."
							},
							"fullyImplemented": true,
							"id": 274,
							"linearizedBaseContracts": [
								274,
								339,
								926,
								1029,
								1004,
								1793
							],
							"name": "WETHVault",
							"nameLocation": "746:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 13,
									"libraryName": {
										"id": 10,
										"name": "SafeERC20",
										"nameLocations": [
											"795:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1441,
										"src": "795:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "789:27:0",
									"typeName": {
										"id": 12,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 11,
											"name": "IERC20",
											"nameLocations": [
												"809:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1004,
											"src": "809:6:0"
										},
										"referencedDeclaration": 1004,
										"src": "809:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1004",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "3fc8cef3",
									"id": 16,
									"mutability": "immutable",
									"name": "weth",
									"nameLocation": "848:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "824:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1004",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 15,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 14,
											"name": "IERC20",
											"nameLocations": [
												"824:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1004,
											"src": "824:6:0"
										},
										"referencedDeclaration": 1004,
										"src": "824:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1004",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aa4d1655",
									"id": 18,
									"mutability": "immutable",
									"name": "fundPortfolio",
									"nameLocation": "884:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "859:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "859:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "429b62e5",
									"id": 22,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "936:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "904:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 21,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "912:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "904:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 20,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "923:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73acb590",
									"id": 24,
									"mutability": "mutable",
									"name": "portfolioValue",
									"nameLocation": "1005:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "990:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 23,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9345a8a944c0bca27038313dd8066210a495ba6374e523065a2e7adcc020ff2b",
									"id": 30,
									"name": "WithdrawalRequest",
									"nameLocation": "1073:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1107:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1091:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1121:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1113:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:38:0"
									},
									"src": "1067:62:0"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1297:329:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "_weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "1316:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1333:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1325:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 47,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1325:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1325:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1316:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5745544820616464726573732063616e6e6f74206265207a65726f",
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1337:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_223e7e21f1e005e14a47cf68489b873f054d1423f02e114052090f0c6fbd3b11",
																"typeString": "literal_string \"WETH address cannot be zero\""
															},
															"value": "WETH address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_223e7e21f1e005e14a47cf68489b873f054d1423f02e114052090f0c6fbd3b11",
																"typeString": "literal_string \"WETH address cannot be zero\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1308:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1308:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 56,
																"name": "_fundPortfolio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "1386:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 59,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1412:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1404:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 57,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1404:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1404:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1386:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6420706f7274666f6c696f20616464726573732063616e6e6f74206265207a65726f",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1416:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50c197e522fff986de4bf4eedbdfb702f19e0aa534018456bb4f299eea67a9b5",
																"typeString": "literal_string \"Fund portfolio address cannot be zero\""
															},
															"value": "Fund portfolio address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50c197e522fff986de4bf4eedbdfb702f19e0aa534018456bb4f299eea67a9b5",
																"typeString": "literal_string \"Fund portfolio address cannot be zero\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1378:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1378:78:0"
											},
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1477:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1004",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 67,
																"name": "_weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "1491:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 66,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "1484:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1004_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1484:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1004",
															"typeString": "contract IERC20"
														}
													},
													"src": "1477:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1004",
														"typeString": "contract IERC20"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1477:20:0"
											},
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 71,
														"name": "fundPortfolio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1508:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 72,
														"name": "_fundPortfolio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1524:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1508:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1508:30:0"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 75,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1549:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 78,
														"indexExpression": {
															"expression": {
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1556:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1560:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1556:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1549:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1570:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1549:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1549:25:0"
											}
										]
									},
									"id": 83,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 41,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 42,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 38,
													"src": "1288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 43,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 40,
												"name": "ERC20",
												"nameLocations": [
													"1275:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "1275:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1275:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "_weth",
												"nameLocation": "1167:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1159:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "_fundPortfolio",
												"nameLocation": "1191:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1183:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1230:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1216:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1216:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1260:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1246:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 37,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1246:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1148:126:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1297:0:0"
									},
									"scope": 274,
									"src": "1137:489:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1794:168:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 90,
																"name": "admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 93,
															"indexExpression": {
																"expression": {
																	"id": 91,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1820:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1824:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1820:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1813:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e2061646d696e",
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1833:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															},
															"value": "Not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															}
														],
														"id": 89,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1805:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1805:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1805:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "_newValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "1867:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1879:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1867:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f7274666f6c696f2076616c7565206d75737420626520706f736974697665",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1882:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0fbe0c6dac5daba7d11827572748ff332b3c7549f0bb6797ad4591095f3ac528",
																"typeString": "literal_string \"Portfolio value must be positive\""
															},
															"value": "Portfolio value must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0fbe0c6dac5daba7d11827572748ff332b3c7549f0bb6797ad4591095f3ac528",
																"typeString": "literal_string \"Portfolio value must be positive\""
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1859:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1859:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1859:58:0"
											},
											{
												"expression": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 104,
														"name": "portfolioValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "1928:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 105,
														"name": "_newValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1945:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1928:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1928:26:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "1634:99:0",
										"text": " @dev Allows an admin to update the total portfolio value (tracked externally)."
									},
									"functionSelector": "08867db6",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPortfolioValue",
									"nameLocation": "1748:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "_newValue",
												"nameLocation": "1774:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1766:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1765:19:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:0:0"
									},
									"scope": 274,
									"src": "1739:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "2186:597:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "2205:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2214:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2205:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2217:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2197:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2197:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "2197:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 127,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2348:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2352:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2348:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 131,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2368:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WETHVault_$274",
																		"typeString": "contract WETHVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WETHVault_$274",
																		"typeString": "contract WETHVault"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2360:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2360:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2360:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 133,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2375:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 124,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "2326:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1004",
																"typeString": "contract IERC20"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2331:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1125,
														"src": "2326:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1004_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1004_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2326:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "2326:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 139,
															"name": "fundPortfolio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "2478:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 140,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2493:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 136,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "2460:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1004",
																"typeString": "contract IERC20"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2465:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1098,
														"src": "2460:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1004_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1004_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2460:40:0"
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "2597:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 173,
														"src": "2589:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 147,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 145,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "2606:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2589:30:0"
											},
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"mutability": "mutable",
														"name": "shares",
														"nameLocation": "2638:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 173,
														"src": "2630:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 166,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 150,
																		"name": "supply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "2648:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2658:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2648:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "portfolioValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 24,
																		"src": "2663:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2681:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2663:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2648:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 157,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2647:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 159,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 112,
																		"src": "2696:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 160,
																		"name": "supply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "2705:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2696:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 162,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2695:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 163,
															"name": "portfolioValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "2715:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2695:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2647:82:0",
													"trueExpression": {
														"id": 158,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "2686:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2630:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 168,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2756:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2760:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "2768:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 167,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "2750:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "2750:25:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1970:155:0",
										"text": " @dev Deposit WETH, mint proportional shares, and send WETH to the fund portfolio.\n @param amount The amount of WETH to deposit."
									},
									"functionSelector": "b6b55f25",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 114,
												"name": "nonReentrant",
												"nameLocations": [
													"2173:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 304,
												"src": "2173:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2173:12:0"
										}
									],
									"name": "deposit",
									"nameLocation": "2140:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2156:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2148:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:16:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2186:0:0"
									},
									"scope": 274,
									"src": "2131:652:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "2977:456:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 183,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "2996:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3005:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2996:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536861726573206d7573742062652067726561746572207468616e207a65726f",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3008:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6",
																"typeString": "literal_string \"Shares must be greater than zero\""
															},
															"value": "Shares must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6",
																"typeString": "literal_string \"Shares must be greater than zero\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2988:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2988:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 191,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3072:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3076:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3072:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 190,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "3062:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3062:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 194,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "3087:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3062:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420736861726573",
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3095:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665",
																"typeString": "literal_string \"Insufficient shares\""
															},
															"value": "Insufficient shares"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665",
																"typeString": "literal_string \"Insufficient shares\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3054:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3054:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "3054:63:0"
											},
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "3138:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 225,
														"src": "3130:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3130:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 201,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "3147:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3147:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3130:30:0"
											},
											{
												"assignments": [
													205
												],
												"declarations": [
													{
														"constant": false,
														"id": 205,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3179:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 225,
														"src": "3171:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 212,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 206,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "3189:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 207,
																	"name": "portfolioValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "3198:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3189:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 209,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3188:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 210,
														"name": "supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "3216:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3188:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3171:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 214,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3268:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3272:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3268:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3280:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 213,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "3262:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3262:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "3262:25:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 220,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3406:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3410:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3406:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "3418:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 219,
														"name": "WithdrawalRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "3388:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3388:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "EmitStatement",
												"src": "3383:42:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "2791:124:0",
										"text": " @dev Withdraw WETH by burning vault shares.\n @param shares The number of vault shares to redeem."
									},
									"functionSelector": "2e1a7d4d",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 180,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 179,
												"name": "nonReentrant",
												"nameLocations": [
													"2964:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 304,
												"src": "2964:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2964:12:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "2930:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2947:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2939:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2938:16:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2977:0:0"
									},
									"scope": 274,
									"src": "2921:512:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "3607:120:0",
										"statements": [
											{
												"assignments": [
													233
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "3626:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 249,
														"src": "3618:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3618:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 234,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "3635:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3635:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3618:30:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 237,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "3666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3676:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3666:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 241,
																		"name": "portfolioValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 24,
																		"src": "3688:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3705:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "3688:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 244,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3687:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 245,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "3713:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3687:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3666:53:0",
													"trueExpression": {
														"hexValue": "31653138",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3680:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 248,
												"nodeType": "Return",
												"src": "3659:60:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3441:103:0",
										"text": " @dev Returns the value of a single share based on fundPortfolio's total valuation."
									},
									"functionSelector": "99530b06",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pricePerShare",
									"nameLocation": "3559:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3572:2:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3598:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3597:9:0"
									},
									"scope": 274,
									"src": "3550:177:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "3855:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 259,
																"name": "admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "3874:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 262,
															"indexExpression": {
																"expression": {
																	"id": 260,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3881:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3885:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3881:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3874:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e2061646d696e",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3894:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															},
															"value": "Not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3866:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "3866:43:0"
											},
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 266,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "3920:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 268,
														"indexExpression": {
															"id": 267,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3927:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3920:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 269,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "3936:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3920:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "3920:22:0"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "3735:59:0",
										"text": " @dev Adds or removes admin privileges."
									},
									"functionSelector": "4b0bddd2",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAdmin",
									"nameLocation": "3809:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "3826:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3818:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "3838:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3833:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3833:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3817:28:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3855:0:0"
									},
									"scope": 274,
									"src": "3800:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 275,
							"src": "737:3216:0",
							"usedErrors": [],
							"usedEvents": [
								30,
								938,
								947
							]
						}
					],
					"src": "33:3922:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							339
						]
					},
					"id": 340,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 277,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 339,
							"linearizedBaseContracts": [
								339
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 280,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 279,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 283,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 281,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 282,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 284,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 288,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 289,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 293,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 339,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 296,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 299,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 300,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 304,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 308,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 309,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 314,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 315,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 339,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 322,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 323,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 339,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 333,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 334,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 336,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 339,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 340,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1793
						],
						"ERC20": [
							926
						],
						"IERC20": [
							1004
						],
						"IERC20Metadata": [
							1029
						]
					},
					"id": 927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 341,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1005,
							"src": "130:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 343,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1030,
							"src": "153:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1794,
							"src": "195:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 346,
										"name": "Context",
										"nameLocations": [
											"1550:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1793,
										"src": "1550:7:2"
									},
									"id": 347,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:2"
								},
								{
									"baseName": {
										"id": 348,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1004,
										"src": "1559:6:2"
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:2"
								},
								{
									"baseName": {
										"id": 350,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1029,
										"src": "1567:14:2"
									},
									"id": 351,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 926,
							"linearizedBaseContracts": [
								926,
								1029,
								1004,
								1793
							],
							"name": "ERC20",
							"nameLocation": "1541:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "1588:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 354,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 361,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "1640:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 360,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 359,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 357,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 358,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "1714:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 362,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 365,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "1749:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 364,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 367,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "1775:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 366,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "2036:57:2",
										"statements": [
											{
												"expression": {
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 375,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "2046:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 376,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "2054:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:2"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 379,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "2069:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 380,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "2079:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:2"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 384,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1992:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2013:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:2"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:2"
									},
									"scope": 926,
									"src": "1980:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1016
									],
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "2227:29:2",
										"statements": [
											{
												"expression": {
													"id": 391,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 365,
													"src": "2244:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 390,
												"id": 392,
												"nodeType": "Return",
												"src": "2237:12:2"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 387,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:2"
									},
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2212:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:2"
									},
									"scope": 926,
									"src": "2158:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1022
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2440:31:2",
										"statements": [
											{
												"expression": {
													"id": 401,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 367,
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 400,
												"id": 402,
												"nodeType": "Return",
												"src": "2450:14:2"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 397,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:2"
									},
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:2"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 398,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:2"
									},
									"scope": 926,
									"src": "2369:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1028
									],
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "3169:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 410,
												"id": 412,
												"nodeType": "Return",
												"src": "3179:9:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 407,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:2"
									},
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3162:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 408,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:2"
									},
									"scope": 926,
									"src": "3104:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										953
									],
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "3325:36:2",
										"statements": [
											{
												"expression": {
													"id": 421,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 363,
													"src": "3342:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 420,
												"id": 422,
												"nodeType": "Return",
												"src": "3335:19:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 417,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:2"
									},
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "3316:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:2"
									},
									"scope": 926,
									"src": "3255:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "3502:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 433,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "3519:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 435,
													"indexExpression": {
														"id": 434,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3529:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "3512:25:2"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 429,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:2"
									},
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:2"
									},
									"scope": 926,
									"src": "3419:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										971
									],
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "3825:104:2",
										"statements": [
											{
												"assignments": [
													450
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 462,
														"src": "3835:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 449,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 453,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 451,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "3851:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "3883:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "3890:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "3894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "3873:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 448,
												"id": 461,
												"nodeType": "Return",
												"src": "3911:11:2"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 445,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:2"
									},
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3758:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:2"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3819:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 446,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:2"
									},
									"scope": 926,
									"src": "3740:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										981
									],
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "4085:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 474,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4102:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 476,
														"indexExpression": {
															"id": 475,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "4114:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 478,
													"indexExpression": {
														"id": 477,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "4121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 473,
												"id": 479,
												"nodeType": "Return",
												"src": "4095:34:2"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 470,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:2"
									},
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4006:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4021:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:2"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4076:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:2"
									},
									"scope": 926,
									"src": "3987:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										991
									],
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "4533:108:2",
										"statements": [
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 505,
														"src": "4543:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 492,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 494,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "4559:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "4590:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "4597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 500,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4606:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "4581:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 491,
												"id": 504,
												"nodeType": "Return",
												"src": "4623:11:2"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 488,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:2"
									},
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4461:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4478:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4527:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:2"
									},
									"scope": 926,
									"src": "4444:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1003
									],
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "5306:153:2",
										"statements": [
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 538,
														"src": "5316:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 519,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 521,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "5334:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 525,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5372:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5387:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 524,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "5356:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5414:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "5420:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5424:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "5404:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 518,
												"id": 537,
												"nodeType": "Return",
												"src": "5441:11:2"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 515,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:2"
									},
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "5225:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "5239:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "5251:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:2"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "5300:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:2"
									},
									"scope": 926,
									"src": "5203:256:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "5948:140:2",
										"statements": [
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "5958:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 549,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 551,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "5974:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 555,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "6005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "6012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 558,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "6031:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 559,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "6038:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 557,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "6021:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 561,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "6049:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 554,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "5996:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 548,
												"id": 566,
												"nodeType": "Return",
												"src": "6070:11:2"
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "5881:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "5898:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:2"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "5942:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 546,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:2"
									},
									"scope": 926,
									"src": "5854:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "6674:328:2",
										"statements": [
											{
												"assignments": [
													579
												],
												"declarations": [
													{
														"constant": false,
														"id": 579,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "6684:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 578,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 582,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 580,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "6700:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:2"
											},
											{
												"assignments": [
													584
												],
												"declarations": [
													{
														"constant": false,
														"id": 584,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "6722:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 583,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"initialValue": {
													"arguments": [
														{
															"id": 586,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "6759:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "6766:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 585,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "6749:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 591,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "6792:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 592,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6812:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:2"
											},
											{
												"id": 605,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 598,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "6912:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6919:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 600,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "6928:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 601,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 573,
																		"src": "6947:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 597,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "6903:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 604,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 577,
												"id": 607,
												"nodeType": "Return",
												"src": "6984:11:2"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "6602:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "6619:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:2"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "6668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:2"
									},
									"scope": 926,
									"src": "6575:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "7534:710:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 620,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "7552:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 630,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "7630:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "7718:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "7724:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "7728:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 639,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "7697:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:2"
											},
											{
												"assignments": [
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 685,
														"src": "7746:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 645,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 650,
												"initialValue": {
													"baseExpression": {
														"id": 647,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "7768:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 649,
													"indexExpression": {
														"id": 648,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "7778:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 652,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "7801:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 653,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "7816:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:2"
											},
											{
												"id": 672,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:2",
												"statements": [
													{
														"expression": {
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 658,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "7899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 660,
																"indexExpression": {
																	"id": 659,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "7909:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 661,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "7917:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 662,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "7931:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 665,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:2"
													},
													{
														"expression": {
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 666,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "8114:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 668,
																"indexExpression": {
																	"id": 667,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "8124:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 669,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "8131:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 671,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 674,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "8172:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "8178:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "8182:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 673,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "8163:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "EmitStatement",
												"src": "8158:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "8220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "8226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "8230:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 679,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "8200:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:2"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "7475:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "7489:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "7501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:2"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:2"
									},
									"scope": 926,
									"src": "7456:788:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "8585:470:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 695,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "8603:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 696,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 705,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "8713:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "8671:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:2"
											},
											{
												"expression": {
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 713,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "8731:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 714,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "8747:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:2"
											},
											{
												"id": 723,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:2",
												"statements": [
													{
														"expression": {
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 717,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "8899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 719,
																"indexExpression": {
																	"id": 718,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "8909:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 720,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "8921:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 722,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "8982:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "8952:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "EmitStatement",
												"src": "8947:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 734,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "9032:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "9041:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 733,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "9000:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:2"
											}
										]
									},
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "8535:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "8552:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:2"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:2"
									},
									"scope": 926,
									"src": "8520:535:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9440:594:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 752,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "9458:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 753,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 762,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "9549:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 763,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "9570:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 761,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "9528:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:2"
											},
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 814,
														"src": "9588:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"initialValue": {
													"baseExpression": {
														"id": 772,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "9613:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 774,
													"indexExpression": {
														"id": 773,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "9623:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 777,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "9649:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 778,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "9667:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:2"
											},
											{
												"id": 795,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:2",
												"statements": [
													{
														"expression": {
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "9746:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "9756:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 786,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "9767:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 787,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "9784:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 790,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:2"
													},
													{
														"expression": {
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 791,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "9883:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 792,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "9899:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 794,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 797,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "9940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 798,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "9961:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 796,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "9931:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "EmitStatement",
												"src": "9926:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 806,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "9999:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "10020:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 805,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "9979:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:2"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9390:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:2"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:2"
									},
									"scope": 926,
									"src": "9375:659:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "10540:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 826,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "10558:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 827,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "10636:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 837,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:2"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 845,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "10707:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 848,
															"indexExpression": {
																"id": 846,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "10719:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 849,
														"indexExpression": {
															"id": 847,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "10737:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 854,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10767:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10774:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "10783:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 853,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "10758:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "EmitStatement",
												"src": "10753:37:2"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "10475:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "10490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "10507:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:2"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:2"
									},
									"scope": 926,
									"src": "10457:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "11168:321:2",
										"statements": [
											{
												"assignments": [
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 902,
														"src": "11178:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 870,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 876,
												"initialValue": {
													"arguments": [
														{
															"id": 873,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "11215:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "11222:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 872,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "11205:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 877,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "11244:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 879,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 878,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "11240:243:2",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "11283:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 885,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "11305:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 886,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 867,
																			"src": "11325:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 884,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:2"
														},
														{
															"id": 899,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 892,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "11416:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 893,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 865,
																				"src": "11423:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 894,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 871,
																					"src": "11432:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 895,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 867,
																					"src": "11451:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 891,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "11407:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 898,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11103:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11135:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:2"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:2"
									},
									"scope": 926,
									"src": "11078:411:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "12162:2:2",
										"statements": []
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "12103:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "12117:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "12129:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:2"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:2"
									},
									"scope": 926,
									"src": "12073:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "12840:2:2",
										"statements": []
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "12781:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "12795:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "12807:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:2"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:2"
									},
									"scope": 926,
									"src": "12752:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 927,
							"src": "1532:11312:2",
							"usedErrors": [],
							"usedEvents": [
								938,
								947
							]
						}
					],
					"src": "105:12740:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1004
						]
					},
					"id": 1005,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 929,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1004,
							"linearizedBaseContracts": [
								1004
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 938,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 947,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 1004,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 1004,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 1004,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 1004,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 1004,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 1004,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1005,
							"src": "202:2534:3",
							"usedErrors": [],
							"usedEvents": [
								938,
								947
							]
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1004
						],
						"IERC20Metadata": [
							1029
						]
					},
					"id": 1030,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1006,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1007,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 1005,
							"src": "135:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1009,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1004,
										"src": "305:6:4"
									},
									"id": 1010,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1008,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1029,
							"linearizedBaseContracts": [
								1029,
								1004
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1013,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 1029,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1022,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1019,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 1029,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1025,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 1029,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1030,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								938,
								947
							]
						}
					],
					"src": "110:573:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1065
						]
					},
					"id": 1066,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1031,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1032,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 1065,
							"linearizedBaseContracts": [
								1065
							],
							"name": "IERC20Permit",
							"nameLocation": "639:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1464:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1488:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1480:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1511:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1503:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1528:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1559:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1551:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1583:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1577:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1042,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1602:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1594:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1621:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1613:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1046,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:5"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:5"
									},
									"scope": 1065,
									"src": "1455:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1058,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1952:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1967:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1959:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:5"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1997:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:5"
									},
									"scope": 1065,
									"src": "1943:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2207:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:5"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "2249:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1061,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:5"
									},
									"scope": 1065,
									"src": "2198:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1066,
							"src": "629:1631:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:2138:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1771
						],
						"IERC20": [
							1004
						],
						"IERC20Permit": [
							1065
						],
						"SafeERC20": [
							1441
						]
					},
					"id": 1442,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1067,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1068,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 1005,
							"src": "140:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 1069,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 1066,
							"src": "164:40:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1070,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 1772,
							"src": "205:36:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1071,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1441,
							"linearizedBaseContracts": [
								1441
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1074,
									"libraryName": {
										"id": 1072,
										"name": "Address",
										"nameLocations": [
											"731:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1771,
										"src": "731:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:6",
									"typeName": {
										"id": 1073,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "1013:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1086,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "1043:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1004",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1089,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "1073:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1004",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:6",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 971,
																		"src": "1073:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1092,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "1098:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1093,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1102:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1087,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1004",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1085,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "1023:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1004_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:6"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "963:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1004",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1076,
														"name": "IERC20",
														"nameLocations": [
															"963:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1004,
														"src": "963:6:6"
													},
													"referencedDeclaration": 1004,
													"src": "963:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1004",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "977:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:6"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:6"
									},
									"scope": 1441,
									"src": "941:175:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "1445:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1112,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "1475:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1004",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1115,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1102,
																			"src": "1505:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1004",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:6",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1003,
																		"src": "1505:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1118,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "1534:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1119,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "1540:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1120,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "1544:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1113,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1004",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1111,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "1455:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1004_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:6"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "1381:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1004",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1100,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1004,
														"src": "1381:6:6"
													},
													"referencedDeclaration": 1004,
													"src": "1381:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1004",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "1395:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "1409:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "1421:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:6"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:6"
									},
									"scope": 1441,
									"src": "1355:203:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "1894:497:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1137,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1133,
																			"src": "2143:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1140,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1145,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1441",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1441",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1144,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1143,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1147,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "2190:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1141,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "2159:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1004",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:6",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 981,
																				"src": "2159:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1151,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "2314:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1004",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1160,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1129,
																			"src": "2344:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1004",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:6",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 991,
																		"src": "2344:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1163,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "2368:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1164,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "2377:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1158,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1004",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1156,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "2294:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1004_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:6"
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1839:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1004",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1128,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1127,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1004,
														"src": "1839:6:6"
													},
													"referencedDeclaration": 1004,
													"src": "1839:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1004",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1853:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1870:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:6"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:6"
									},
									"scope": 1441,
									"src": "1818:573:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "2668:194:6",
										"statements": [
											{
												"assignments": [
													1181
												],
												"declarations": [
													{
														"constant": false,
														"id": 1181,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "2678:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1190,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1186,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1441",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1441",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1184,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "2732:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1182,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "2701:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1004",
																"typeString": "contract IERC20"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 981,
														"src": "2701:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "2770:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1004",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1195,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1173,
																			"src": "2800:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1004",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:6",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 991,
																		"src": "2800:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1198,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "2824:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1199,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1181,
																		"src": "2833:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1200,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "2848:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1193,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1004",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1191,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "2750:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1004_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:6"
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2613:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1004",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1171,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1004,
														"src": "2613:6:6"
													},
													"referencedDeclaration": 1004,
													"src": "2613:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1004",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2627:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2644:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:6"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:6"
									},
									"scope": 1441,
									"src": "2582:280:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "3139:321:6",
										"statements": [
											{
												"id": 1249,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:6",
												"statements": [
													{
														"assignments": [
															1218
														],
														"declarations": [
															{
																"constant": false,
																"id": 1218,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 1249,
																"src": "3173:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1227,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1223,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1441",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1441",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1221,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1225,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "3227:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1219,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "3196:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1004",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 981,
																"src": "3196:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1229,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "3257:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1230,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "3273:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1228,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1234,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1236,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "3358:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1004",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1239,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1210,
																					"src": "3388:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1004",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 991,
																				"src": "3388:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:6",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1242,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1212,
																			"src": "3412:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1243,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1218,
																				"src": "3421:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1244,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1214,
																				"src": "3436:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1237,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:6",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1004",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1235,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "3338:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1004_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1248,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "3084:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1004",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1209,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1208,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1004,
														"src": "3084:6:6"
													},
													"referencedDeclaration": 1004,
													"src": "3084:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1004",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "3098:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "3115:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:6"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:6"
									},
									"scope": 1441,
									"src": "3053:407:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "3856:333:6",
										"statements": [
											{
												"assignments": [
													1263
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3879:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "3866:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1262,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3866:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1272,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1266,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "3917:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1004",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3923:7:6",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 991,
																"src": "3917:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:8:6",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3917:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 1269,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "3941:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1270,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "3950:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1264,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3894:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:18:6",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3894:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:90:6"
											},
											{
												"condition": {
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3971:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 1274,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "3996:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1004",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1275,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "4003:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1004",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1273,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "3972:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1004_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3972:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1296,
												"nodeType": "IfStatement",
												"src": "3967:216:6",
												"trueBody": {
													"id": 1295,
													"nodeType": "Block",
													"src": "4018:165:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1279,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "4052:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1004",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 1282,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1255,
																						"src": "4082:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$1004",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 1283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4088:7:6",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "4082:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 1284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4096:8:6",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4082:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 1285,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1257,
																				"src": "4106:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 1286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4115:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 1280,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4059:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4063:18:6",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4059:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4059:58:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1004",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1278,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "4032:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1004_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:86:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1289,
															"nodeType": "ExpressionStatement",
															"src": "4032:86:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1291,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "4152:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1004",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1292,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "4159:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1004",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1290,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "4132:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1004_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1294,
															"nodeType": "ExpressionStatement",
															"src": "4132:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "3466:308:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3788:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3808:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "3801:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1004",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1254,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1253,
														"name": "IERC20",
														"nameLocations": [
															"3801:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1004,
														"src": "3801:6:6"
													},
													"referencedDeclaration": 1004,
													"src": "3801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1004",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3823:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "3815:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3840:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "3832:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:46:6"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:6"
									},
									"scope": 1441,
									"src": "3779:410:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "4556:257:6",
										"statements": [
											{
												"assignments": [
													1320
												],
												"declarations": [
													{
														"constant": false,
														"id": 1320,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4574:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1354,
														"src": "4566:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4566:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1325,
												"initialValue": {
													"arguments": [
														{
															"id": 1323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "4601:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1321,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "4588:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1065",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4594:6:6",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1058,
														"src": "4588:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1329,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "4630:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1330,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "4637:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "4646:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1332,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "4653:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1333,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "4663:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1334,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "4666:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1335,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "4669:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1326,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "4617:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1065",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:6:6",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1050,
														"src": "4617:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "4617:54:6"
											},
											{
												"assignments": [
													1339
												],
												"declarations": [
													{
														"constant": false,
														"id": 1339,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4689:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1354,
														"src": "4681:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4681:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1344,
												"initialValue": {
													"arguments": [
														{
															"id": 1342,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "4715:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1340,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "4702:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1065",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4708:6:6",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1058,
														"src": "4702:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4702:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4681:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1346,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "4739:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1347,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "4753:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4753:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4739:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 1345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "4731:75:6"
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "4195:141:6",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4350:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4383:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "4370:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$1065",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 1301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1300,
														"name": "IERC20Permit",
														"nameLocations": [
															"4370:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1065,
														"src": "4370:12:6"
													},
													"referencedDeclaration": 1065,
													"src": "4370:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$1065",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "4398:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4429:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "4421:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "4446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4477:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "4469:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4501:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "4495:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1311,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4520:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "4512:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4539:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "4531:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:186:6"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:6"
									},
									"scope": 1441,
									"src": "4341:472:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "5266:572:6",
										"statements": [
											{
												"assignments": [
													1365
												],
												"declarations": [
													{
														"constant": false,
														"id": 1365,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5628:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1391,
														"src": "5615:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1364,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5615:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1374,
												"initialValue": {
													"arguments": [
														{
															"id": 1371,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "5669:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1368,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "5649:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1004",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1004",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5656:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1531,
														"src": "5641:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5615:95:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1376,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "5728:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5739:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5728:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5728:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1382,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "5765:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 1384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5778:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 1383,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5778:4:6",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 1385,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5777:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 1380,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5754:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5758:6:6",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5754:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5754:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5728:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5786:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 1375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:111:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "5720:111:6"
											}
										]
									},
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "4819:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5205:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5232:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5225:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1004",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1357,
														"name": "IERC20",
														"nameLocations": [
															"5225:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1004,
														"src": "5225:6:6"
													},
													"referencedDeclaration": 1004,
													"src": "5225:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1004",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5252:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5239:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:33:6"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:6"
									},
									"scope": 1441,
									"src": "5196:642:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "6428:505:6",
										"statements": [
											{
												"assignments": [
													1404,
													1406
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6729:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1439,
														"src": "6724:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1403,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6724:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1406,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6751:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1439,
														"src": "6738:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1405,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1414,
												"initialValue": {
													"arguments": [
														{
															"id": 1412,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "6785:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1409,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1396,
																	"src": "6773:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1004",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1004",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6765:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1407,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6765:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6780:4:6",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6765:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:67:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1415,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "6819:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1416,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1406,
																				"src": "6831:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6842:6:6",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6831:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6831:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1422,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1406,
																				"src": "6868:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1424,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6881:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1423,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6881:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1425,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6880:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1420,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6857:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6861:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6857:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6831:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1428,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6830:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1434,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1396,
																		"src": "6919:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1004",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1004",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1432,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1430,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "6892:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$1771_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6900:10:6",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1459,
															"src": "6892:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6892:34:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6819:107:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1402,
												"id": 1438,
												"nodeType": "Return",
												"src": "6800:126:6"
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "5844:490:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6348:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6379:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "6372:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1004",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1395,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1394,
														"name": "IERC20",
														"nameLocations": [
															"6372:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1004,
														"src": "6372:6:6"
													},
													"referencedDeclaration": 1004,
													"src": "6372:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1004",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6399:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "6386:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:33:6"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "6422:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6422:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6421:6:6"
									},
									"scope": 1441,
									"src": "6339:594:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1442,
							"src": "701:6234:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6821:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1771
						]
					},
					"id": 1772,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1443,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1444,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1771,
							"linearizedBaseContracts": [
								1771
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "1478:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1452,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "1702:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1451,
												"id": 1457,
												"nodeType": "Return",
												"src": "1695:30:7"
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1432:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:7"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1472:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:7"
									},
									"scope": 1771,
									"src": "1412:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "2718:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1470,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1771",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1771",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1468,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1473,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "2761:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:7"
											},
											{
												"assignments": [
													1479,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "2813:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1478,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1486,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1480,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "2831:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1482,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "2853:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1488,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "2882:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:7"
											}
										]
									},
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2666:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2693:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:7"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:7"
									},
									"scope": 1771,
									"src": "2647:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "3790:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1504,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "3829:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1505,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "3837:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1503,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1551,
															1595
														],
														"referencedDeclaration": 1595,
														"src": "3807:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1502,
												"id": 1509,
												"nodeType": "Return",
												"src": "3800:79:7"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "3723:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "3739:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1497,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:7"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "3776:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:7"
									},
									"scope": 1771,
									"src": "3701:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "4255:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1524,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "4294:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "4302:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1527,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "4311:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1523,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1551,
															1595
														],
														"referencedDeclaration": 1595,
														"src": "4272:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1522,
												"id": 1529,
												"nodeType": "Return",
												"src": "4265:59:7"
											}
										]
									},
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "4139:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "4163:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "4190:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:7"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "4241:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:7"
									},
									"scope": 1771,
									"src": "4108:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "4806:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1544,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "4845:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1545,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "4853:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1546,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "4859:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1543,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1551,
															1595
														],
														"referencedDeclaration": 1595,
														"src": "4823:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1542,
												"id": 1549,
												"nodeType": "Return",
												"src": "4816:94:7"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "4724:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "4740:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "4759:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:7"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "4792:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1540,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:7"
									},
									"scope": 1771,
									"src": "4693:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "5344:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1568,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1771",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1771",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1566,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1571,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1558,
																"src": "5387:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:7"
											},
											{
												"assignments": [
													1577,
													1579
												],
												"declarations": [
													{
														"constant": false,
														"id": 1577,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1594,
														"src": "5446:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1576,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1579,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1594,
														"src": "5460:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1578,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1586,
												"initialValue": {
													"arguments": [
														{
															"id": 1584,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "5513:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1580,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "5487:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1582,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1558,
																"src": "5506:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1588,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "5562:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1589,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "5570:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1590,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "5579:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1591,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "5591:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1587,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "5535:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1593,
												"nodeType": "Return",
												"src": "5528:76:7"
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "5205:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "5229:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "5256:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "5279:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:7"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "5330:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:7"
									},
									"scope": 1771,
									"src": "5165:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "5888:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1606,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "5924:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1607,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "5932:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1605,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1612,
															1641
														],
														"referencedDeclaration": 1641,
														"src": "5905:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1604,
												"id": 1610,
												"nodeType": "Return",
												"src": "5898:80:7"
											}
										]
									},
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "5816:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "5832:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1599,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:7"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "5874:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:7"
									},
									"scope": 1771,
									"src": "5788:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1640,
										"nodeType": "Block",
										"src": "6327:168:7",
										"statements": [
											{
												"assignments": [
													1625,
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1640,
														"src": "6338:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1624,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1640,
														"src": "6352:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1632,
												"initialValue": {
													"arguments": [
														{
															"id": 1630,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "6397:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1628,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "6379:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1634,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "6446:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1635,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "6454:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1636,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "6463:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1637,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "6475:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1633,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "6419:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1623,
												"id": 1639,
												"nodeType": "Return",
												"src": "6412:76:7"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "6206:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "6230:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "6257:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:7"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "6313:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:7"
									},
									"scope": 1771,
									"src": "6169:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "6771:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1652,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "6809:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1653,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "6817:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1651,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1658,
															1687
														],
														"referencedDeclaration": 1687,
														"src": "6788:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1656,
												"nodeType": "Return",
												"src": "6781:84:7"
											}
										]
									},
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "6704:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "6720:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1645,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:7"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "6757:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:7"
									},
									"scope": 1771,
									"src": "6674:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "7213:170:7",
										"statements": [
											{
												"assignments": [
													1671,
													1673
												],
												"declarations": [
													{
														"constant": false,
														"id": 1671,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1686,
														"src": "7224:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1670,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1673,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1686,
														"src": "7238:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1672,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1678,
												"initialValue": {
													"arguments": [
														{
															"id": 1676,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "7285:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1674,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "7265:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1680,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "7334:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1681,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "7342:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1682,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "7351:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1683,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "7363:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1679,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "7307:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1669,
												"id": 1685,
												"nodeType": "Return",
												"src": "7300:76:7"
											}
										]
									},
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "7097:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "7121:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "7148:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1664,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:7"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "7199:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:7"
									},
									"scope": 1771,
									"src": "7058:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "7865:434:7",
										"statements": [
											{
												"condition": {
													"id": 1701,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1692,
													"src": "7879:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1723,
													"nodeType": "Block",
													"src": "8235:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1719,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1694,
																		"src": "8257:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1720,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "8269:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1718,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "8249:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1722,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:7"
														}
													]
												},
												"id": 1724,
												"nodeType": "IfStatement",
												"src": "7875:418:7",
												"trueBody": {
													"id": 1717,
													"nodeType": "Block",
													"src": "7888:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1702,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1694,
																		"src": "7906:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1714,
															"nodeType": "IfStatement",
															"src": "7902:286:7",
															"trueBody": {
																"id": 1713,
																"nodeType": "Block",
																"src": "7930:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1708,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1690,
																							"src": "8132:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1707,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1459,
																						"src": "8121:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1710,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1706,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1712,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1715,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "8208:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1700,
															"id": 1716,
															"nodeType": "Return",
															"src": "8201:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "7716:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "7740:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "7762:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "7795:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1695,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:7"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "7851:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:7"
									},
									"scope": 1771,
									"src": "7671:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "8680:135:7",
										"statements": [
											{
												"condition": {
													"id": 1738,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1729,
													"src": "8694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1747,
													"nodeType": "Block",
													"src": "8751:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1743,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1731,
																		"src": "8773:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1744,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1733,
																		"src": "8785:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1742,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "8765:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1746,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:7"
														}
													]
												},
												"id": 1748,
												"nodeType": "IfStatement",
												"src": "8690:119:7",
												"trueBody": {
													"id": 1741,
													"nodeType": "Block",
													"src": "8703:42:7",
													"statements": [
														{
															"expression": {
																"id": 1739,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "8724:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1737,
															"id": 1740,
															"nodeType": "Return",
															"src": "8717:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "8555:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1728,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "8577:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "8610:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1732,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:7"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "8666:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:7"
									},
									"scope": 1771,
									"src": "8520:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "8904:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1757,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "8980:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1767,
													"nodeType": "Block",
													"src": "9310:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1764,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "9331:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1763,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1766,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:7"
														}
													]
												},
												"id": 1768,
												"nodeType": "IfStatement",
												"src": "8976:379:7",
												"trueBody": {
													"id": 1762,
													"nodeType": "Block",
													"src": "9003:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:7",
																"nodeType": "YulBlock",
																"src": "9161:133:7",
																"statements": [
																	{
																		"nativeSrc": "9179:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:7"
																			},
																			"nativeSrc": "9202:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:7",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:7",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:7"
																					},
																					"nativeSrc": "9243:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:7"
																			},
																			"nativeSrc": "9236:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:7"
																		},
																		"nativeSrc": "9236:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1752,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1752,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:7",
																	"valueSize": 1
																}
															],
															"id": 1761,
															"nodeType": "InlineAssembly",
															"src": "9152:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "8838:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "8863:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1753,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:7"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:7"
									},
									"scope": 1771,
									"src": "8821:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1772,
							"src": "194:9169:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1793
						]
					},
					"id": 1794,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1773,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1774,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1793,
							"linearizedBaseContracts": [
								1793
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1779,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1778,
												"id": 1781,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1793,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1788,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1787,
												"id": 1790,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1793,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1794,
							"src": "608:235:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			}
		}
	}
}